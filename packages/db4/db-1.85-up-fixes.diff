--- db.1.85/btree/bt_split.c.orig	Tue Jul 26 21:22:02 1994
+++ db.1.85/btree/bt_split.c	Tue Mar  2 22:17:04 2004
@@ -673,7 +673,8 @@
 		 * where we decide to try and copy too much onto the left page.
 		 * Make sure that doesn't happen.
 		 */
-		if (skip <= off && used + nbytes >= full) {
+		if (skip <= off &&
+		    used + nbytes + sizeof(indx_t) >= full || nxt == top - 1) {
 			--off;
 			break;
 		}
@@ -686,7 +687,7 @@
 			memmove((char *)l + l->upper, src, nbytes);
 		}
 
-		used += nbytes;
+		used += nbytes + sizeof(indx_t);
 		if (used >= half) {
 			if (!isbigkey || bigkeycnt == 3)
 				break;
--- db.1.85/btree/bt_page.c.orig	Thu Jul 14 04:29:02 1994
+++ db.1.85/btree/bt_page.c	Tue Mar  2 22:17:26 2004
@@ -65,6 +65,7 @@
 	h->prevpg = P_INVALID;
 	h->nextpg = t->bt_free;
 	t->bt_free = h->pgno;
+	F_SET(t, B_METADIRTY);
 
 	/* Make sure the page gets written back. */
 	return (mpool_put(t->bt_mp, h, MPOOL_DIRTY));
@@ -92,6 +93,7 @@
 	    (h = mpool_get(t->bt_mp, t->bt_free, 0)) != NULL) {
 		*npg = t->bt_free;
 		t->bt_free = h->nextpg;
+		F_SET(t, B_METADIRTY);
 		return (h);
 	}
 	return (mpool_new(t->bt_mp, npg));
--- db.1.85/PORT/linux/Makefile.orig	Thu Jul 14 04:43:16 1994
+++ db.1.85/PORT/linux/Makefile	Tue Mar  2 22:16:39 2004
@@ -15,8 +15,7 @@
 
 ${LIBDB}: ${OBJ1} ${OBJ2} ${OBJ3} ${OBJ4} ${OBJ5} ${MISC}
 	rm -f $@
-	ar cq $@ \
-	    `lorder ${OBJ1} ${OBJ2} ${OBJ3} ${OBJ4} ${OBJ5} ${MISC} | tsort`
+	ar cq $@ ${OBJ1} ${OBJ2} ${OBJ3} ${OBJ4} ${OBJ5} ${MISC}
 	ranlib $@
 
 clean:
