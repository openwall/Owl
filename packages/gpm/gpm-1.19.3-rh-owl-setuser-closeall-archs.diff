diff -urN gpm-1.19.3.orig/Makefile.in gpm-1.19.3/Makefile.in
--- gpm-1.19.3.orig/Makefile.in	Tue Jul 18 16:06:06 2000
+++ gpm-1.19.3/Makefile.in	Sat Jan  6 11:53:09 2001
@@ -50,7 +50,7 @@
 
 # Main portion: regular build rules
 
-GSRC = gpm.c gpn.c mice.c special.c twiddler.c synaptics.c
+GSRC = closeall.c gpm.c gpn.c mice.c special.c twiddler.c synaptics.c
 
 GOBJ = $(GSRC:.c=.o) debuglog.o 
 
@@ -112,6 +112,7 @@
 mouse-test:	mice.o twiddler.o synaptics.o
 
 $(PROG):	libgpm.a
+gpm-root:	closeall.o
 
 libgpm.so.@abi_full@:	$(PICS)
 	$(CC) @SOLDFLAGS@libgpm.so.@abi_lev@ \
diff -urN gpm-1.19.3.orig/closeall.c gpm-1.19.3/closeall.c
--- gpm-1.19.3.orig/closeall.c	Thu Jan  1 03:00:00 1970
+++ gpm-1.19.3/closeall.c	Sat Jan  6 11:23:13 2001
@@ -0,0 +1,27 @@
+#include <unistd.h>
+#include <errno.h>
+
+#ifdef __linux__
+#include <linux/limits.h>
+#endif
+
+int close_all(void)
+{
+	int fd, max;
+
+	max = sysconf(_SC_OPEN_MAX);
+	if (max <= 0)
+		return -1;
+
+#ifdef __linux__
+	if (max < NR_OPEN)
+		max = NR_OPEN;
+#endif
+
+	for (fd = 3; fd < max; fd++) {
+		if (close(fd) && errno != EBADF)
+			return -1;
+	}
+
+	return 0;
+}
diff -urN gpm-1.19.3.orig/gpm-root.c gpm-1.19.3/gpm-root.c
--- gpm-1.19.3.orig/gpm-root.c	Wed Apr 19 09:53:38 2000
+++ gpm-1.19.3/gpm-root.c	Sat Jan  6 11:12:38 2001
@@ -1,3 +1,4 @@
+#error This should be re-generated from the .y file.
 
 /*  A Bison parser, made from gpm-root.y
  by  GNU Bison version 1.25
diff -urN gpm-1.19.3.orig/gpm-root.y gpm-1.19.3/gpm-root.y
--- gpm-1.19.3.orig/gpm-root.y	Wed Apr 19 09:48:41 2000
+++ gpm-1.19.3/gpm-root.y	Sat Jan  6 11:50:55 2001
@@ -49,7 +49,8 @@
 #include <linux/limits.h>   /* OPEN_MAX */
 #include <linux/vt.h>       /* VT_ACTIVATE */
 #include <linux/keyboard.h> /* K_SHIFT */
-#include <utmp.h>         
+#include <utmp.h>
+#include <endian.h>
 
 #ifdef HAVE_SYS_SYSMACROS_H
 #include <sys/sysmacros.h>
@@ -64,6 +65,8 @@
 #define VCS_MAJOR	7
 #endif
 
+extern int close_all(void);
+
 #define MAX_NR_USER_CONSOLES 63 /* <linux/tty.h> needs __KERNEL__ */
 
 #include "gpmInt.h"             /* itz Thu Aug 13 14:10:26 PDT 1998
@@ -447,9 +450,10 @@
 /*====================================================================*/
 void f__fix(struct passwd *pass)
 {
-  setgid(pass->pw_gid);
-  initgroups(pass->pw_name, pass->pw_gid);
-  setuid(pass->pw_uid);
+  if (setgid(pass->pw_gid) < 0 ||
+      initgroups(pass->pw_name, pass->pw_gid) < 0 ||
+      setuid(pass->pw_uid) < 0)
+    exit(1);
   setenv("HOME",    pass->pw_dir, 1);
   setenv("LOGNAME", pass->pw_name,1);
   setenv("USER",    pass->pw_name,1);
@@ -525,7 +529,6 @@
 /*---------------------------------------------------------------------*/
 int f_bgcmd(int mode, DrawItem *self, int uid)
 {
-  int i;
   struct passwd *pass;
 
   switch (mode)
@@ -545,10 +548,11 @@
 	  if (!pass) exit(1);
 	  f__fix(pass); /* setgid(), setuid(), setenv(), ... */
 	  close(0); close(1); close(2);
-	  open("/dev/null",O_RDONLY); /* stdin  */
-	  open("/dev/tty0",O_WRONLY); /* stdout */
-	  dup(1);                     /* stderr */  
-	  for (i=3;i<OPEN_MAX; i++) close(i);
+	  if (open("/dev/null",O_RDONLY) != 0 || /* stdin  */
+	      open("/dev/tty0",O_WRONLY) != 1 || /* stdout */
+	      dup(1) != 2)                       /* stderr */
+	    exit(1);
+	  if (close_all()) exit(1);
 	  execl("/bin/sh","sh","-c",self->arg,(char *)NULL);
 	  exit(1); /* shouldn't happen */
 
@@ -623,11 +627,7 @@
 	case 0:
 	  /* child: exec getty */
 	  sprintf(name,"tty%i",vc);
-#ifdef __alpha__
-	  execl("/daemons/getty","getty","38400",name,(char *)NULL);
-#else
 	  execl("/sbin/mingetty","mingetty",name,(char *)NULL);
-#endif __alpha__
 	  exit(1); /* shouldn't happen */
 
         default:
@@ -1045,6 +1045,12 @@
 static int postcount;
 static Posted *activemenu;
 
+#if __BYTE_ORDER == __BIG_ENDIAN
+#define bigendian 1
+#else
+#define bigendian 0
+#endif
+
 Posted *postmenu(int fd, FILE *f, Draw *draw, int x, int y, int console)
 {
   Posted *new;
@@ -1062,9 +1068,9 @@
   lines=dump[0]; columns=dump[1];
   i=(columns*dump[3]+dump[2])*2+1; /* where to get it */
   if (i<0) i=1;
-  new->colorcell=dump[4+i];
+  new->colorcell=dump[4+i-bigendian];
   gpm_debug_log(LOG_DEBUG,"Colorcell=%02x (at %i,%i = %i)",
-                new->colorcell,dump[2],dump[3],i);
+                new->colorcell,dump[2],dump[3],i-bigendian);
 
   /* place the box relative to the mouse */
   if (!postcount) x -= draw->width/2; else x+=2;
@@ -1078,7 +1084,11 @@
   new->y=y; new->Y=y+draw->height-1;
 
   /* these definitions are dirty hacks, but they help in writing to the screen */
+#if __BYTE_ORDER == __BIG_ENDIAN
+#define PUTC(c,f,b)   (*(curr++)=((b)<<4)+(f),*(curr++)=(c))
+#else
 #define PUTC(c,f,b)   (*(curr++)=(c),*(curr++)=((b)<<4)+(f))
+#endif
 #define PUTS(s,f,b)   for(curr2=s;*curr2;PUTC(*(curr2++),f,b))
 #define GOTO(x,y)     (curr=dump+4+2*((y)*columns+(x)))
 
diff -urN gpm-1.19.3.orig/special.c gpm-1.19.3/special.c
--- gpm-1.19.3.orig/special.c	Tue Jan 18 00:34:00 2000
+++ gpm-1.19.3/special.c	Sat Jan  6 11:51:04 2001
@@ -38,6 +38,8 @@
 
 #include "gpmInt.h"
 
+extern int close_all(void);
+
 /*
  * This function is only called at button press, to avoid unnecessary
  * overhead due to function call at every mouse event
@@ -67,7 +69,7 @@
  */
 int processSpecial(Gpm_Event *event)
 {
-  char *command=NULL; int i;
+  char *command=NULL;
   FILE *consolef;
 
   if ((event->type & GPM_TRIPLE)
@@ -151,10 +153,11 @@
     
     case 0: /* child */
       close(0); close(1); close(2);
-      open("/dev/null",O_RDONLY); /* stdin  */
-      open("/dev/tty0",O_WRONLY); /* stdout */
-      dup(1);                     /* stderr */
-      for (i=3;i<OPEN_MAX; i++) close(i);
+      if (open("/dev/null",O_RDONLY) != 0 || /* stdin  */
+	  open("/dev/tty0",O_WRONLY) != 1 || /* stdout */
+	  dup(1) != 2)                       /* stderr */
+	exit(1);
+      if (close_all()) exit(1);
       execl("/bin/sh","sh","-c",command,(char *)NULL);
       exit(1); /* shouldn't happen */
       
