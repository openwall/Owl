diff -uNrpa grep-2.7.old/src/main.c grep-2.7/src/main.c
--- grep-2.7.old/src/main.c	2010-09-21 16:03:48 +0000
+++ grep-2.7/src/main.c	2010-09-21 16:29:41 +0000
@@ -274,6 +274,13 @@ static struct exclude *excluded_director
 static char const short_options[] =
 "0123456789A:B:C:D:EFGHIPTUVX:abcd:e:f:hiKLlm:noqRrsuvwxyZz";
 
+/* Default for `file_list' if no files are given on the command line. */
+static char *stdin_argv[] =
+{
+  "-", NULL
+};
+
+
 /* Non-boolean long options that have no corresponding short equivalents.  */
 enum
 {
@@ -509,7 +516,10 @@ fillbuf (size_t save, struct stats const
       /* Grow newsize until it is at least as great as minsize.  */
       for (newsize = bufalloc - pagesize - 1; newsize < minsize; newsize *= 2)
         if (newsize * 2 < newsize || newsize * 2 + pagesize + 1 < newsize * 2)
-          xalloc_die ();
+	  {
+	    errno = ENOMEM;
+	    return 0;
+	  }
 
       /* Try not to allocate more memory than the file size indicates,
          as that might cause unnecessary memory exhaustion if the file
@@ -531,7 +541,9 @@ fillbuf (size_t save, struct stats const
          for byte sentinels fore and aft.  */
       newalloc = newsize + pagesize + 1;
 
-      newbuf = bufalloc < newalloc ? xmalloc (bufalloc = newalloc) : buffer;
+      newbuf = bufalloc < newalloc ? malloc (bufalloc = newalloc) : buffer;
+      if (!newbuf)
+	return 0;
       readbuf = ALIGN_TO (newbuf + 1 + save, pagesize);
       bufbeg = readbuf - save;
       memmove (bufbeg, buffer + saved_offset, save);
@@ -1759,6 +1771,7 @@ main (int argc, char **argv)
   int opt, cc, status;
   int default_context;
   FILE *fp;
+  char **file_list;
 
   initialize_main (&argc, &argv);
   set_program_name (argv[0]);
@@ -2163,29 +2176,29 @@ main (int argc, char **argv)
   if (max_count == 0)
     exit (EXIT_FAILURE);
 
-  if (optind < argc)
+  file_list = (optind == argc ? stdin_argv : &argv[optind]);
+
+  status = 1;
+  while (1)
     {
-        status = 1;
-        do
-        {
-          char *file = argv[optind];
-          if ((included_patterns || excluded_patterns)
-              && !isdir (file))
-            {
-              if (included_patterns
-                  && excluded_file_name (included_patterns, file))
-                continue;
-              if (excluded_patterns
-                  && excluded_file_name (excluded_patterns, file))
-                continue;
-            }
-          status &= grepfile (STREQ (file, "-") ? (char *) NULL : file,
-                              &stats_base);
-        }
-        while ( ++optind < argc);
+      char *file = *file_list++;
+
+      if (file == NULL)
+       break;
+
+      if ((included_patterns || excluded_patterns)
+         && !isdir (file))
+       {
+         if (included_patterns
+             && excluded_file_name (included_patterns, file))
+           continue;
+         if (excluded_patterns
+             && excluded_file_name (excluded_patterns, file))
+           continue;
+       }
+      status &= grepfile (STREQ (file, "-")
+                         ? (char *) NULL : file, &stats_base);
     }
-  else
-    status = grepfile ((char *) NULL, &stats_base);
 
   /* We register via atexit() to test stdout.  */
   exit (errseen ? EXIT_TROUBLE : status);
