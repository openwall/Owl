diff -urN glibc-2.1.3.orig/nis/nss_compat/compat-initgroups.c glibc-2.1.3.rh/nis/nss_compat/compat-initgroups.c
--- glibc-2.1.3.orig/nis/nss_compat/compat-initgroups.c	Wed Dec 22 01:51:41 1999
+++ glibc-2.1.3.rh/nis/nss_compat/compat-initgroups.c	Fri Mar 17 23:54:59 2000
@@ -1,6 +1,6 @@
-/* Copyright (C) 1998, 1999 Free Software Foundation, Inc.
+/* Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
-   Contributed by Thorsten Kukuk <kukuk@vt.uni-paderborn.de>, 1998.
+   Contributed by Thorsten Kukuk <kukuk@suse.de>, 1998.
 
    The GNU C Library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public License as
@@ -93,15 +93,21 @@
       if (intern->start == NULL)
         {
           intern->start = malloc (sizeof (struct response_t));
+	  if (intern->start == NULL)
+	    return YP_FALSE;
           intern->next = intern->start;
         }
       else
         {
           intern->next->next = malloc (sizeof (struct response_t));
+	  if (intern->next->next == NULL)
+	    return YP_FALSE;
           intern->next = intern->next->next;
         }
       intern->next->next = NULL;
       intern->next->val = malloc (invallen + 1);
+      if (intern->next->val == NULL)
+	return YP_FALSE;
       strncpy (intern->next->val, inval, invallen);
       intern->next->val[invallen] = '\0';
     }
diff -urN glibc-2.1.3.orig/nis/nss_nis/nis-ethers.c glibc-2.1.3.rh/nis/nss_nis/nis-ethers.c
--- glibc-2.1.3.orig/nis/nss_nis/nis-ethers.c	Wed Dec 22 01:51:41 1999
+++ glibc-2.1.3.rh/nis/nss_nis/nis-ethers.c	Fri Mar 17 23:54:59 2000
@@ -1,4 +1,4 @@
-/* Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
+/* Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Contributed by Thorsten Kukuk <kukuk@suse.de>, 1996.
 
@@ -64,15 +64,21 @@
       if (start == NULL)
 	{
 	  start = malloc (sizeof (struct response));
+	  if (start == NULL)
+	    return YP_FALSE;
 	  next = start;
 	}
       else
 	{
 	  next->next = malloc (sizeof (struct response));
+	  if (next->next == NULL)
+	    return YP_FALSE;
 	  next = next->next;
 	}
       next->next = NULL;
       next->val = malloc (invallen + 1);
+      if (next->val == NULL)
+	return YP_FALSE;
       strncpy (next->val, inval, invallen);
       next->val[invallen] = '\0';
     }
diff -urN glibc-2.1.3.orig/nis/nss_nis/nis-initgroups.c glibc-2.1.3.rh/nis/nss_nis/nis-initgroups.c
--- glibc-2.1.3.orig/nis/nss_nis/nis-initgroups.c	Mon Aug  2 01:09:36 1999
+++ glibc-2.1.3.rh/nis/nss_nis/nis-initgroups.c	Fri Mar 17 23:54:59 2000
@@ -1,6 +1,6 @@
-/* Copyright (C) 1998, 1999 Free Software Foundation, Inc.
+/* Copyright (C) 1998, 1999, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
-   Contributed by Thorsten Kukuk <kukuk@vt.uni-paderborn.de>, 1998.
+   Contributed by Thorsten Kukuk <kukuk@suse.de>, 1998.
 
    The GNU C Library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public License as
@@ -61,15 +61,21 @@
       if (intern->start == NULL)
         {
           intern->start = malloc (sizeof (struct response_t));
+	  if (intern->start == NULL)
+	    return YP_FALSE;
           intern->next = intern->start;
         }
       else
         {
           intern->next->next = malloc (sizeof (struct response_t));
+	  if (intern->next->next == NULL)
+	    return YP_FALSE;
           intern->next = intern->next->next;
         }
       intern->next->next = NULL;
       intern->next->val = malloc (invallen + 1);
+      if (intern->next->val == NULL)
+	return YP_FALSE;
       strncpy (intern->next->val, inval, invallen);
       intern->next->val[invallen] = '\0';
     }
diff -urN glibc-2.1.3.orig/nis/nss_nis/nis-netgrp.c glibc-2.1.3.rh/nis/nss_nis/nis-netgrp.c
--- glibc-2.1.3.orig/nis/nss_nis/nis-netgrp.c	Wed Dec 22 01:51:41 1999
+++ glibc-2.1.3.rh/nis/nss_nis/nis-netgrp.c	Fri Mar 17 23:54:59 2000
@@ -1,4 +1,4 @@
-/* Copyright (C) 1996, 1997, 1999 Free Software Foundation, Inc.
+/* Copyright (C) 1996, 1997, 1999, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Contributed by Thorsten Kukuk <kukuk@suse.de>, 1996.
 
@@ -74,9 +74,8 @@
 				&result, &len));
   if (status == NSS_STATUS_SUCCESS)
     {
-      if (len > 0)
+      if (len > 0 && (data = malloc (len + 1)) != NULL)
 	{
-	  data = malloc (len + 1);
 	  data_size = len;
 	  cursor = strncpy (data, result, len + 1);
 	  data[len] = '\0';
diff -urN glibc-2.1.3.orig/nis/nss_nis/nis-proto.c glibc-2.1.3.rh/nis/nss_nis/nis-proto.c
--- glibc-2.1.3.orig/nis/nss_nis/nis-proto.c	Wed Aug 19 02:24:51 1998
+++ glibc-2.1.3.rh/nis/nss_nis/nis-proto.c	Fri Mar 17 23:54:59 2000
@@ -1,6 +1,6 @@
-/* Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.
+/* Copyright (C) 1996, 1997, 1998, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
-   Contributed by Thorsten Kukuk <kukuk@vt.uni-paderborn.de>, 1996.
+   Contributed by Thorsten Kukuk <kukuk@suse.de>, 1996.
 
    The GNU C Library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public License as
@@ -56,15 +56,21 @@
       if (start == NULL)
         {
           start = malloc (sizeof (struct response));
+	  if (start == NULL)
+	    return YP_FALSE;
           next = start;
         }
       else
         {
           next->next = malloc (sizeof (struct response));
+	  if (next->next == NULL)
+	    return YP_FALSE;
           next = next->next;
         }
       next->next = NULL;
       next->val = malloc (invallen + 1);
+      if (next->val == NULL)
+	return YP_FALSE;
       strncpy (next->val, inval, invallen);
       next->val[invallen] = '\0';
     }
diff -urN glibc-2.1.3.orig/nis/nss_nis/nis-rpc.c glibc-2.1.3.rh/nis/nss_nis/nis-rpc.c
--- glibc-2.1.3.orig/nis/nss_nis/nis-rpc.c	Wed Aug 19 02:24:54 1998
+++ glibc-2.1.3.rh/nis/nss_nis/nis-rpc.c	Fri Mar 17 23:54:59 2000
@@ -1,6 +1,6 @@
-/* Copyright (C) 1996, 1997, 1998 Free Software Foundation, Inc.
+/* Copyright (C) 1996, 1997, 1998, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
-   Contributed by Thorsten Kukuk <kukuk@vt.uni-paderborn.de>, 1996.
+   Contributed by Thorsten Kukuk <kukuk@suse.de>, 1996.
 
    The GNU C Library is free software; you can redistribute it and/or
    modify it under the terms of the GNU Library General Public License as
@@ -64,15 +64,21 @@
       if (intern->start == NULL)
         {
           intern->start = malloc (sizeof (struct response_t));
+	  if (intern->start == NULL)
+	    return YP_FALSE;
           intern->next = intern->start;
         }
       else
         {
           intern->next->next = malloc (sizeof (struct response_t));
+	  if (intern->next->next == NULL)
+	    return YP_FALSE;
           intern->next = intern->next->next;
         }
       intern->next->next = NULL;
       intern->next->val = malloc (invallen + 1);
+      if (intern->next->val == NULL)
+	return YP_FALSE;
       strncpy (intern->next->val, inval, invallen);
       intern->next->val[invallen] = '\0';
     }
diff -urN glibc-2.1.3.orig/nis/nss_nis/nis-service.c glibc-2.1.3.rh/nis/nss_nis/nis-service.c
--- glibc-2.1.3.orig/nis/nss_nis/nis-service.c	Wed Dec 22 01:51:41 1999
+++ glibc-2.1.3.rh/nis/nss_nis/nis-service.c	Fri Mar 17 23:54:59 2000
@@ -1,4 +1,4 @@
-/* Copyright (C) 1996, 1997, 1998, 1999 Free Software Foundation, Inc.
+/* Copyright (C) 1996, 1997, 1998, 1999, 2000 Free Software Foundation, Inc.
    This file is part of the GNU C Library.
    Contributed by Thorsten Kukuk <kukuk@suse.de>, 1996.
 
@@ -65,15 +65,21 @@
       if (intern->start == NULL)
         {
           intern->start = malloc (sizeof (struct response_t));
+	  if (intern->start == NULL)
+	    return YP_FALSE; /* We have no error code for out of memory */
           intern->next = intern->start;
         }
       else
         {
           intern->next->next = malloc (sizeof (struct response_t));
+	  if (intern->next->next == NULL)
+	    return YP_FALSE; /* We have no error code for out of memory */
           intern->next = intern->next->next;
         }
       intern->next->next = NULL;
       intern->next->val = malloc (invallen + 1);
+      if (intern->next->val == NULL)
+	return YP_FALSE; /* We have no error code for out of memory */
       strncpy (intern->next->val, inval, invallen);
       intern->next->val[invallen] = '\0';
     }
