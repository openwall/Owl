This patch is a back-port from the glibc CVS combining the relevant
changes between revisions 1.19 to 1.20 and 1.22 to 1.23 of condvar.c,
with the last one dated 2000/04/17.

diff -urp glibc-2.1.3.rh/linuxthreads/condvar.c glibc-2.1.3/linuxthreads/condvar.c
--- glibc-2.1.3.rh/linuxthreads/condvar.c	Sun Jun 22 02:44:04 2003
+++ glibc-2.1.3/linuxthreads/condvar.c	Sun Jun 22 03:36:28 2003
@@ -78,7 +78,7 @@ int pthread_cond_wait(pthread_cond_t *co
   int already_canceled = 0;
 
   /* Check whether the mutex is locked and owned by this thread.  */
-  if (mutex->__m_owner != self)
+  if (mutex->__m_kind != PTHREAD_MUTEX_FAST_NP && mutex->__m_owner != self)
     return EINVAL;
 
   /* Set up extrication interface */
@@ -144,7 +144,7 @@ pthread_cond_timedwait_relative_old(pthr
   pthread_extricate_if extr;
 
   /* Check whether the mutex is locked and owned by this thread.  */
-  if (mutex->__m_owner != self)
+  if (mutex->__m_kind != PTHREAD_MUTEX_FAST_NP && mutex->__m_owner != self)
     return EINVAL;
 
   /* Set up extrication interface */
@@ -275,7 +275,7 @@ pthread_cond_timedwait_relative_new(pthr
   pthread_extricate_if extr;
 
   /* Check whether the mutex is locked and owned by this thread.  */
-  if (mutex->__m_owner != self)
+  if (mutex->__m_kind != PTHREAD_MUTEX_FAST_NP && mutex->__m_owner != self)
     return EINVAL;
 
   /* Set up extrication interface */
