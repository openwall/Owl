--- glibc-2.1.3/misc/syslog.c.orig	Sat Feb 12 02:49:57 2000
+++ glibc-2.1.3/misc/syslog.c	Thu Nov  8 02:34:37 2001
@@ -68,6 +68,7 @@
 static int	connected;		/* have done connect */
 static int	LogStat;		/* status bits, set by openlog() */
 static const char *LogTag;		/* string to tag the entry with */
+static char	*LogTagDynamic;		/* same as LogTag if malloc()'ed */
 static int	LogFacility = LOG_USER;	/* default facility code */
 static int	LogMask = 0xff;		/* mask of priorities to be logged */
 extern char	*__progname;		/* Program name, from crt0. */
@@ -107,6 +108,45 @@
 	va_end(ap);
 }
 
+static void
+init_syslog_ident(void)
+{
+	char *ident, *p;
+	uid_t uid, euid;
+	gid_t gid, egid;
+
+	LogTagDynamic = NULL;
+
+	if (!__libc_enable_secure) {
+		LogTag = __progname;
+		return;
+	}
+
+	uid = getuid();
+	euid = geteuid();
+	gid = getgid();
+	egid = getegid();
+	if (uid != euid || gid == egid)
+		asprintf(&ident,
+		    "UNSPECIFIED (__progname=\"%s\" uid=%u euid=%u)",
+		    __progname, uid, euid);
+	else
+		asprintf(&ident,
+		    "UNSPECIFIED (__progname=\"%s\" uid=%u gid=%u egid=%u)",
+		    __progname, uid, gid, egid);
+	if (!ident) {
+		LogTag = "NO MEMORY";
+		return;
+	}
+
+	for (p = ident; *p; p++)
+		if ((*p & 0x7f) < 0x20 || *p == 0x7f || *p == '"')
+			*p = '?';
+
+	LogTag = ident;
+	LogTagDynamic = ident;
+}
+
 void
 vsyslog(pri, fmt, ap)
 	int pri;
@@ -155,8 +195,18 @@
 			       "%h %e %T ", __localtime_r (&now, &now_tm));
 #endif
 	msgoff = ftell (f);
+
+	/* Protect against multiple users.  */
+	__libc_cleanup_region_start (
+	  (void (*) __P ((void *))) __libc_mutex_unlock, &syslog_lock);
+	__libc_lock_lock (syslog_lock);
+
 	if (LogTag == NULL)
-	  LogTag = __progname;
+	  init_syslog_ident();
+
+	/* Free the lock.  */
+	__libc_cleanup_region_end (1);
+
 	if (LogTag != NULL)
 	  fputs_unlocked (LogTag, f);
 	if (LogStat & LOG_PID)
@@ -246,8 +296,12 @@
 internal_function
 openlog_internal(const char *ident, int logstat, int logfac)
 {
-	if (ident != NULL)
+	if (ident != NULL) {
+		if (LogTagDynamic)
+			free(LogTagDynamic);
+		LogTagDynamic = NULL;
 		LogTag = ident;
+	}
 	LogStat = logstat;
 	if (logfac != 0 && (logfac &~ LOG_FACMASK) == 0)
 		LogFacility = logfac;
@@ -328,6 +382,9 @@
   __libc_lock_lock (syslog_lock);
 
   closelog_internal ();
+  if (LogTagDynamic)
+    free(LogTagDynamic);
+  LogTagDynamic = NULL;
   LogTag = NULL;
   LogType = SOCK_DGRAM; /* this is the default */
   
