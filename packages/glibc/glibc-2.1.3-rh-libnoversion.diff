diff -urN glibc-2.1.3.orig/elf/rtld.c glibc-2.1.3.rh/elf/rtld.c
--- glibc-2.1.3.orig/elf/rtld.c	Wed Feb 23 09:02:47 2000
+++ glibc-2.1.3.rh/elf/rtld.c	Wed Mar 15 22:02:57 2000
@@ -758,6 +758,60 @@
       __munmap (file, file_size);
     }
 
+
+  /*
+   * Modifications by Red Hat Software
+   *
+   * Deal with the broken binaries from the non-versioned ages of glibc.
+   * If a binary does not have version information enebled, we assume that
+   * it is a glibc 2.0 binary andwe load a compatibility library to try to
+   * overcome binary incompatibilities.
+   *			Blame: gafton@redhat.com
+   */
+#define LIB_NOVERSION "/lib/libNoVersion.so.1"
+
+  if (_dl_loaded->l_info[DT_NUM + DT_PROCNUM + DT_VERSIONTAGIDX (DT_VERNEED)] == NULL) {
+      struct link_map *new_map = NULL;
+      struct stat test_st;
+      int test_fd;
+      int can_load;
+
+      HP_TIMING_NOW (start);
+
+/*       _dl_sysdep_message("Loading compatibility library... ", NULL); */
+
+      can_load = 1;
+      test_fd = __open (LIB_NOVERSION, O_RDONLY);
+      if (test_fd < 0) {
+	  can_load = 0;
+/* 	  _dl_sysdep_message(" Can't find " LIB_NOVERSION "\n",  NULL); */
+      } else {
+	  if (__fxstat (_STAT_VER, test_fd, &test_st) < 0 || test_st.st_size == 0) {
+	      can_load = 0;
+/* 	      _dl_sysdep_message(" Can't stat " LIB_NOVERSION "\n",  NULL); */
+	  }
+      }
+
+      if (test_fd >= 0) /* open did no fail.. */
+	  __close(test_fd); /* avoid fd leaks */
+
+      if (can_load != 0) {
+	  new_map = _dl_map_object (_dl_loaded, LIB_NOVERSION,
+				    1, lt_library, 0);
+	  if (new_map->l_opencount == 1) {
+	      /* It is no duplicate.  */
+	      ++npreloads;
+/* 	      _dl_sysdep_message(" DONE\n", NULL); */
+	  } else {
+/* 	      _dl_sysdep_message(" FAILED\n", NULL); */
+	  }
+      }
+
+      HP_TIMING_NOW (stop);
+      HP_TIMING_DIFF (diff, start, stop);
+      HP_TIMING_ACCUM_NT (load_time, diff);
+  }
+
   if (npreloads != 0)
     {
       /* Set up PRELOADS with a vector of the preloaded libraries.  */
@@ -777,7 +831,7 @@
      specified some libraries to load, these are inserted before the actual
      dependencies in the executable's searchlist for symbol resolution.  */
   HP_TIMING_NOW (start);
-  _dl_map_object_deps (_dl_loaded, preloads, npreloads, mode == trace, 0);
+  _dl_map_object_deps (_dl_loaded, preloads, npreloads, mode == trace, 0);
   HP_TIMING_NOW (stop);
   HP_TIMING_DIFF (diff, start, stop);
   HP_TIMING_ACCUM_NT (load_time, diff);
