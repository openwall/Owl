diff -ur shadow-4.0.0.orig/src/chage.c shadow-4.0.0/src/chage.c
--- shadow-4.0.0.orig/src/chage.c	Mon Oct  9 22:39:50 2000
+++ shadow-4.0.0/src/chage.c	Sun Nov  4 07:55:27 2001
@@ -65,7 +65,6 @@
 #endif	/* SHADOWPWD */
 
 static char	*Prog;
-static int amroot;
 
 #ifdef	AGING	/*{*/
 
@@ -73,6 +72,8 @@
  * Global variables
  */
 
+static int locks;
+
 static long	mindays;
 static long	maxdays;
 static long	lastday;
@@ -400,6 +401,7 @@
 	char	new_age[5];
 #endif
 	uid_t ruid;
+	int amroot, pwrw;
 	const struct passwd *pw;
 	struct passwd pwent;
 	char	name[BUFSIZ];
@@ -551,18 +553,28 @@
 	}
 
 	/*
+	 * We use locks for read-write accesses only (locks implies amroot,
+	 * but amroot doesn't imply locks).
+	 */
+	locks = !lflg;
+
+	/*
 	 * Lock and open the password file.  This loads all of the
 	 * password file entries into memory.  Then we get a pointer
 	 * to the password file entry for the requested user.
 	 */
-	/* We don't lock the password file if we are not root */
-	if (amroot && !pw_lock()) {
+#ifndef SHADOWPWD
+	if (locks && !pw_lock()) {
 		fprintf(stderr, _("%s: can't lock password file\n"), Prog);
 		SYSLOG((LOG_ERR, LOCK_FAIL, PASSWD_FILE));
 		closelog();
 		exit(1);
 	}
-	if (!pw_open((!amroot || lflg) ? O_RDONLY:O_RDWR)) {
+	pwrw = locks;
+#else
+	pwrw = 0;
+#endif
+	if (!pw_open(pwrw ? O_RDWR : O_RDONLY)) {
 		fprintf(stderr, _("%s: can't open password file\n"), Prog);
 		cleanup(1);
 		SYSLOG((LOG_ERR, OPEN_FAIL, PASSWD_FILE));
@@ -587,15 +599,14 @@
 	 * a new entry will be created for this user if one does
 	 * not exist already.
 	 */
-	/* We don't lock the shadow file if we are not root */
-	if (amroot && !spw_lock()) {
+	if (locks && !spw_lock()) {
 		fprintf(stderr, _("%s: can't lock shadow password file\n"), Prog);
 		cleanup(1);
 		SYSLOG((LOG_ERR, LOCK_FAIL, SHADOW_FILE));
 		closelog();
 		exit(1);
 	}
-	if (!spw_open((!amroot || lflg) ? O_RDONLY : O_RDWR)) {
+	if (!spw_open(locks ? O_RDWR : O_RDONLY)) {
 		fprintf(stderr, _("%s: can't open shadow password file\n"), Prog);
 		cleanup(2);
 		SYSLOG((LOG_ERR, OPEN_FAIL, SHADOW_FILE));
@@ -874,12 +885,14 @@
 	switch (state) {
 	case 2:
 #ifdef	SHADOWPWD
-		if (amroot)
+		if (locks)
 			spw_unlock();
 #endif
 	case 1:
-		if (amroot)
+#ifndef SHADOWPWD
+		if (locks)
 			pw_unlock();
+#endif
 	case 0:
 		break;
 	}
