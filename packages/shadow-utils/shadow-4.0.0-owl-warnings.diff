diff -ur shadow-4.0.0.orig/lib/getpass.c shadow-4.0.0/lib/getpass.c
--- shadow-4.0.0.orig/lib/getpass.c	Fri Aug 27 23:02:51 1999
+++ shadow-4.0.0/lib/getpass.c	Sun Nov 11 03:48:56 2001
@@ -267,7 +267,9 @@
 #else
 	(void) signal (SIGINT, old_signal);
 #endif
+#if 0
 out2:
+#endif
 	if (tty_opened)
 		(void) fclose(ifp);
 
diff -ur shadow-4.0.0.orig/libmisc/setupenv.c shadow-4.0.0/libmisc/setupenv.c
--- shadow-4.0.0.orig/libmisc/setupenv.c	Sat Aug 26 22:27:17 2000
+++ shadow-4.0.0/libmisc/setupenv.c	Sun Nov 11 03:48:56 2001
@@ -59,6 +59,7 @@
 }
 
 
+#ifndef USE_PAM
 static void
 read_env_file(const char *filename)
 {
@@ -176,6 +177,7 @@
 	}
 	fclose(fp);
 }
+#endif
 
 /*
  *	change to the user's home directory
@@ -186,7 +188,10 @@
 void
 setup_env(struct passwd *info)
 {
-	char *cp, *envf;
+	char *cp;
+#ifndef USE_PAM
+	char *envf;
+#endif
 
 	/*
 	 * Change the current working directory to be the home directory
diff -ur shadow-4.0.0.orig/src/login.c shadow-4.0.0/src/login.c
--- shadow-4.0.0.orig/src/login.c	Fri Jun 29 00:47:06 2001
+++ shadow-4.0.0/src/login.c	Sun Nov 11 03:51:22 2001
@@ -160,7 +160,9 @@
 #define	RETRIES	3
 #endif
 
+#ifndef USE_PAM
 static struct faillog faillog;
+#endif
 
 #define	NO_SHADOW	"no shadow password for `%s'%s\n"
 #define	BAD_PASSWD	"invalid password for `%s'%s\n"
@@ -178,9 +180,9 @@
 /* local function prototypes */
 static void usage(void);
 static void setup_tty(void);
-static void bad_time_notify(void);
 static void check_flags(int, char * const *);
 #ifndef USE_PAM
+static void bad_time_notify(void);
 static void check_nologin(void);
 #endif
 static void init_env(void);
@@ -266,6 +268,24 @@
 }
 
 
+static void
+check_flags(int argc, char * const *argv)
+{
+	int arg;
+
+	/*
+	 * Check the flags for proper form.  Every argument starting with
+	 * "-" must be exactly two characters long.  This closes all the
+	 * clever rlogin, telnet, and getty holes.
+	 */
+	for (arg = 1; arg < argc; arg++) {
+		if (argv[arg][0] == '-' && strlen(argv[arg]) > 2)
+			usage();
+	}
+}
+
+
+#ifndef USE_PAM
 /*
  * Tell the user that this is not the right time to login at this tty
  */
@@ -292,23 +312,6 @@
 
 
 static void
-check_flags(int argc, char * const *argv)
-{
-	int arg;
-
-	/*
-	 * Check the flags for proper form.  Every argument starting with
-	 * "-" must be exactly two characters long.  This closes all the
-	 * clever rlogin, telnet, and getty holes.
-	 */
-	for (arg = 1; arg < argc; arg++) {
-		if (argv[arg][0] == '-' && strlen(argv[arg]) > 2)
-			usage();
-	}
-}
-
-#ifndef USE_PAM
-static void
 check_nologin(void)
 {
 	char *fname;
@@ -421,7 +424,7 @@
 #ifdef RLOGIN
 	char	term[128] = "";
 #endif
-#ifdef HAVE_STRFTIME
+#if defined(HAVE_STRFTIME) && !defined(USE_PAM)
 	char ptime[80];
 #endif
 	int	reason = PW_LOGIN;
@@ -443,7 +446,7 @@
 	pid_t child;
 	char *pam_user;
 #endif /* USE_PAM */
-#ifdef	SHADOWPWD
+#if defined(SHADOWPWD) && !defined(USE_PAM)
 	struct	spwd	*spwd=NULL;
 #endif
 #ifdef RADIUS
@@ -1189,7 +1192,6 @@
 
 #ifdef USE_PAM
 	{
-		int i;
 		const char * const * env;
 
 		env = (const char * const *) pam_getenvlist(pamh);
diff -ur shadow-4.0.0.orig/src/useradd.c shadow-4.0.0/src/useradd.c
--- shadow-4.0.0.orig/src/useradd.c	Fri Sep  7 19:12:54 2001
+++ shadow-4.0.0/src/useradd.c	Sun Nov 11 03:48:56 2001
@@ -125,8 +125,7 @@
 	kflg = 0, /* specify a directory to fill new user directory */
 	fflg = 0, /* days until account with expired password is locked */
 	eflg = 0, /* days since 1970-01-01 when account is locked */
-	Dflg = 0, /* set/show new user default values */
-	nflg = 0; /* create a group having the same name as the user */
+	Dflg = 0; /* set/show new user default values */
 
 #ifdef AUTH_METHODS
 static int Aflg = 0; /* specify authentication method for user */
