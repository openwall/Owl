diff -ur shadow-4.0.0-owl-man/lib/getdef.c shadow-4.0.0/lib/getdef.c
--- shadow-4.0.0-owl-man/lib/getdef.c	Sat Aug 26 22:27:17 2000
+++ shadow-4.0.0/lib/getdef.c	Sun Nov 11 09:45:52 2001
@@ -62,6 +62,8 @@
 	{ "CONSOLE_GROUPS",		NULL },
 	{ "CRACKLIB_DICTPATH",		NULL },
 	{ "CREATE_HOME",		NULL },
+	{ "CRYPT_PREFIX",		NULL },
+	{ "CRYPT_ROUNDS",		NULL },
 	{ "DEFAULT_HOME",		NULL },
 	{ "DIALUPS_CHECK_ENAB",		NULL },
 	{ "ENVIRON_FILE",		NULL },
diff -ur shadow-4.0.0-owl-man/libmisc/salt.c shadow-4.0.0/libmisc/salt.c
--- shadow-4.0.0-owl-man/libmisc/salt.c	Mon Dec  8 02:27:09 1997
+++ shadow-4.0.0/libmisc/salt.c	Sun Nov 11 09:45:52 2001
@@ -1,5 +1,76 @@
 /*
  * salt.c - generate a random salt string for crypt()
+ */
+
+#define _OW_SOURCE
+#include <stdio.h>
+#include <string.h>
+#include <fcntl.h>
+#include <unistd.h>
+#include <errno.h>
+#include <crypt.h>
+
+#include "getdef.h"
+
+#define RANDOM_DEVICE			"/dev/urandom"
+
+static int read_loop(int fd, char *buffer, int count)
+{
+	int offset, block;
+
+	offset = 0;
+	while (count > 0) {
+		block = read(fd, &buffer[offset], count);
+
+		if (block < 0) {
+			if (errno == EINTR) continue;
+			return block;
+		}
+		if (!block) return offset;
+
+		offset += block;
+		count -= block;
+	}
+
+	return offset;
+}
+
+char *
+crypt_make_salt(void)
+{
+	int fd;
+	char entropy[16];
+	char *retval;
+
+	fd = open(RANDOM_DEVICE, O_RDONLY);
+	if (fd < 0) {
+		perror("open: " RANDOM_DEVICE);
+		exit(1);
+	}
+
+	if (read_loop(fd, entropy, sizeof(entropy)) != sizeof(entropy)) {
+		close(fd);
+		fprintf(stderr, "Unable to obtain entropy from %s\n",
+			RANDOM_DEVICE);
+		exit(1);
+	}
+
+	close(fd);
+
+	retval = crypt_gensalt(getdef_str("CRYPT_PREFIX") ?: "",
+		getdef_num("CRYPT_ROUNDS", 0), entropy, sizeof(entropy));
+	memset(entropy, 0, sizeof(entropy));
+	if (!retval) {
+		fprintf(stderr, "Unable to generate a salt, "
+			"check your CRYPT_PREFIX and CRYPT_ROUNDS settings.\n");
+		exit(1);
+	}
+
+	return retval;
+}
+
+#if 0
+/*
  *
  * Written by Marek Michalkiewicz <marekm@i17linuxb.ists.pwr.wroc.pl>,
  * public domain.
@@ -67,4 +138,5 @@
 	result[2] = '\0';
 	return result;
 }
+#endif
 #endif
diff -ur shadow-4.0.0-owl-man/man/login.defs.5 shadow-4.0.0/man/login.defs.5
--- shadow-4.0.0-owl-man/man/login.defs.5	Sun Nov 11 07:55:52 2001
+++ shadow-4.0.0/man/login.defs.5	Sun Nov 11 09:46:18 2001
@@ -27,12 +27,15 @@
 .\"
 .\"	$Id: login.defs.5,v 1.7 2000/08/26 18:27:17 marekm Exp $
 .\"
+.\" 2001/11/11	Solar Designer <solar@owl.openwall.com>
+.\" Documented CRYPT_PREFIX and CRYPT_ROUNDS.
+.\"
 .\" 2001/06/15	Solar Designer <solar@owl.openwall.com>
 .\" Removed the descriptions of most parameters as only a small subset is
 .\" actually used on Owl, corrected those which remain, and wrote whatever
 .\" was missing.
 .\"
-.TH LOGIN.DEFS 5
+.TH LOGIN.DEFS 5 "11 November 2001"
 .SH NAME
 /etc/login.defs \- shadow password suite configuration
 .SH DESCRIPTION
@@ -91,6 +94,15 @@
 This defines whether useradd should create home directories for users by
 default.  This option is OR'ed with the -m flag on useradd command line.
 .\"
+.IP "CRYPT_PREFIX (string)"
+.IP "CRYPT_ROUNDS (number)"
+The password hashing method and iteration count to use for group passwords
+that may be set with
+.BR gpasswd (1).
+Please refer to
+.BR crypt (3)
+for information on supported password hashing methods.
+.\"
 .IP "GID_MAX (number)"
 .IP "GID_MIN (number)"
 Range of group IDs to choose from for the
@@ -144,6 +156,8 @@
 CHFN_AUTH CHFN_RESTRICT
 .IP chsh 12
 CHFN_AUTH
+.IP gpasswd 12
+CRYPT_PREFIX CRYPT_ROUNDS
 .IP groupadd 12
 GID_MAX GID_MIN
 .IP newusers 12
@@ -175,9 +189,11 @@
 .BR su (1).
 Please refer to the corresponding PAM configuration files instead.
 .SH SEE ALSO
+.BR gpasswd (1),
 .BR login (1),
 .BR passwd (1),
 .BR su (1),
+.BR crypt (3),
 .BR passwd (5),
 .BR shadow (5),
 .BR pam (8)
