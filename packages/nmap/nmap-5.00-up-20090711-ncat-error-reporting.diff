r14163 | david | 2009-07-11 00:08:41 +0400 (Sat, 11 Jul 2009) | 6 lines

[Ncat] Ncat now prints a message like "Connection refused." by
default when a socket error occurs. This used to require -v, but
printing no message at all could make a failed connection look like
success in a case like
  ncat remote < short-file

------------------------------------------------------------------------
r14162 | david | 2009-07-11 00:03:30 +0400 (Sat, 11 Jul 2009) | 4 lines

Use nse_errorcode, not socket_errno, to get the error code from an Nsock
event. socket_errno just returns errno, which may have changed since the
socket error occurred.

Index: ncat/ncat_connect.c
===================================================================
--- ncat/ncat_connect.c	(revision 14161)
+++ ncat/ncat_connect.c	(revision 14163)
@@ -102,7 +102,6 @@
 #include <stdlib.h>
 #include <string.h>
 #include <stdio.h>
-#include <errno.h>
 
 #ifdef HAVE_OPENSSL
 #include <openssl/ssl.h>
@@ -522,21 +521,11 @@
             nsi_delete(cs->sock_nsi, NSOCK_PENDING_NOTIFY);
         }
     } else if (status == NSE_STATUS_ERROR) {
-        if (socket_errno() == EINPROGRESS)
-            /* XXX: this is weird. errno always seems to be incorrect on ret from nsock. */
-            errno = ECONNREFUSED;
-        if (socket_errno() == EINTR) {
-            sleep(1);
-        } else if (socket_errno() != 0) {
-            if (o.verbose)
-                loguser("%s.\n", socket_strerror(socket_errno()));
-            exit(1);
-        }
-    } else if (status == NSE_STATUS_TIMEOUT){
-            errno = ETIMEDOUT;
-            if (o.verbose)
-                loguser("%s.\n", socket_strerror(socket_errno()));
-            exit(1);
+        loguser("%s.\n", socket_strerror(nse_errorcode(evt)));
+        exit(1);
+    } else if (status == NSE_STATUS_TIMEOUT) {
+        loguser("%s.\n", socket_strerror(ETIMEDOUT));
+        exit(1);
     }
 
     return;
