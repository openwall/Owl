FC patch from Peter Vrabec to fix extracting sparse files to vfat-like filesystems (RH#179507)

--- tar/src/system.c
+++ tar/src/system.c
@@ -251,7 +251,25 @@ int
 sys_truncate (int fd)
 {
   off_t pos = lseek (fd, (off_t) 0, SEEK_CUR);
-  return pos < 0 ? -1 : ftruncate (fd, pos);
+
+  if (pos < 0)
+    return -1;
+
+  if (ftruncate (fd, pos) && errno == EPERM) {
+    /*
+     * ftruncate may fail to grow the size of a file with some OS and
+     * filesystem combinations.  Linux and vfat/fat is one example.
+     * If this is the case do a write to grow the file to the desired length.
+     */
+    struct stat st;
+
+    if (fstat (fd, &st) ||
+        st.st_size >= pos ||
+        lseek (fd, pos - 1, SEEK_SET) == (off_t)-1 ||
+        write (fd, "\0", 1) != 1)
+      return -1;
+  }
+  return 0;
 }
 
 /* Return nonzero if NAME is the name of a regular file, or if the file
