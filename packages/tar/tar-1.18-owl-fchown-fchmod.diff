Use fchown/fchmod instead of chown/chmod to set permissions of just created
regular files.

--- tar/src/extract.c
+++ tar/src/extract.c
@@ -130,6 +130,33 @@
     }
 }
 
+static int
+fstat_or_stat (int fd, const char *name, struct stat *st)
+{
+  if (fd != -1)
+    return fstat (fd, st);
+  else
+    return stat (name, st);
+}
+
+static int
+fchown_or_chown (int fd, const char *name, uid_t uid, uid_t gid)
+{
+  if (fd != -1)
+    return fchown (fd, uid, gid);
+  else
+    return chown (name, uid, gid);
+}
+
+static int
+fchmod_or_chmod (int fd, const char *name, mode_t mode)
+{
+  if (fd != -1)
+    return fchmod (fd, mode);
+  else
+    return chmod(name, mode);
+}
+
 /* If restoring permissions, restore the mode for FILE_NAME from
    information given in *STAT_INFO (where *CUR_INFO gives
    the current status if CUR_INFO is nonzero); otherwise invert the
@@ -137,7 +164,7 @@
    PERMSTATUS specifies the status of the file's permissions.
    TYPEFLAG specifies the type of the file.  */
 static void
-set_mode (char const *file_name,
+set_mode (int fd, char const *file_name,
 	  struct stat const *stat_info,
 	  struct stat const *cur_info,
 	  mode_t invert_permissions, enum permstatus permstatus,
@@ -176,7 +203,7 @@ set_mode (char const *file_name,
       struct stat st;
       if (! cur_info)
 	{
-	  if (stat (file_name, &st) != 0)
+	  if (fstat_or_stat (fd, file_name, &st) != 0)
 	    {
 	      stat_error (file_name);
 	      return;
@@ -186,7 +213,7 @@ set_mode (char const *file_name,
       mode = cur_info->st_mode ^ invert_permissions;
     }
 
-  if (chmod (file_name, mode) != 0)
+  if (fchmod_or_chmod (fd, file_name, mode) != 0)
     chmod_error_details (file_name, mode);
 }
 
@@ -233,7 +260,7 @@
    punt for the rest.  Sigh!  */
 
 static void
-set_stat (char const *file_name,
+set_stat (int fd, char const *file_name,
 	  struct tar_stat_info const *st,
 	  struct stat const *cur_info,
 	  mode_t invert_permissions, enum permstatus permstatus,
@@ -292,7 +319,8 @@ set_stat (char const *file_name,
 	}
       else
 	{
-	  chown_result = chown (file_name, st->stat.st_uid, st->stat.st_gid);
+	  chown_result = fchown_or_chown (fd, file_name, st->stat.st_uid,
+					  st->stat.st_gid);
 	}
 
       if (chown_result == 0)
@@ -310,7 +338,7 @@ set_stat (char const *file_name,
     }
 
   if (typeflag != SYMTYPE)
-    set_mode (file_name, &st->stat, cur_info,
+    set_mode (fd, file_name, &st->stat, cur_info,
 	      invert_permissions, permstatus, typeflag);
 }
 
@@ -599,7 +627,7 @@ apply_nonancestor_delayed_set_stat (char const *file_name, bool after_links)
 	  st.stat.st_gid = data->gid;
 	  st.atime = data->atime;
 	  st.mtime = data->mtime;
-	  set_stat (data->file_name, &st, cur_info,
+	  set_stat (-1, data->file_name, &st, cur_info,
 		    data->invert_permissions, data->permstatus, DIRTYPE);
 	}
 
@@ -814,6 +842,12 @@ extract_file (char *file_name, int typeflag)
 
   mv_end ();
 
+  if (!to_stdout_option && !to_command_option)
+    set_stat (fd, file_name, &current_stat_info, NULL, invert_permissions,
+	      (old_files_option == OVERWRITE_OLD_FILES ?
+	       UNKNOWN_PERMSTATUS : ARCHIVED_PERMSTATUS),
+	      typeflag);
+
   /* If writing to stdout, don't try to do anything to the filename;
      it doesn't exist, or we don't want to touch it anyway.  */
 
@@ -826,11 +860,6 @@ extract_file (char *file_name, int typeflag)
 
   if (to_command_option)
     sys_wait_command ();
-  else
-    set_stat (file_name, &current_stat_info, NULL, invert_permissions,
-	      (old_files_option == OVERWRITE_OLD_FILES ?
-	       UNKNOWN_PERMSTATUS : ARCHIVED_PERMSTATUS),
-	      typeflag);
 
   return status;
 }
@@ -986,7 +1015,7 @@ extract_symlink (char *file_name, int typeflag)
       break;
 
   if (status == 0)
-    set_stat (file_name, &current_stat_info, NULL, 0, 0, SYMTYPE);
+    set_stat (-1, file_name, &current_stat_info, NULL, 0, 0, SYMTYPE);
   else
     symlink_error (current_stat_info.link_name, file_name);
   return status;
@@ -1021,7 +1050,7 @@ extract_node (char *file_name, int typeflag)
   if (status != 0)
     mknod_error (file_name);
   else
-    set_stat (file_name, &current_stat_info, NULL, invert_permissions,
+    set_stat (-1, file_name, &current_stat_info, NULL, invert_permissions,
 	      ARCHIVED_PERMSTATUS, typeflag);
   return status;
 }
@@ -1042,7 +1071,7 @@ extract_fifo (char *file_name, int typeflag)
       break;
 
   if (status == 0)
-    set_stat (file_name, &current_stat_info, NULL, invert_permissions,
+    set_stat (-1, file_name, &current_stat_info, NULL, invert_permissions,
 	      ARCHIVED_PERMSTATUS, typeflag);
   else
     mkfifo_error (file_name);
@@ -1291,7 +1320,7 @@ apply_delayed_links (void)
 		  struct tar_stat_info st1;
 		  st1.stat.st_uid = ds->uid;
 		  st1.stat.st_gid = ds->gid;
-		  set_stat (source, &st1, NULL, 0, 0, SYMTYPE);
+		  set_stat (-1, source, &st1, NULL, 0, 0, SYMTYPE);
 		  valid_source = source;
 		}
 	    }
