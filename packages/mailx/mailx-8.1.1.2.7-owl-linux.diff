--- mailx-8.1.1.2.7/usr.bin/mail/USD.doc/Makefile.orig	Tue Sep  9 08:44:08 1997
+++ mailx-8.1.1.2.7/usr.bin/mail/USD.doc/Makefile	Wed Feb 11 23:33:50 2004
@@ -1,12 +1,18 @@
 #	$OpenBSD: Makefile,v 1.3 1997/07/13 23:35:48 millert Exp $
 #	@(#)Makefile	8.1 (Berkeley) 6/8/93
 
-DIR=	usd/07.mail
 SRCS=	mail0.nr mail1.nr mail2.nr mail3.nr mail4.nr mail5.nr mail6.nr \
 	mail7.nr mail8.nr mail9.nr maila.nr
 MACROS=	-me
 
-paper.ps: ${SRCS}
-	${TBL} ${SRCS} | ${ROFF} > ${.TARGET}
+TARGET = USD.ps
 
-.include <bsd.doc.mk>
+TBL = tbl
+ROFF = groff $(MACROS) -Tps
+RM = rm -f
+
+$(TARGET): $(SRCS)
+	$(TBL) $(SRCS) | $(ROFF) > $(TARGET)
+
+clean:
+	$(RM) $(TARGET)
--- mailx-8.1.1.2.7/usr.bin/mail/Makefile.orig	Mon Sep 22 19:31:47 1997
+++ mailx-8.1.1.2.7/usr.bin/mail/Makefile	Wed Feb 11 23:48:20 2004
@@ -6,19 +6,28 @@
 	popen.c quit.c send.c strings.c temp.c tty.c vars.c
 SFILES=	mail.help mail.tildehelp
 EFILES=	mail.rc
-LINKS=	${BINDIR}/mail ${BINDIR}/Mail ${BINDIR}/mail ${BINDIR}/mailx
-MLINKS=	mail.1 Mail.1 mail.1 mailx.1
 
-beforeinstall:
-	cd ${.CURDIR}/misc; ${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} \
-	    -m 444 ${SFILES} ${DESTDIR}/usr/share/misc
-
-distribution:
-	cd ${.CURDIR}/misc; ${INSTALL} ${INSTALL_COPY} -o root -g wheel \
-	    -m 644 ${EFILES} ${DESTDIR}/etc
-
-.if make(install)
-SUBDIR+= USD.doc
-.endif
+CC = gcc
+LD = gcc
+RM = rm -f
+INSTALL = install
+CFLAGS = -c -O2 -fomit-frame-pointer -Wall -Dlint
+LDFLAGS = -s
 
-.include <bsd.prog.mk>
+DESTDIR =
+MANDIR = /usr/man
+
+$(PROG): $(SRCS:.c=.o)
+	$(LD) $(LDFLAGS) $+ -o $@
+
+.c.o:
+	$(CC) $(CFLAGS) $< -o $@
+
+install:
+	$(INSTALL) -m 755 $(PROG) $(DESTDIR)/bin/
+	$(INSTALL) -m 644 mail.1 $(DESTDIR)$(MANDIR)/man1/
+	$(INSTALL) -m 644 ../../etc/skel/dot.mailrc $(DESTDIR)/etc/mail.rc
+	cd misc && $(INSTALL) -m 644 $(SFILES) $(DESTDIR)/usr/share/misc/
+
+clean:
+	$(RM) $(PROG) $(SRCS:.c=.o)
--- mailx-8.1.1.2.7/usr.bin/mail/aux.c.orig	Fri Apr 28 18:30:36 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/aux.c	Wed Feb 11 23:33:50 2004
@@ -352,7 +352,8 @@
 		return;
 	(void) gettimeofday(&tv[0], (struct timezone *)0);
 	tv[0].tv_sec++;
-	TIMESPEC_TO_TIMEVAL(&tv[1], &sb.st_mtimespec);
+	tv[1].tv_sec = sb.st_mtime;
+	tv[1].tv_usec = 0;
 	(void)utimes(name, tv);
 }
 
--- mailx-8.1.1.2.7/usr.bin/mail/cmd1.c.orig	Fri Apr 28 18:30:36 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/cmd1.c	Wed Feb 11 23:33:50 2004
@@ -160,7 +160,7 @@
 	int *msgvec = v;
 	int *ip;
 
-	for (ip = msgvec; *ip != NULL; ip++)
+	for (ip = msgvec; *ip != 0; ip++)
 		printhead(*ip);
 	if (--ip >= msgvec)
 		dot = &message[*ip - 1];
--- mailx-8.1.1.2.7/usr.bin/mail/cmd2.c.orig	Fri Apr 28 18:30:36 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/cmd2.c	Wed Feb 11 23:33:50 2004
@@ -66,7 +66,7 @@
 	int *msgvec = v;
 	int *ip, *ip2, list[2], mdot;
 
-	if (*msgvec != NULL) {
+	if (*msgvec != 0) {
 
 		/*
 		 * If some messages were supplied, find the
@@ -81,10 +81,10 @@
 		 * message list which follows dot.
 		 */
 
-		for (ip = msgvec; *ip != NULL; ip++)
+		for (ip = msgvec; *ip != 0; ip++)
 			if (*ip > mdot)
 				break;
-		if (*ip == NULL)
+		if (*ip == 0)
 			ip = msgvec;
 		ip2 = ip;
 		do {
@@ -93,9 +93,9 @@
 				dot = mp;
 				goto hitit;
 			}
-			if (*ip2 != NULL)
+			if (*ip2 != 0)
 				ip2++;
-			if (*ip2 == NULL)
+			if (*ip2 == 0)
 				ip2 = msgvec;
 		} while (ip2 != ip);
 		puts("No messages applicable");
@@ -129,7 +129,7 @@
 	 */
 
 	list[0] = dot - &message[0] + 1;
-	list[1] = NULL;
+	list[1] = 0;
 	return(type(list));
 }
 
@@ -179,11 +179,11 @@
 		return(1);
 	if (!f) {
 		*msgvec = first(0, MMNORM);
-		if (*msgvec == NULL) {
+		if (*msgvec == 0) {
 			printf("No messages to %s.\n", cmd);
 			return(1);
 		}
-		msgvec[1] = NULL;
+		msgvec[1] = 0;
 	}
 	if (f && getmsglist(str, msgvec, 0) < 0)
 		return(1);
@@ -196,7 +196,7 @@
 	else
 		disp = "[New file]";
 	if ((obuf = Fopen(file, "a")) == NULL) {
-		warn(NULL);
+		warn("fopen");
 		return(1);
 	}
 	for (ip = msgvec; *ip && ip-msgvec < msgCount; ip++) {
@@ -303,7 +303,7 @@
 		list[0] = dot - &message[0] + 1;
 		if (list[0] > lastdot) {
 			touch(dot);
-			list[1] = NULL;
+			list[1] = 0;
 			return(type(list));
 		}
 		puts("At EOF");
@@ -324,18 +324,18 @@
 	struct message *mp;
 	int *ip, last;
 
-	last = NULL;
-	for (ip = msgvec; *ip != NULL; ip++) {
+	last = 0;
+	for (ip = msgvec; *ip != 0; ip++) {
 		mp = &message[*ip - 1];
 		touch(mp);
 		mp->m_flag |= MDELETED|MTOUCH;
 		mp->m_flag &= ~(MPRESERVE|MSAVED|MBOX);
 		last = *ip;
 	}
-	if (last != NULL) {
+	if (last != 0) {
 		dot = &message[last-1];
 		last = first(0, MDELETED);
-		if (last != NULL) {
+		if (last != 0) {
 			dot = &message[last-1];
 			return(0);
 		}
--- mailx-8.1.1.2.7/usr.bin/mail/cmd3.c.orig	Fri Apr 28 18:30:37 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/cmd3.c	Wed Feb 11 23:33:50 2004
@@ -307,7 +307,7 @@
 		puts("Cannot \"preserve\" in edit mode");
 		return(1);
 	}
-	for (ip = msgvec; *ip != NULL; ip++) {
+	for (ip = msgvec; *ip != 0; ip++) {
 		mesg = *ip;
 		mp = &message[mesg-1];
 		mp->m_flag |= MPRESERVE;
@@ -327,7 +327,7 @@
 	int	*msgvec = v;
 	int *ip;
 
-	for (ip = msgvec; *ip != NULL; ip++) {
+	for (ip = msgvec; *ip != 0; ip++) {
 		dot = &message[*ip-1];
 		dot->m_flag &= ~(MREAD|MTOUCH);
 		dot->m_flag |= MSTATUS;
@@ -346,7 +346,7 @@
 	struct message *mp;
 	int *ip, mesg;
 
-	for (ip = msgvec; *ip != NULL; ip++) {
+	for (ip = msgvec; *ip != 0; ip++) {
 		mesg = *ip;
 		mp = &message[mesg-1];
 		printf("%d: %d/%d\n", mesg, mp->m_lines, mp->m_size);
--- mailx-8.1.1.2.7/usr.bin/mail/collect.c.orig	Fri Apr 28 18:30:37 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/collect.c	Wed Feb 11 23:33:50 2004
@@ -120,7 +120,7 @@
 
 	noreset++;
 	(void)snprintf(tempname, sizeof(tempname),
-	    "%s/mail.RsXXXXXXXXXX", tmpdir);
+	    "%s/mail.RsXXXXXX", tmpdir);
 	if ((fd = mkstemp(tempname)) == -1 ||
 	    (collf = Fdopen(fd, "w+")) == NULL) {
 		warn(tempname);
@@ -454,7 +454,7 @@
 		return(-1);
 	}
 	if ((of = Fopen(name, "w")) == NULL) {
-		warn(NULL);
+		warn("fopen");
 		return(-1);
 	}
 	lc = 0;
@@ -513,7 +513,7 @@
 	char *shell, tempname[PATHSIZE];
 
 	(void)snprintf(tempname, sizeof(tempname),
-	    "%s/mail.ReXXXXXXXXXX", tmpdir);
+	    "%s/mail.ReXXXXXX", tmpdir);
 	if ((fd = mkstemp(tempname)) == -1 ||
 	    (nf = Fdopen(fd, "w+")) == NULL) {
 		warn(tempname);
@@ -572,11 +572,11 @@
 		return(0);
 	if (*msgvec == 0) {
 		*msgvec = first(0, MMNORM);
-		if (*msgvec == NULL) {
+		if (*msgvec == 0) {
 			puts("No appropriate messages");
 			return(0);
 		}
-		msgvec[1] = NULL;
+		msgvec[1] = 0;
 	}
 	if (f == 'f' || f == 'F')
 		tabst = NULL;
--- mailx-8.1.1.2.7/usr.bin/mail/edit.c.orig	Thu Jan 22 22:53:54 1998
+++ mailx-8.1.1.2.7/usr.bin/mail/edit.c	Wed Feb 11 23:33:50 2004
@@ -158,7 +158,7 @@
 	struct stat statb;
 
 	(void)snprintf(tempname, sizeof(tempname),
-	    "%s/mail.ReXXXXXXXXXX", tmpdir);
+	    "%s/mail.ReXXXXXX", tmpdir);
 	if ((t = mkstemp(tempname)) == -1 ||
 	    (nf = Fdopen(t, "w")) == NULL) {
 		warn(tempname);
--- mailx-8.1.1.2.7/usr.bin/mail/fio.c.orig	Mon Sep 14 23:58:09 1998
+++ mailx-8.1.1.2.7/usr.bin/mail/fio.c	Wed Feb 11 23:33:50 2004
@@ -73,7 +73,7 @@
 	char linebuf[LINESIZE], pathbuf[PATHSIZE];
 
 	/* Get temporary file. */
-	(void)snprintf(pathbuf, sizeof(pathbuf), "%s/mail.XXXXXXXXXX", tmpdir);
+	(void)snprintf(pathbuf, sizeof(pathbuf), "%s/mail.XXXXXX", tmpdir);
 	if ((c = mkstemp(pathbuf)) == -1 || (mestmp = Fdopen(c, "r+")) == NULL)
 		err(1, "can't open %s", pathbuf);
 	(void)rm(pathbuf);
--- mailx-8.1.1.2.7/usr.bin/mail/lex.c.orig	Fri Apr 28 18:30:37 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/lex.c	Wed Feb 11 23:33:50 2004
@@ -66,6 +66,7 @@
 	char *name;
 {
 	FILE *ibuf;
+	struct flock l;
 	int i, fd;
 	struct stat stb;
 	char isedit = *name != '%';
@@ -123,7 +124,7 @@
 	 */
 
 	readonly = 0;
-	if ((i = open(name, 1)) < 0)
+	if ((i = open(name, O_WRONLY)) < 0)
 		readonly++;
 	else
 		(void)close(i);
@@ -138,9 +139,23 @@
 		strncpy(mailname, name, sizeof(mailname) - 1);
 		mailname[sizeof(mailname) - 1] = '\0';
 	}
+	memset(&l, 0, sizeof(l));
+	l.l_whence = SEEK_SET;
+	l.l_type = F_RDLCK;
+	if (fcntl(fileno(ibuf), F_SETLKW, &l) == -1) {
+		warn("Unable to lock mailbox");
+		(void)Fclose(ibuf);
+		relsesigs();
+		return(-1);
+	}
+	if (!spool_lock()) {
+		(void)Fclose(ibuf);
+		relsesigs();
+		return(-1);
+	}
 	mailsize = fsize(ibuf);
 	(void)snprintf(tempname, sizeof(tempname),
-	    "%s/mail.RxXXXXXXXXXX", tmpdir);
+	    "%s/mail.RxXXXXXX", tmpdir);
 	if ((fd = mkstemp(tempname)) == -1 ||
 	    (otf = fdopen(fd, "w")) == NULL)
 		err(1, tempname);
@@ -158,6 +173,7 @@
 	 */
 	mailsize = ftell(ibuf);
 	(void)Fclose(ibuf);
+	spool_unlock();
 	relsesigs();
 	sawcom = 0;
 	if (!edit && msgCount == 0) {
@@ -178,16 +194,30 @@
 	int newsize;
 	int omsgCount = msgCount;
 	FILE *ibuf;
+	struct flock l;
 
 	ibuf = Fopen(mailname, "r");
 	if (ibuf == NULL)
 		return(-1);
 	holdsigs();
-	if (!spool_lock())
+	memset(&l, 0, sizeof(l));
+	l.l_whence = SEEK_SET;
+	l.l_type = F_RDLCK;
+	if (fcntl(fileno(ibuf), F_SETLKW, &l) == -1) {
+		warn("Unable to lock mailbox");
+		(void)Fclose(ibuf);
+		relsesigs();
+		return(-1);
+	}
+	if (!spool_lock()) {
+		(void)Fclose(ibuf);
+		relsesigs();
 		return(-1);
+	}
 	newsize = fsize(ibuf);
 	/* make sure mail box has grown and is non-empty */
 	if (newsize == 0 || newsize <= mailsize) {
+		(void)Fclose(ibuf);
 		spool_unlock();
 		relsesigs();
 		return(newsize == mailsize ? 0 : -1);
@@ -392,9 +422,9 @@
 		if (c  == 0) {
 			*msgvec = first(com->c_msgflag,
 				com->c_msgmask);
-			msgvec[1] = NULL;
+			msgvec[1] = 0;
 		}
-		if (*msgvec == NULL) {
+		if (*msgvec == 0) {
 			puts("No applicable messages");
 			break;
 		}
--- mailx-8.1.1.2.7/usr.bin/mail/mail.1.orig	Sat Apr 15 19:38:49 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/mail.1	Wed Feb 11 23:33:50 2004
@@ -37,9 +37,7 @@
 .Dt MAIL 1
 .Os
 .Sh NAME
-.Nm mail ,
-.Nm mailx ,
-.Nm Mail
+.Nm mail
 .Nd send and receive mail
 .Sh SYNOPSIS
 .Nm mail
@@ -114,7 +112,7 @@
 .It Fl u Ar user
 Is equivalent to:
 .Pp
-.Dl mail -f /var/mail/user
+.Dl mail -f /var/spool/mail/user
 .Pp
 except that locking is done.
 .El
@@ -471,7 +469,6 @@
 .It Ic help
 A synonym for
 .Ic \&? .
-.ne li
 .It Ic hold
 .Pf ( Ic ho ,
 also
@@ -748,7 +745,6 @@
 or
 .Ic retain
 command) are not included.
-.ne li
 .It Ic \&~F Ns Ar messages
 Identical to
 .Ic \&~f ,
@@ -840,7 +836,6 @@
 to prompt you for the subject of each message you send.
 If
 you respond with simply a newline, no subject field will be sent.
-.ne li
 .It Ar askcc
 Causes you to be prompted for additional carbon copy recipients at the
 end of each message.
@@ -1010,7 +1005,6 @@
 command and
 .Ic \&~v
 escape.
-.ne li
 .It Va crt
 The valued option
 .Va crt
@@ -1075,7 +1069,7 @@
 user's mail spool.
 .Sh FILES
 .Bl -tag -width /usr/share/misc/mail.*help -compact
-.It Pa /var/mail/*
+.It Pa /var/spool/mail/*
 post office (unless overridden by the
 .Ev MAIL
 environment variable)
@@ -1096,10 +1090,8 @@
 .Xr fmt 1 ,
 .Xr lockspool 1 ,
 .Xr newaliases 1 ,
-.Xr vacation 1 ,
 .Xr aliases 5 ,
 .Xr mailaddr 7 ,
-.Xr mail.local 8 ,
 .Xr sendmail 8
 .Rs
 .%T "The Mail Reference Manual"
@@ -1107,8 +1099,7 @@
 .Sh HISTORY
 A
 .Nm mail
-command appeared in
-.At v5 .
+command appeared in Version 5 AT&T UNIX.
 This man page is derived from
 .%T "The Mail Reference Manual"
 originally written by Kurt Shoens.
@@ -1116,11 +1107,3 @@
 There are some flags that are not documented here.
 Most are
 not useful to the general user.
-.Pp
-Usually,
-.Nm mail
-and
-.Nm mailx
-are just links to
-.Nm Mail ,
-which can be confusing.
--- mailx-8.1.1.2.7/usr.bin/mail/main.c.orig	Mon Sep 28 14:22:41 1998
+++ mailx-8.1.1.2.7/usr.bin/mail/main.c	Wed Feb 11 23:33:50 2004
@@ -51,6 +51,7 @@
 #include "rcv.h"
 #include <fcntl.h>
 #include <sys/ioctl.h>
+#include <sys/stat.h>
 #include "extern.h"
 
 int	main __P((int, char **));
@@ -75,6 +76,7 @@
 	char nosrc = 0;
 	sig_t prevint;
 	char *rc;
+	struct stat sb;
 
 	/*
 	 * Set up a reasonable environment.
@@ -219,7 +221,16 @@
 	 */
 	if ((rc = getenv("MAILRC")) == 0)
 		rc = "~/.mailrc";
-	load(expand(rc));
+	/*
+	 * Noone is supposed to run mail in this way, but we'd better
+	 * match the behavior already introduced by Red Hat.
+	 */
+	if (geteuid() == getuid() && getegid() == getgid()) {
+		rc = expand(rc);
+		if (stat(rc, &sb) == 0 &&
+		    (sb.st_uid == 0 || sb.st_uid == getuid()))
+			load(rc);
+	}
 	if (!rcvmode) {
 		mail(to, cc, bcc, smopts, subject);
 		/*
--- mailx-8.1.1.2.7/usr.bin/mail/names.c.orig	Wed Mar 29 18:14:31 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/names.c	Wed Feb 11 23:33:50 2004
@@ -257,7 +257,7 @@
 			char tempname[PATHSIZE];
 
 			(void)snprintf(tempname, sizeof(tempname),
-			    "%s/mail.ReXXXXXXXXXX", tmpdir);
+			    "%s/mail.ReXXXXXX", tmpdir);
 			if ((fd = mkstemp(tempname)) == -1 ||
 			    (fout = Fdopen(fd, "a")) == NULL) {
 				warn(tempname);
--- mailx-8.1.1.2.7/usr.bin/mail/pathnames.h.orig	Mon Sep 14 23:58:11 1998
+++ mailx-8.1.1.2.7/usr.bin/mail/pathnames.h	Wed Feb 11 23:33:50 2004
@@ -39,9 +39,9 @@
 
 #include <paths.h>
 
-#define	_PATH_EX	"/usr/bin/ex"
+#define	_PATH_EX	"/bin/ex"
 #define	_PATH_HELP	"/usr/share/misc/mail.help"
 #define	_PATH_TILDE	"/usr/share/misc/mail.tildehelp"
 #define	_PATH_MASTER_RC	"/etc/mail.rc"
-#define	_PATH_MORE	"/usr/bin/more"
+#define	_PATH_MORE	"/bin/more"
 #define	_PATH_LOCKSPOOL	"/usr/libexec/lockspool"
--- mailx-8.1.1.2.7/usr.bin/mail/popen.c.orig	Mon Sep 28 14:22:41 1998
+++ mailx-8.1.1.2.7/usr.bin/mail/popen.c	Wed Feb 11 23:33:50 2004
@@ -42,6 +42,7 @@
 #endif
 #endif /* not lint */
 
+#define _GNU_SOURCE
 #include "rcv.h"
 #include <sys/wait.h>
 #include <fcntl.h>
@@ -437,6 +438,7 @@
 handle_spool_locks(action)
 	int action;
 {
+#ifdef USE_LOCKSPOOL
 	static FILE *lockfp = NULL;
 	static int lock_pid;
 
@@ -472,6 +474,7 @@
 		    action);
 		return(-1);
 	}
+#endif
 
 	return(1);
 }
--- mailx-8.1.1.2.7/usr.bin/mail/quit.c.orig	Fri Apr 28 18:30:38 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/quit.c	Wed Feb 11 23:33:50 2004
@@ -80,6 +80,7 @@
 	FILE *ibuf = NULL, *obuf, *fbuf, *rbuf, *readstat = NULL, *abuf;
 	struct message *mp;
 	int c, fd;
+	struct flock l;
 	struct stat minfo;
 	char *mbox, tempname[PATHSIZE];
 
@@ -108,10 +109,13 @@
 	 * a message.
 	 */
 
-	fbuf = Fopen(mailname, "r");
+	fbuf = Fopen(mailname, "r+");
 	if (fbuf == NULL)
 		goto newmail;
-	if (flock(fileno(fbuf), LOCK_EX) == -1) {
+	memset(&l, 0, sizeof(l));
+	l.l_whence = SEEK_SET;
+	l.l_type = F_WRLCK;
+	if (fcntl(fileno(fbuf), F_SETLKW, &l) == -1) {
 		warn("Unable to lock mailbox");
 		(void)Fclose(fbuf);
 		return;
@@ -124,7 +128,7 @@
 	if (fstat(fileno(fbuf), &minfo) >= 0 && minfo.st_size > mailsize) {
 		puts("New mail has arrived.");
 		(void)snprintf(tempname, sizeof(tempname),
-		    "%s/mail.RqXXXXXXXXXX", tmpdir);
+		    "%s/mail.RqXXXXXX", tmpdir);
 		if ((fd = mkstemp(tempname)) == -1 ||
 		    (rbuf = Fdopen(fd, "w")) == NULL)
 			goto newmail;
@@ -218,7 +222,7 @@
 	mcount = c;
 	if (value("append") == NULL) {
 		(void)snprintf(tempname, sizeof(tempname),
-		    "%s/mail.RmXXXXXXXXXX", tmpdir);
+		    "%s/mail.RmXXXXXX", tmpdir);
 		if ((fd = mkstemp(tempname)) == -1 ||
 		    (obuf = Fdopen(fd, "w")) == NULL) {
 			warn(tempname);
@@ -453,7 +457,7 @@
 	if (stat(mailname, &statb) >= 0 && statb.st_size > mailsize) {
 		int fd;
 
-		(void)snprintf(tempname, sizeof(tempname), "%s/mbox.XXXXXXXXXX",
+		(void)snprintf(tempname, sizeof(tempname), "%s/mbox.XXXXXX",
 		    tmpdir);
 		if ((fd = mkstemp(tempname)) == -1 ||
 		    (obuf = Fdopen(fd, "w")) == NULL) {
--- mailx-8.1.1.2.7/usr.bin/mail/send.c.orig	Fri Apr 28 18:30:38 2000
+++ mailx-8.1.1.2.7/usr.bin/mail/send.c	Wed Feb 11 23:33:50 2004
@@ -179,12 +179,13 @@
 			 * Strip trailing whitespace from prefix
 			 * if line is blank.
 			 */
-			if (prefix != NULL)
+			if (prefix != NULL) {
 				if (length > 1)
 					fputs(prefix, obuf);
 				else
 					(void)fwrite(prefix, sizeof(*prefix),
 							prefixlen, obuf);
+			}
 			(void)fwrite(line, sizeof(*line), length, obuf);
 			if (ferror(obuf))
 				return(-1);
@@ -315,11 +316,12 @@
 	 */
 	if ((mtf = collect(hp, printheaders)) == NULL)
 		return;
-	if (fsize(mtf) == 0)
+	if (fsize(mtf) == 0) {
 		if (hp->h_subject == NULL)
 			puts("No message, no subject; hope that's ok");
 		else
 			puts("Null message body; hope that's ok");
+	}
 	/*
 	 * Now, take the user names from the combined
 	 * to and cc lists and do all the alias
@@ -436,7 +438,7 @@
 	char tempname[PATHSIZE];
 
 	(void)snprintf(tempname, sizeof(tempname),
-	    "%s/mail.RsXXXXXXXXXX", tmpdir);
+	    "%s/mail.RsXXXXXX", tmpdir);
 	if ((fd = mkstemp(tempname)) == -1 ||
 	    (nfo = Fdopen(fd, "w")) == NULL) {
 		warn(tempname);
--- mailx-8.1.1.2.7/usr.bin/mail/v7.local.c.orig	Mon Sep 14 23:58:13 1998
+++ mailx-8.1.1.2.7/usr.bin/mail/v7.local.c	Wed Feb 11 23:33:50 2004
@@ -67,8 +67,10 @@
 	char *mbox;
 	struct stat sb;
 
+	mbox = NULL;
+
 	/* Ignore $MAIL if it is not owned by the invoking user */
-	if ((mbox = getenv("MAIL")) && stat(mbox, &sb) == 0 &&
+	if (!uflag && (mbox = getenv("MAIL")) && stat(mbox, &sb) == 0 &&
 	    sb.st_uid != getuid() && sb.st_uid != geteuid())
 		mbox = NULL;
 
