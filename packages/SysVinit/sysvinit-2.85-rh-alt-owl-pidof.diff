diff -urp sysvinit-2.85.orig/src/killall5.c sysvinit-2.85/src/killall5.c
--- sysvinit-2.85.orig/src/killall5.c	Mon Apr 14 09:59:11 2003
+++ sysvinit-2.85/src/killall5.c	Sun Apr 27 04:53:18 2003
@@ -46,6 +46,7 @@ char *Version = "@(#)killall5 2.85 14-Ap
 /* Info about a process. */
 typedef struct _proc_
 {
+  char *pathname;	/* full path to executable     	  */
   char *fullname;	/* Name as found out from argv[0] */
   char *basename;	/* Only the part after the last / */
   char *statname;	/* the statname without braces    */
@@ -168,6 +169,7 @@ int readproc()
 	for (p = plist; n; p = n) {
 		n = p->next;
 		if (p->fullname) free(p->fullname);
+		if (p->pathname) free(p->pathname);
 		free(p);
 	}
 	plist = NULL;
@@ -257,6 +259,14 @@ int readproc()
 		/* Try to stat the executable. */
 		snprintf(path, sizeof(path), "/proc/%s/exe", d->d_name);
 		if (stat(path, &st) == 0) {
+			char buf[PATH_MAX];
+
+			f = readlink(path, buf, sizeof buf);
+			if (f > 0) {
+				p->pathname = (char *)xmalloc(f + 1);
+				memcpy(p->pathname, buf, f);
+				p->pathname[f] = '\0';
+			}
 			p->dev = st.st_dev;
 			p->ino = st.st_ino;
 		}
@@ -354,6 +364,23 @@ PIDQ *pidof(char *prog)
 	/* If we didn't find a match based on dev/ino, try the name. */
 	if (!foundone) {
 		for (p = plist; p; p = p->next) {
+			if (prog[0] == '/') {
+				if (!p->pathname)
+					continue;
+				if (strcmp(prog, p->pathname)) {
+					int len = strlen(prog);
+					if (strncmp(prog, p->pathname, len))
+						continue;
+					if (strcmp(" (deleted)",
+					    p->pathname + len) &&
+					    strcmp("-RPMDELETE (deleted)",
+					    p->pathname + len))
+						continue;
+				}
+				add_pid_to_q(q, p);
+				continue;
+			}
+
 			ok = 0;
 
 			ok += (strcmp(p->fullname, prog) == 0);
