diff -puNr sysvinit-2.86.orig/contrib/start-stop-daemon.c sysvinit-2.86/contrib/start-stop-daemon.c
--- sysvinit-2.86.orig/contrib/start-stop-daemon.c	1996-06-22 22:00:00 +0000
+++ sysvinit-2.86/contrib/start-stop-daemon.c	2005-05-29 09:39:29 +0000
@@ -32,7 +32,7 @@ static const char *cmdname = NULL;
 static char *execname = NULL;
 static char *startas = NULL;
 static const char *pidfile = NULL;
-static const char *progname = "";
+extern const char *__progname;
 
 static struct stat exec_stat;
 
@@ -71,7 +71,7 @@ fatal(const char *format, ...)
 {
 	va_list arglist;
 
-	fprintf(stderr, "%s: ", progname);
+	fprintf(stderr, "%s: ", __progname);
 	va_start(arglist, format);
 	vfprintf(stderr, format, arglist);
 	va_end(arglist);
@@ -137,8 +137,8 @@ static void
 badusage(const char *msg)
 {
 	if (msg && *msg)
-		fprintf(stderr, "%s: %s\n", progname, msg);
-	fprintf(stderr, "Try `%s --help' for more information.\n", progname);
+		fprintf(stderr, "%s: %s\n", __progname, msg);
+	fprintf(stderr, "Try `%s --help' for more information.\n", __progname);
 	exit(2);
 }
 
@@ -366,7 +366,7 @@ do_stop(void)
 			push(&killed, p->pid);
 		else
 			printf("%s: warning: failed to kill %d: %s\n",
-			       progname, p->pid, strerror(errno));
+			       __progname, p->pid, strerror(errno));
 	}
 	if (quietmode < 0 && killed) {
 		printf("stopped %s (pid", what);
@@ -380,7 +380,7 @@ do_stop(void)
 int
 main(int argc, char **argv)
 {
-	progname = argv[0];
+	umask(umask(077) | 022);
 
 	parse_options(argc, argv);
 	argc -= optind;
diff -puNr sysvinit-2.86.orig/src/init.c sysvinit-2.86/src/init.c
--- sysvinit-2.86.orig/src/init.c	2004-07-30 12:16:20 +0000
+++ sysvinit-2.86/src/init.c	2005-05-29 09:45:04 +0000
@@ -2490,10 +2490,13 @@ int init_main()
   /*NOTREACHED*/
 }
 
+extern const char *__progname;
+
 /*
  * Tell the user about the syntax we expect.
  */
-void usage(char *s)
+__attribute__ ((noreturn))
+void usage(const char *s)
 {
 	fprintf(stderr, "Usage: %s 0123456SsQqAaBbCcUu\n", s);
 	exit(1);
@@ -2509,6 +2512,9 @@ int telinit(char *progname, int argc, ch
 	int			f, fd, l;
 	char			*env = NULL;
 
+	if (!argc)
+		usage(progname);
+
 	memset(&request, 0, sizeof(request));
 	request.magic     = INIT_MAGIC;
 
@@ -2596,20 +2602,14 @@ int telinit(char *progname, int argc, ch
  */
 int main(int argc, char **argv)
 {
-	char			*p;
 	int			f;
 	int			isinit;
 
-	/* Get my own name */
-	if ((p = strrchr(argv[0], '/')) != NULL)
-  		p++;
-	else
-  		p = argv[0];
-	umask(022);
+	umask(umask(077) | 022);
 
 	/* Quick check */
 	if (geteuid() != 0) {
-		fprintf(stderr, "%s: must be superuser.\n", p);
+		fprintf(stderr, "%s: must be superuser.\n", __progname);
 		exit(1);
 	}
 
@@ -2622,7 +2622,7 @@ int main(int argc, char **argv)
 			isinit = 1;
 			break;
 	}
-	if (!isinit) exit(telinit(p, argc, argv));
+	if (!isinit) exit(telinit(__progname, argc, argv));
 
 	/*
 	 *	Check for re-exec
