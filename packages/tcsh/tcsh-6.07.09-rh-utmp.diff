--- tcsh-6.07.09/tc.who.c.getutent	Wed Apr  8 09:59:13 1998
+++ tcsh-6.07.09/tc.who.c	Fri Oct  2 14:57:55 1998
@@ -158,12 +158,13 @@
 watch_login(force)
     int force;
 {
-    int     utmpfd, comp = -1, alldone;
+    int     comp = -1, alldone;
     int	    firsttime = stlast == 1;
 #ifdef BSDSIGS
     sigmask_t omask;
 #endif				/* BSDSIGS */
     struct utmp utmp;
+    struct utmp *uptr;
     struct who *wp, *wpnew;
     struct varent *v;
     Char  **vp = NULL;
@@ -254,17 +255,10 @@
 	return;
     }
     stlast = sta.st_mtime;
-    if ((utmpfd = open(_PATH_UTMP, O_RDONLY)) < 0) {
-	xprintf(CGETS(26, 2, "%s cannot be opened.  Please \"unset watch\".\n"),
-		_PATH_UTMP);
-# ifdef BSDSIGS
-	(void) sigsetmask(omask);
-# else
-	(void) sigrelse(SIGINT);
-# endif
-	return;
-    }
 
+    utmpname( _PATH_UTMP );
+    setutent();
+    
     /*
      * xterm clears the entire utmp entry - mark everyone on the status list
      * OFFLINE or we won't notice X "logouts"
@@ -278,7 +272,10 @@
      * Read in the utmp file, sort the entries, and update existing entries or
      * add new entries to the status list.
      */
-    while (read(utmpfd, (char *) &utmp, sizeof utmp) == sizeof utmp) {
+
+
+    while ((uptr = getutent())) {
+	memcpy(&utmp, uptr, sizeof(utmp));
 
 # ifdef DEAD_PROCESS
 #  ifndef IRIS4D
@@ -374,7 +371,7 @@
 	    wp->who_prev = wpnew;	/* linked in now */
 	}
     }
-    (void) close(utmpfd);
+    endutent();
 # if defined(UTHOST) && defined(_SEQUENT_)
     endutent();
 # endif
