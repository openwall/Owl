diff -ur tcsh-6.10.00.orig/sh.c tcsh-6.10.00/sh.c
--- tcsh-6.10.00.orig/sh.c	Sun Nov 12 02:03:35 2000
+++ tcsh-6.10.00/sh.c	Fri Dec 15 07:46:10 2000
@@ -717,7 +717,12 @@
 	shtemp = Strspl(SAVE(strtmp2), doldol);	/* For << */
     }
 #else /* !WINNT_NATIVE */
-    shtemp = Strspl(STRtmpsh, doldol);	/* For << */
+    {
+       char *tmpdir = getenv ("TMPDIR");
+       if (!tmpdir)
+           tmpdir = "/tmp";
+       shtemp = Strspl(SAVE(tmpdir), SAVE("/sh.XXXXXX")); /* For << */
+    }
 #endif /* WINNT_NATIVE */
 
     /*
diff -ur tcsh-6.10.00.orig/sh.dol.c tcsh-6.10.00/sh.dol.c
--- tcsh-6.10.00.orig/sh.dol.c	Sun Nov 19 23:50:43 2000
+++ tcsh-6.10.00/sh.dol.c	Fri Dec 15 08:04:12 2000
@@ -1020,45 +1020,27 @@
     int c;
     Char   *Dv[2];
     Char    obuf[BUFSIZE], lbuf[BUFSIZE], mbuf[BUFSIZE];
-    int     ocnt, lcnt, mcnt;
+    int     ocnt, lcnt, mcnt, fd;
     register Char *lbp, *obp, *mbp;
     Char  **vp;
     bool    quoted;
-    char   *tmp;
-#ifndef WINNT_NATIVE
-    struct timeval tv;
+    char   *tmp, *dot;
 
-again:
-#endif /* WINNT_NATIVE */
     tmp = short2str(shtemp);
-#ifndef O_CREAT
-# define O_CREAT 0
-    if (creat(tmp, 0600) < 0)
+    dot = strrchr(tmp, '.');
+    if (!dot)
+	stderror(ERR_NAME | ERR_NOMATCH);
+    strcpy(dot, ".XXXXXX");
+
+    if ((fd = mkstemp(tmp)) < 0)
 	stderror(ERR_SYSTEM, tmp, strerror(errno));
-#endif
-    (void) close(0);
-#ifndef O_TEMPORARY
-# define O_TEMPORARY 0
-#endif
-#ifndef O_EXCL
-# define O_EXCL 0
-#endif
-    if (open(tmp, O_RDWR|O_CREAT|O_EXCL|O_TEMPORARY) == -1) {
-	int oerrno = errno;
-#ifndef WINNT_NATIVE
-	if (errno == EEXIST) {
-	    if (unlink(tmp) == -1) {
-		(void) gettimeofday(&tv, NULL);
-		shtemp = Strspl(STRtmpsh, putn((((int)tv.tv_sec) ^ 
-		    ((int)tv.tv_usec) ^ ((int)getpid())) & 0x00ffffff));
-	    }
-	    goto again;
-	}
-#endif /* WINNT_NATIVE */
-	(void) unlink(tmp);
-	errno = oerrno;
- 	stderror(ERR_SYSTEM, tmp, strerror(errno));
+
+    if (fd != 0) {
+	if (dup2(fd, 0) < 0)
+	    stderror(ERR_SYSTEM, "dup2", strerror(errno));
+	(void) close(fd);
     }
+
     (void) unlink(tmp);		/* 0 0 inode! */
     Dv[0] = term;
     Dv[1] = NULL;
