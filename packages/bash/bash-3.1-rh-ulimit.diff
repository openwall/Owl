--- bash-3.1/builtins/ulimit.def.ulimit	2005-08-04 13:39:04 +0100
+++ bash-3.1/builtins/ulimit.def	2006-01-10 11:21:49 +0000
@@ -34,6 +34,7 @@
     -a	all current limits are reported
     -c	the maximum size of core files created
     -d	the maximum size of a process's data segment
+    -e	the maximum scheduling priority (`nice')
     -f	the maximum size of files created by the shell
     -i  the maximum number of pending signals
     -l	the maximum size a process may lock into memory
@@ -41,6 +42,7 @@
     -n	the maximum number of open file descriptors
     -p	the pipe buffer size
     -q  the maximum number of bytes in POSIX message queues
+    -r	the maximum rt priority
     -s	the maximum stack size
     -t	the maximum amount of cpu time in seconds
     -u	the maximum number of user processes
@@ -202,6 +204,9 @@
 #ifdef RLIMIT_DATA
   { 'd',	RLIMIT_DATA,  1024,	"data seg size",	"kbytes" },
 #endif
+#ifdef RLIMIT_NICE
+  { 'e',	RLIMIT_NICE, 1,		"max nice",		(char *)NULL},
+#endif /* RLIMIT_NICE */
   { 'f',	RLIMIT_FILESIZE, 1024,	"file size",		"blocks" },
 #ifdef RLIMIT_SIGPENDING
   { 'i',	RLIMIT_SIGPENDING, 1,	"pending signals",	(char *)NULL },
@@ -217,6 +222,9 @@
 #ifdef RLIMIT_MSGQUEUE
   { 'q',	RLIMIT_MSGQUEUE, 1,	"POSIX message queues",	"bytes" },
 #endif
+#ifdef RLIMIT_RTPRIO
+  { 'r',	RLIMIT_RTPRIO, 1,	"max rt priority",	(char *)NULL},
+#endif /* RLIMIT_RTPRIO */
 #ifdef RLIMIT_STACK
   { 's',	RLIMIT_STACK, 1024,	"stack size",		"kbytes" },
 #endif
@@ -233,6 +241,9 @@
 #ifdef RLIMIT_LOCKS
   { 'x',	RLIMIT_LOCKS,	1,	"file locks",		(char *)NULL },
 #endif
+#ifdef RLIMIT_LOCKS
+  { 'x',	RLIMIT_LOCKS, 1,	"file locks",		(char *)NULL},
+#endif
   { -1, -1, -1, (char *)NULL, (char *)NULL }
 };
 #define NCMDS	(sizeof(limits) / sizeof(limits[0]))
--- bash-3.1/doc/bash.1.ulimit	2006-01-10 11:21:49 +0000
+++ bash-3.1/doc/bash.1	2006-01-10 11:24:43 +0000
@@ -8496,7 +8496,7 @@
 returns true if any of the arguments are found, false if
 none are found.
 .TP
-\fBulimit\fP [\fB\-SHacdfilmnpqstuvx\fP [\fIlimit\fP]]
+\fBulimit\fP [\fB\-SHacdefilmnpqrstuvx\fP [\fIlimit\fP]]
 Provides control over the resources available to the shell and to
 processes started by it, on systems that allow such control.
 The \fB\-H\fP and \fB\-S\fP options specify that the hard or soft limit is
@@ -8532,6 +8532,9 @@
 .B \-d
 The maximum size of a process's data segment
 .TP
+.B \-e
+The maximum scheduling priority (`nice')
+.TP
 .B \-f
 The maximum size of files created by the shell
 .TP
@@ -8554,6 +8557,9 @@
 .B \-q
 The maximum number of bytes in POSIX message queues
 .TP
+.B \-r
+The maximum rt priority
+.TP
 .B \-s
 The maximum stack size
 .TP
--- bash-3.1/doc/bashref.texi.ulimit	2006-01-10 11:21:49 +0000
+++ bash-3.1/doc/bashref.texi	2006-01-10 11:25:06 +0000
@@ -3833,7 +3833,7 @@
 @item ulimit
 @btindex ulimit
 @example
-ulimit [-acdfilmnpqstuvxSH] [@var{limit}]
+ulimit [-acdefilmnpqrstuvxSH] [@var{limit}]
 @end example
 @code{ulimit} provides control over the resources available to processes
 started by the shell, on systems that allow such control.  If an
@@ -3854,6 +3854,9 @@
 @item -d
 The maximum size of a process's data segment.
 
+@item -e
+The maximum scheduling priority.
+
 @item -f
 The maximum size of files created by the shell.
 
@@ -3875,6 +3878,9 @@
 @item -q
 The maximum number of bytes in POSIX message queues.
 
+@item -r
+The maximum RT priority.
+
 @item -s
 The maximum stack size.
 
@@ -3890,6 +3896,9 @@
 @item -x
 The maximum number of file locks.
 
+@item -x
+The maximum amount of file locks.
+
 @end table
 
 If @var{limit} is given, it is the new value of the specified resource;
