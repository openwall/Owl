diff -ur bash-2.05-cwru-fixes/aclocal.m4 bash-2.05/aclocal.m4
--- bash-2.05-cwru-fixes/aclocal.m4	Tue Nov 21 18:42:10 2000
+++ bash-2.05/aclocal.m4	Sat Oct 27 18:05:01 2001
@@ -317,18 +317,18 @@
 {
 DIR *dir;
 int fd, err;
-err = mkdir("/tmp/bash-aclocal", 0700);
+err = mkdir("bash-aclocal", 0700);
 if (err < 0) {
   perror("mkdir");
   exit(1);
 }
-unlink("/tmp/bash-aclocal/not_a_directory");
-fd = open("/tmp/bash-aclocal/not_a_directory", O_WRONLY|O_CREAT|O_EXCL, 0666);
+unlink("bash-aclocal/not_a_directory");
+fd = open("bash-aclocal/not_a_directory", O_WRONLY|O_CREAT|O_EXCL, 0666);
 write(fd, "\n", 1);
 close(fd);
-dir = opendir("/tmp/bash-aclocal/not_a_directory");
-unlink("/tmp/bash-aclocal/not_a_directory");
-rmdir("/tmp/bash-aclocal");
+dir = opendir("bash-aclocal/not_a_directory");
+unlink("bash-aclocal/not_a_directory");
+rmdir("bash-aclocal");
 exit (dir == 0);
 }], bash_cv_opendir_not_robust=yes,bash_cv_opendir_not_robust=no,
     [AC_MSG_WARN(cannot check opendir if cross compiling -- defaulting to no)
@@ -915,19 +915,19 @@
 #if defined (NeXT)
 exit (1);
 #endif
-err = mkdir("/tmp/bash-aclocal", 0700);
+err = mkdir("bash-aclocal", 0700);
 if (err < 0) {
   perror ("mkdir");
   exit(1);
 }
-fd = mknod ("/tmp/bash-aclocal/sh-np-autoconf", 0666 | S_IFIFO, 0);
+fd = mknod ("bash-aclocal/sh-np-autoconf", 0666 | S_IFIFO, 0);
 if (fd == -1) {
-  rmdir ("/tmp/bash-aclocal");
+  rmdir ("bash-aclocal");
   exit (1);
 }
 close(fd);
-unlink ("/tmp/bash-aclocal/sh-np-autoconf");
-rmdir ("/tmp/bash-aclocal");
+unlink ("bash-aclocal/sh-np-autoconf");
+rmdir ("bash-aclocal");
 exit(0);
 }], bash_cv_sys_named_pipes=present, bash_cv_sys_named_pipes=missing,
     [AC_MSG_WARN(cannot check for named pipes if cross-compiling -- defaulting to missing)
diff -ur bash-2.05-cwru-fixes/builtins/fc.def bash-2.05/builtins/fc.def
--- bash-2.05-cwru-fixes/builtins/fc.def	Wed Jan 17 19:51:50 2001
+++ bash-2.05/builtins/fc.def	Sat Oct 27 18:05:01 2001
@@ -327,7 +327,7 @@
   else
     {
       numbering = 0;
-      stream = sh_mktmpfp ("bash-fc", MT_USERANDOM|MT_USETMPDIR, &fn);
+      stream = sh_mktmpfp ("bash-fc", MT_USETMPDIR, &fn);
       if (stream == 0)
 	{
 	  builtin_error ("cannot open temp file %s", fn ? fn : "");
diff -ur bash-2.05-cwru-fixes/builtins/psize.sh bash-2.05/builtins/psize.sh
--- bash-2.05-cwru-fixes/builtins/psize.sh	Mon Feb 14 18:53:07 2000
+++ bash-2.05/builtins/psize.sh	Sat Oct 27 18:05:01 2001
@@ -3,11 +3,10 @@
 # psize.sh -- determine this system's pipe size, and write a define to
 #             pipesize.h so ulimit.c can use it.
 
-: ${TMPDIR:=/tmp}
-TMPNAME=pipsize.$$
-TMPFILE=$TMPDIR/$TMPNAME
+TMPFILE="`mktemp -t psize.XXXXXXXXXX`" || exit 1
 
-trap 'rm -f $TMPFILE' 0 1 2 3 6 15
+trap 'rm -f "$TMPFILE"; exit 1' HUP INT QUIT TERM
+trap 'rm -f "$TMPFILE"' EXIT
 
 echo "/*"
 echo " * pipesize.h"
@@ -17,18 +16,10 @@
 echo " */"
 echo ""
 
-#
-# Try to avoid tempfile races.  We can't really check for the file's
-# existance before we run psize.aux, because `test -e' is not portable,
-# `test -h' (test for symlinks) is not portable, and `test -f' only
-# checks for regular files
-#
-rm -f $TMPFILE
+./psize.aux 2>"$TMPFILE" | sleep 3
 
-./psize.aux 2>$TMPFILE | sleep 3
-
-if [ -s $TMPFILE ]; then
-	echo "#define PIPESIZE `cat $TMPFILE`"
+if [ -s "$TMPFILE" ]; then
+	echo "#define PIPESIZE `cat "$TMPFILE"`"
 else
 	echo "#define PIPESIZE 512"
 fi
diff -ur bash-2.05-cwru-fixes/configure bash-2.05/configure
--- bash-2.05-cwru-fixes/configure	Tue Jan 23 20:57:28 2001
+++ bash-2.05/configure	Sat Oct 27 18:05:01 2001
@@ -1,4 +1,6 @@
 #! /bin/sh
+# Must be re-generated
+exit 1
 
 # From configure.in for Bash 2.05, version 2.90, from autoconf version 2.13
 
diff -ur bash-2.05-cwru-fixes/error.c bash-2.05/error.c
--- bash-2.05-cwru-fixes/error.c	Mon Mar 26 19:36:07 2001
+++ bash-2.05/error.c	Sat Oct 27 18:05:02 2001
@@ -464,6 +464,7 @@
 
 /* A trace function for silent debugging -- doesn't require a control
    terminal. */
+/* Unused. */
 void
 #if defined (PREFER_STDARG)
 trace (const char *format, ...)
@@ -477,7 +478,7 @@
   static FILE *tracefp = (FILE *)NULL;
 
   if (tracefp == NULL)
-    tracefp = fopen("/tmp/bash-trace.log", "a+");
+    tracefp = fopen("/var/run/bash-trace.log", "a+");
 
   if (tracefp == NULL)
     tracefp = stderr;
diff -ur bash-2.05-cwru-fixes/externs.h bash-2.05/externs.h
--- bash-2.05-cwru-fixes/externs.h	Fri Nov  3 19:25:31 2000
+++ bash-2.05/externs.h	Sat Oct 27 18:05:02 2001
@@ -247,9 +247,10 @@
 /* declarations for functions defined in lib/sh/tmpfile.c */
 #define MT_USETMPDIR		0x0001
 #define MT_READWRITE		0x0002
-#define MT_USERANDOM		0x0004
 
-extern char *sh_mktmpname __P((char *, int));
+#if !defined(HAVE_DEV_FD)
+extern char *sh_mktmpname_unsafe __P((char *, int));
+#endif
 extern int sh_mktmpfd __P((char *, int, char **));
 /* extern FILE *sh_mktmpfp __P((char *, int, char **)); */
 
diff -ur bash-2.05-cwru-fixes/lib/malloc/malloc.c bash-2.05/lib/malloc/malloc.c
--- bash-2.05-cwru-fixes/lib/malloc/malloc.c	Thu Feb 15 01:01:50 2001
+++ bash-2.05/lib/malloc/malloc.c	Sat Oct 27 18:05:02 2001
@@ -954,7 +954,8 @@
   _print_malloc_stats (s, stderr);
 }
 
-#define TRACEROOT "/var/tmp/maltrace/trace."
+/* This is actually never used in bash. */
+#define TRACEROOT "/var/run/maltrace/trace."
 extern char *inttostr ();
 
 void
diff -ur bash-2.05-cwru-fixes/lib/sh/tmpfile.c bash-2.05/lib/sh/tmpfile.c
--- bash-2.05-cwru-fixes/lib/sh/tmpfile.c	Thu Feb 15 01:03:53 2001
+++ bash-2.05/lib/sh/tmpfile.c	Sat Oct 27 18:05:46 2001
@@ -20,120 +20,55 @@
    along with Bash; see the file COPYING.  If not, write to the Free
    Software Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
 
-#include <config.h>
+#ifndef _GNU_SOURCE
+#define _GNU_SOURCE
+#endif
 
-#include <bashtypes.h>
-#include <posixstat.h>
-#include <filecntl.h>
+#include <config.h>
 
 #if defined (HAVE_UNISTD_H)
 #  include <unistd.h>
 #endif
 
 #include <stdio.h>
-#include <errno.h>
+#include <stdlib.h>
 
 #include <shell.h>
 
-#ifndef errno
-extern int errno;
-#endif
-
-#define BASEOPENFLAGS	(O_CREAT | O_TRUNC | O_EXCL)
-
-#define DEFAULT_TMPDIR		"."	/* bogus default, should be changed */
-#define DEFAULT_NAMEROOT	"shtmp"
-
-extern int dollar_dollar_pid;
-
-static char *sys_tmpdir = (char *)NULL;
-static int ntmpfiles;
-static int tmpnamelen = -1;
-static unsigned long filenum = 1L;
-
-static char *
-get_sys_tmpdir ()
-{
-  struct stat sb;
-
-  if (sys_tmpdir)
-    return sys_tmpdir;
-
-  sys_tmpdir = "/tmp";
-  if (stat (sys_tmpdir, &sb) == 0)
-    return sys_tmpdir;
-
-  sys_tmpdir = "/var/tmp";
-  if (stat (sys_tmpdir, &sb) == 0)
-    return sys_tmpdir;
-
-  sys_tmpdir = "/usr/tmp";
-  if (stat (sys_tmpdir, &sb) == 0)
-    return sys_tmpdir;
-
-#ifdef P_tmpdir
-  sys_tmpdir = P_tmpdir;
-#else
-  sys_tmpdir = DEFAULT_TMPDIR;
-#endif
-
-  return sys_tmpdir;
-}
+#define DEFAULT_TMPDIR			P_tmpdir
+#define DEFAULT_NAMEROOT		"bash"
 
 static char *
 get_tmpdir (flags)
      int flags;
 {
-  char *tdir;
-
-  tdir = (flags & MT_USETMPDIR) ? get_string_value ("TMPDIR") : (char *)NULL;
-  if (tdir == 0)
-    tdir = get_sys_tmpdir ();
-
-#if defined (HAVE_PATHCONF) && defined (_PC_NAME_MAX)
-  if (tmpnamelen == -1)
-    tmpnamelen = pathconf (tdir, _PC_NAME_MAX);
-#else
-  tmpnamelen = 0;
-#endif
-
-  return tdir;
+  if (flags & MT_USETMPDIR)
+    return get_string_value ("TMPDIR") ?: DEFAULT_TMPDIR;
+  return DEFAULT_TMPDIR;
 }
 
+#if !defined(HAVE_DEV_FD)
+/* This is renamed to *_unsafe to trap and review possible additional
+ * references when applying the patch to future versions of bash. */
 char *
-sh_mktmpname (nameroot, flags)
+sh_mktmpname_unsafe (nameroot, flags)
      char *nameroot;
      int flags;
 {
-  char *filename, *tdir;
-  struct stat sb;
-  int r, tdlen;
-
-  filename = xmalloc (PATH_MAX + 1);
-  tdir = get_tmpdir (flags);
-  tdlen = strlen (tdir);
+  char *filename;
 
-  if (nameroot == 0)
-    nameroot = DEFAULT_NAMEROOT;
+  asprintf (&filename, "%s/%s.XXXXXX",
+    get_tmpdir (flags), nameroot ?: DEFAULT_NAMEROOT);
 
-  while (1)
+  if (filename && (!mktemp (filename) || !*filename))
     {
-      filenum *= (int)time ((time_t *)0) * dollar_dollar_pid *
-		((flags & MT_USERANDOM) ? get_random_number () : ntmpfiles++);
-      sprintf (filename, "%s/%s-%lu", tdir, nameroot, filenum);
-      if (tmpnamelen > 0 && tmpnamelen < 32)
-	filename[tdlen + 1 + tmpnamelen] = '\0';
-#ifdef HAVE_LSTAT
-      r = lstat (filename, &sb);
-#else
-      r = stat (filename, &sb);
-#endif
-      if (r < 0 && errno == ENOENT)
-	break;
+      free (filename);
+      filename = NULL;
     }
 
   return filename;
 }
+#endif
 
 int
 sh_mktmpfd (nameroot, flags, namep)
@@ -141,30 +76,22 @@
      int flags;
      char **namep;
 {
-  char *filename, *tdir;
-  int fd, tdlen;
-
-  filename = xmalloc (PATH_MAX + 1);
-  tdir = get_tmpdir (flags);
-  tdlen = strlen (tdir);
+  char *filename;
+  int fd;
 
-  if (nameroot == 0)
-    nameroot = DEFAULT_NAMEROOT;
+  asprintf (&filename, "%s/%s.XXXXXX",
+    get_tmpdir (flags), nameroot ?: DEFAULT_NAMEROOT);
 
-  do
+  fd = -1;
+  if (filename && ((fd = mkstemp (filename)) < 0))
     {
-      filenum *= (int)time ((time_t *)0) * dollar_dollar_pid *
-		((flags & MT_USERANDOM) ? get_random_number () : ntmpfiles++);
-      sprintf (filename, "%s/%s-%lu", tdir, nameroot, filenum);
-      if (tmpnamelen > 0 && tmpnamelen < 32)
-	filename[tdlen + 1 + tmpnamelen] = '\0';
-      fd = open (filename, BASEOPENFLAGS | ((flags & MT_READWRITE) ? O_RDWR : O_WRONLY), 0600);
+      free (filename);
+      filename = NULL;
     }
-  while (fd < 0 && errno == EEXIST);
 
   if (namep)
     *namep = filename;
-  else
+  else if (filename)
     free (filename);
 
   return fd;
@@ -177,7 +104,15 @@
      char **namep;
 {
   int fd;
+  FILE *f;
 
   fd = sh_mktmpfd (nameroot, flags, namep);
-  return ((fd >= 0) ? (fdopen (fd, (flags & MT_READWRITE) ? "w+" : "w")) : (FILE *)NULL);
+  if (fd < 0)
+    return NULL;
+
+  f = fdopen (fd, (flags & MT_READWRITE) ? "w+" : "w");
+  if (!f)
+    close (fd);
+
+  return f;
 }
diff -ur bash-2.05-cwru-fixes/redir.c bash-2.05/redir.c
--- bash-2.05-cwru-fixes/redir.c	Wed Oct 24 23:24:03 2001
+++ bash-2.05/redir.c	Sat Oct 27 18:05:02 2001
@@ -311,7 +311,7 @@
   int r, fd, fd2;
   static int fnum = 0;
 
-  fd = sh_mktmpfd ("sh-thd", MT_USERANDOM, &filename);
+  fd = sh_mktmpfd ("sh-thd", MT_USETMPDIR, &filename);
 
   /* If we failed for some reason other than the file existing, abort */
   if (fd < 0)
diff -ur bash-2.05-cwru-fixes/subst.c bash-2.05/subst.c
--- bash-2.05-cwru-fixes/subst.c	Mon Mar 26 22:06:16 2001
+++ bash-2.05/subst.c	Sat Oct 27 18:05:02 2001
@@ -3054,13 +3054,25 @@
 make_named_pipe ()
 {
   char *tname;
+  int retries;
 
-  tname = sh_mktmpname ("sh-np", MT_USERANDOM);
-  if (mkfifo (tname, 0600) < 0)
+  retries = 0x1000;
+  do
     {
+      tname = sh_mktmpname_unsafe ("sh-np", MT_USETMPDIR);
+      if (!tname)
+	{
+	  free (tname);
+	  return ((char *)NULL);
+	}
+      if (mkfifo (tname, 0600) == 0) break;
+      if (errno != EEXIST || !--retries)
+	{
+	  free (tname);
+	  return ((char *)NULL);
+	}
       free (tname);
-      return ((char *)NULL);
-    }
+    } while (1);
 
   add_fifo_list (tname);
   return (tname);
diff -ur bash-2.05-cwru-fixes/support/bashbug.sh bash-2.05/support/bashbug.sh
--- bash-2.05-cwru-fixes/support/bashbug.sh	Wed Oct 24 23:24:03 2001
+++ bash-2.05/support/bashbug.sh	Sat Oct 27 18:05:02 2001
@@ -21,17 +21,14 @@
 PATH=/bin:/usr/bin:/usr/local/bin:$PATH
 export PATH
 
-# If the OS supplies a program to make temp files with semi-random names,
-# use it.
-: ${TMPDIR:=/tmp}
-TEMP=$TMPDIR/bbug.$$
-for d in /bin /usr/bin /usr/local/bin ; do
-	if [ -x $d/mktemp ]; then
-		TEMP=`$d/mktemp $TMPDIR/bbug.XXXXXX ` ; break;
-	elif [ -x $d/tempfile ]; then
-		TEMP=` $d/tempfile --prefix bbug --mode 600 `; break
-	fi
-done
+TMPFILE1="`mktemp -t bashbug.XXXXXXXXXX`" || exit 1
+TMPFILE2="`mktemp -t bashbug.XXXXXXXXXX`" || {
+	rm -f "$TMPFILE1"
+	exit 1
+}
+
+trap 'rm -f "$TMPFILE1" "$TMPFILE2"; exit 1' HUP INT PIPE TERM
+trap 'rm -f "$TMPFILE1" "$TMPFILE2"' EXIT
 
 USAGE="Usage: $0 [--help] [--version] [bug-report-email-address]"
 VERSTR="GNU bashbug, version ${RELEASE}.${PATCHLEVEL}-${RELSTATUS}"
@@ -131,9 +128,6 @@
 
 : ${USER=${LOGNAME-`whoami`}}
 
-trap 'rm -f $TEMP $TEMP.x; exit 1' 1 2 3 13 15
-trap 'rm -f $TEMP $TEMP.x' 0
-
 UN=
 if (uname) >/dev/null 2>&1; then
 	UN=`uname -a`
@@ -150,10 +144,7 @@
 	SMARGS="$BUGADDR"
 fi
 
-# this is raceable
-rm -f $TEMP
-
-cat > $TEMP <<EOF
+cat > "$TMPFILE1" <<EOF
 From: ${USER}
 To: ${BUGADDR}
 Subject: [50 character or so descriptive subject here (for reference)]
@@ -182,14 +173,13 @@
 	fix for the problem, don't include this section.]
 EOF
 
-# this is still raceable
-rm -f $TEMP.x
-cp $TEMP $TEMP.x
-chmod u+w $TEMP
+cp "$TMPFILE1" "$TMPFILE2"
+chmod u+w "$TMPFILE1"
 
-trap '' 2		# ignore interrupts while in editor
+# ignore interrupts while in editor
+trap '' INT
 
-until $EDITOR $TEMP; do
+until $EDITOR "$TMPFILE1"; do
 	echo "$0: editor \`$EDITOR' exited with nonzero status."
 	echo "$0: Perhaps it was interrupted."
 	echo "$0: Type \`y' to give up, and lose your bug report;"
@@ -202,9 +192,10 @@
 	esac
 done
 
-trap 'rm -f $TEMP $TEMP.x; exit 1' 2	# restore trap on SIGINT
+# restore trap on SIGINT
+trap 'rm -f "$TMPFILE1" "$TMPFILE2"; exit 1' INT
 
-if cmp -s $TEMP $TEMP.x
+if cmp -s "$TMPFILE1" "$TMPFILE2"
 then
 	echo "File not changed, no bug report submitted."
 	exit
@@ -216,8 +207,8 @@
 [Nn]*)	exit 0 ;;
 esac
 
-${RMAIL} $SMARGS < $TEMP || {
-	cat $TEMP >> $HOME/dead.bashbug
+${RMAIL} $SMARGS < "$TMPFILE1" || {
+	cat "$TMPFILE1" >> $HOME/dead.bashbug
 	echo "$0: mail failed: report saved in $HOME/dead.bashbug" >&2
 }
 
diff -ur bash-2.05-cwru-fixes/support/fixlinks bash-2.05/support/fixlinks
--- bash-2.05-cwru-fixes/support/fixlinks	Thu Feb 15 23:39:20 1996
+++ bash-2.05/support/fixlinks	Sat Oct 27 18:05:02 2001
@@ -35,17 +35,12 @@
 	exit 1
 fi
 
-rm -f /tmp/z
-# if the user specified hard links, then do that.  otherwise, try to use
-# symlinks if they're present
+# if the user specified hard links, then do that.  otherwise, use symlinks.
 if [ -n "$hardlinks" ]; then
 	LN=ln
-elif (ln -s /dev/null /tmp/z) >/dev/null 2>&1; then
-	LN="ln -s"
 else
-	LN=ln
+	LN="ln -s"
 fi
-rm -f /tmp/z
 
 while read name target
 do
diff -ur bash-2.05-cwru-fixes/support/man2html.c bash-2.05/support/man2html.c
--- bash-2.05-cwru-fixes/support/man2html.c	Fri Feb 27 21:15:57 1998
+++ bash-2.05/support/man2html.c	Sat Oct 27 18:05:02 2001
@@ -276,7 +276,7 @@
 static char NEWLINE[2] = "\n";
 static char idxlabel[6] = "ixAAA";
 
-#define INDEXFILE "/tmp/manindex.list"
+#define INDEXFILE "manindex.list"
 
 static char *fname;
 static FILE *idxfile;
diff -ur bash-2.05-cwru-fixes/support/mkclone bash-2.05/support/mkclone
--- bash-2.05-cwru-fixes/support/mkclone	Fri Apr 12 00:08:59 1996
+++ bash-2.05/support/mkclone	Sat Oct 27 18:05:02 2001
@@ -39,17 +39,12 @@
 	exit 1
 fi
 
-rm -f /tmp/z
-# if the user specified hard links, then do that.  otherwise, try to use
-# symlinks if they're present
+# if the user specified hard links, then do that.  otherwise, use symlinks.
 if [ -n "$hardlinks" ]; then
         LN=ln
-elif (ln -s /dev/null /tmp/z) >/dev/null 2>&1; then
-        LN="ln -s"
 else
-        LN=ln
+        LN="ln -s"
 fi
-rm -f /tmp/z
 
 TARGET=$1
 
diff -ur bash-2.05-cwru-fixes/support/rlvers.sh bash-2.05/support/rlvers.sh
--- bash-2.05-cwru-fixes/support/rlvers.sh	Tue Jan 23 20:54:15 2001
+++ bash-2.05/support/rlvers.sh	Sat Oct 27 18:05:02 2001
@@ -6,9 +6,6 @@
 
 PROGNAME=`basename $0`
 
-: ${TMPDIR:=/tmp}
-TDIR=$TMPDIR/rlvers
-
 # defaults
 CC=cc
 RL_LIBDIR=/usr/local/lib
@@ -48,17 +45,14 @@
 	echo "${PROGNAME}: attempting program compilation"
 fi
 
-# make $TDIR mode 0700
-mkdir $TDIR || {
-	echo "${PROGNAME}: ${TDIR}: file exists" >&2
+TDIR="`mktemp -td rlvers.XXXXXXXXXX`" || {
 	echo 0
 	exit 1
 }
-chmod 700 $TDIR
 
-trap 'rm -f $TDIR/rlvers $TDIR/rlvers.? ; rmdir $TDIR' 0 1 2 3 6 15
+trap 'rm -f "$TDIR"/rlvers "$TDIR"/rlvers.? ; rmdir "$TDIR"' EXIT HUP INT TERM
 
-cat > $TDIR/rlvers.c << EOF
+cat > "$TDIR"/rlvers.c << EOF
 #include <stdio.h>
 extern char *rl_library_version;
 
@@ -71,15 +65,15 @@
 
 opwd=`pwd`
 
-cd $TDIR || {
+cd "$TDIR" || {
 	echo "${PROGNAME}: cannot cd to $TDIR" >&2
 	echo 0
 	exit 1
 }
 	
-if eval ${CC} -L${RL_LIBDIR} -I${RL_INCDIR} -o $TDIR/rlvers $TDIR/rlvers.c -lreadline ${TERMCAP_LIB};
+if eval ${CC} -L${RL_LIBDIR} -I${RL_INCDIR} -o "$TDIR"/rlvers "$TDIR"/rlvers.c -lreadline ${TERMCAP_LIB};
 then
-	v=`$TDIR/rlvers`
+	v=`"$TDIR"/rlvers`
 else
 	if [ -n "$verbose" ] ; then
 		echo "${PROGNAME}: compilation failed: status $?"
diff -ur bash-2.05-cwru-fixes/support/texi2dvi bash-2.05/support/texi2dvi
--- bash-2.05-cwru-fixes/support/texi2dvi	Mon Apr 27 20:00:44 1998
+++ bash-2.05/support/texi2dvi	Sat Oct 27 18:05:02 2001
@@ -164,14 +164,16 @@
   # Output the macro-expanded file to here.  The vastly abbreviated
   # temporary directory name is so we don't have collisions on 8.3 or
   # 14-character filesystems.
-  tmp_dir=${TMPDIR-/tmp}/txi2d.$$
+  tmp_dir=`mktemp -dt txi2d.XXXXXXXXXX` || exit 1
   filename_tmp=$tmp_dir/$filename_noext.texi
   # Output the file with the user's extra commands to here.
-  tmp_dir2=${tmp_dir}.2
+  tmp_dir2=`mktemp -dt txi2d.XXXXXXXXXX` || {
+    rmdir $tmp_dir
+    exit 1
+  }
   filename_tmp2=$tmp_dir2/$filename_noext.texi
-  mkdir $tmp_dir $tmp_dir2
   # Always remove the temporary directories.
-  trap "rm -rf $tmp_dir $tmp_dir2" 1 2 15
+  trap 'rm -rf $tmp_dir $tmp_dir2' HUP INT TERM
 
   # If directory and file are the same, then it's probably because there's
   # no pathname component.  Set dirname to `.', the current directory.
