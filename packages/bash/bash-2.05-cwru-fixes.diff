			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05
Patch-ID: bash205-001

Bug-Reported-by: root@sexorcisto.net
Bug-Reference-ID: <E14mmhG-0006wF-00@sexorcisto.net>

Bug-Description:

bashbug uses mktemp(1) to create a temporary file name for the bug report,
if it exists.  Unfortunately, it uses options not supported by all
implementations, causing bashbug to fail on several types of systems,
including Linux.  This patch allows the bug report template to be created
and edited on Linux systems.  (Along for free is support for $TMPDIR
instead of hardcoding /tmp.)

Patch:

*** ../bash-2.05/support/bashbug.sh	Wed Mar 28 08:19:45 2001
--- support/bashbug.sh	Tue Apr 10 08:57:15 2001
***************
*** 24,31 ****
  # If the OS supplies a program to make temp files with semi-random names,
  # use it.
! TEMP=/tmp/bbug.$$
  for d in /bin /usr/bin /usr/local/bin ; do
  	if [ -x $d/mktemp ]; then
! 		TEMP=`$d/mktemp -t bbug ` ; break;
  	elif [ -x $d/tempfile ]; then
  		TEMP=` $d/tempfile --prefix bbug --mode 600 `; break
--- 24,32 ----
  # If the OS supplies a program to make temp files with semi-random names,
  # use it.
! : ${TMPDIR:=/tmp}
! TEMP=$TMPDIR/bbug.$$
  for d in /bin /usr/bin /usr/local/bin ; do
  	if [ -x $d/mktemp ]; then
! 		TEMP=`$d/mktemp $TMPDIR/bbug.XXXXXX ` ; break;
  	elif [ -x $d/tempfile ]; then
  		TEMP=` $d/tempfile --prefix bbug --mode 600 `; break

			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05
Patch-ID: bash205-002

Bug-Reported-by: Art Haas <arthur.haas@westgeo.com>
Bug-Reference-ID: <lrsnjfut7y.fsf@haasart1.dhcp.wg.waii.com>

Bug-Description:

AIX 4.3 provides defines for real-time signals that are far out of the
range of the rest of the signal space, and mksignames seg faults trying
to process them.  Post-bash-2.04 versions of configure have checks for
this, but mksignames.c needs to include config.h to use them.  The patch
is obvious and trivial.

Patch:

*** ../bash-2.05/support/mksignames.c	Tue Mar 28 10:12:40 2000
--- support/mksignames.c	Wed Apr 11 15:31:22 2001
***************
*** 20,23 ****
--- 20,25 ----
     Foundation, 59 Temple Place, Suite 330, Boston, MA 02111 USA. */
  
+ #include "config.h"
+ 
  #include <stdio.h>
  #include <sys/types.h>

			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05
Patch-ID: bash205-003

Bug-Reported-by: Ian Jackson <ian@davenant.greenend.org.uk>
Bug-Reference-ID: <15047.36587.880816.594177@davenant.relativity.greenend.org.uk>

Bug-Description:

When /tmp is full, and bash is writing a here document whose size is less
than a stdio buffer, write errors can be ignored, leading to loss of the
here document contents.

I have made some other changes to redir.c, so your line numbers will probably
vary slightly.

Patch:

*** ../bash-2.05/redir.c	Tue Mar 27 09:43:50 2001
--- redir.c	Wed Apr 11 15:01:15 2001
***************
*** 290,295 ****
  	    }
  	}
-       fclose (fp);
        dispose_words (tlist);
      }
    return 0;
--- 292,302 ----
  	    }
  	}
        dispose_words (tlist);
+       if (fclose (fp) != 0)
+ 	{
+ 	  if (errno == 0)
+ 	    errno = ENOSPC;
+ 	  return (errno);
+ 	}
      }
    return 0;

			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05
Patch-ID: bash205-004

Bug-Reported-by: schwarzb@imsdd.fhg.de (Markus Schwarzenberg)
Bug-Reference-ID: <200104170657.IAA06387@sund32.imsdd.fhg.de>

Bug-Description:

An uninitialized variable will occasionally cause bash to segmentation
fault on some systems.  The bug was reported as affecting Solaris 7.

Patch:

*** ../bash-2.05/stringlib.c	Wed Feb 14 17:00:42 2001
--- stringlib.c	Tue Apr 17 08:10:29 2001
***************
*** 221,224 ****
--- 221,225 ----
  	p++;
  
+       ind = r - ret;
        RESIZE_MALLOCED_BUFFER (ret, ind, 2, rlen, rlen);
        r = ret + ind;			/* in case reallocated */


			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05
Patch-ID: bash205-005

Bug-Reported-by: Paul Eggert <eggert@twinsun.com>
Bug-Reference-ID: <200105030205.TAA01056@shade.twinsun.com>

Bug-Description:

(from Paul's report)

        Bash 2.05 fails the "make check" on 64-bit Solaris 7 (sparc);
        it reports bogus line numbers and eventually goes into an
        infinite loop.

        The problem is that Bash uses one method (a union) to convert
        an integer to a char * in unwind_protect_int, and a different
        method (a cast) to convert back in restore_variable.  These
        two methods are equivalent when sizeof (int) == sizeof (char *),
        and they are also equivalent on little-endian platform like an
        Alpha even when sizeof (int) < sizeof (char *); but they are
        not equivalent when you are using a big-endian platform where
        sizeof (int) < sizeof (char *).


Patch:
*** ../bash-2.05/unwind_prot.c	Wed Feb 14 17:00:55 2001
--- unwind_prot.c	Thu May  3 16:38:27 2001
***************
*** 214,218 ****
  {
    int free_elts = (int)flag;
-   UNWIND_ELT *elt;
  
    if (free_elts != 0 && unwind_protect_list)
--- 214,217 ----
***************
*** 294,297 ****
--- 293,298 ----
       SAVED_VAR *sv;
  {
+   UWP u;
+ 
    if (sv->size != sizeof (int))
      {
***************
*** 300,304 ****
      }
    else
!     *(sv->variable) = (int)sv->desired_setting;
  
    free (sv);
--- 301,308 ----
      }
    else
!     {
!       u.s = sv->desired_setting;
!       *(sv->variable) = u.i;
!     }
  
    free (sv);

			     BASH PATCH REPORT
			     =================

Bash-Release: 2.05
Patch-ID: bash205-006

Bug-Reported-by: Tim Mooney <mooney@dogbert.cc.ndsu.NoDak.edu>
Bug-Reference-ID: <200105031525.f43FPLH279278@dogbert.cc.ndsu.NoDak.edu>

Bug-Description:

A typo (missing end comment) caused the `-o filenames' option to `complete'
to be effectively ignored.

Patch:
*** ../bash-2.05/bashline.c	Tue Mar  6 13:36:07 2001
--- bashline.c	Thu May  3 12:57:22 2001
***************
*** 896,900 ****
  	{
  	  /* If the user specified that the compspec returns filenames, make
! 	     sure that readline knows it.
  	  if (foundcs & COPT_FILENAMES)
  	    rl_filename_completion_desired = 1;
--- 896,900 ----
  	{
  	  /* If the user specified that the compspec returns filenames, make
! 	     sure that readline knows it. */
  	  if (foundcs & COPT_FILENAMES)
  	    rl_filename_completion_desired = 1;
