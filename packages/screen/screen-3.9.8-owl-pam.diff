--- screen-3.9.8.orig/Makefile.in	Fri Sep  1 19:07:26 2000
+++ screen-3.9.8/Makefile.in	Sat Mar  3 13:44:25 2001
@@ -24,7 +24,7 @@
 CFLAGS = -O
 CPPFLAGS = @CPPFLAGS@
 LDFLAGS =
-LIBS = @LIBS@
+LIBS = @LIBS@ @LIBPAM@
 
 CPP=@CPP@
 CPP_DEPEND=$(CC) -MM
@@ -50,12 +50,12 @@
 
 CFILES=	screen.c ansi.c fileio.c mark.c misc.c resize.c socket.c \
 	search.c tty.c term.c window.c utmp.c loadav.c putenv.c help.c \
-	termcap.c input.c attacher.c pty.c process.c display.c comm.c \
+	termcap.c input.c attacher.c appl_userpass.c pty.c process.c display.c comm.c \
 	kmapdef.c acls.c braille.c braille_tsi.c logfile.c layer.c \
 	sched.c teln.c nethack.c
 OFILES=	screen.o ansi.o fileio.o mark.o misc.o resize.o socket.o \
 	search.o tty.o term.o window.o utmp.o loadav.o putenv.o help.o \
-	termcap.o input.o attacher.o pty.o process.o display.o comm.o \
+	termcap.o input.o attacher.o appl_userpass.o pty.o process.o display.o comm.o \
 	kmapdef.o acls.o braille.o braille_tsi.o logfile.o layer.o \
 	sched.o teln.o nethack.o
 
--- screen-3.9.8.orig/_pam_userpass.h	Thu Jan  1 03:00:00 1970
+++ screen-3.9.8/_pam_userpass.h	Sat Mar  3 13:12:49 2001
@@ -0,0 +1,12 @@
+#ifndef __PAM_USERPASS_H
+#define __PAM_USERPASS_H
+
+#define USERPASS_AGENT_ID		"userpass"
+#define USERPASS_AGENT_ID_LENGTH	8
+
+#define USERPASS_USER_MASK		0x03
+#define USERPASS_USER_REQUIRED		1
+#define USERPASS_USER_KNOWN		2
+#define USERPASS_USER_FIXED		3
+
+#endif
--- screen-3.9.8.orig/appl_userpass.c	Thu Jan  1 03:00:00 1970
+++ screen-3.9.8/appl_userpass.c	Sat Mar  3 13:12:49 2001
@@ -0,0 +1,51 @@
+#include <string.h>
+#include <stdlib.h>
+
+#include <security/pam_appl.h>
+#include <security/pam_client.h>
+
+#include "_pam_userpass.h"
+#include "pam_userpass.h"
+
+int pam_userpass_conv(int num_msg, const struct pam_message **msg,
+	struct pam_response **resp, void *appdata_ptr)
+{
+	pam_userpass_t *userpass = (pam_userpass_t *)appdata_ptr;
+	pamc_bp_t prompt;
+	char *data;
+	char flags;
+
+	if (num_msg != 1 || msg[0]->msg_style != PAM_BINARY_PROMPT)
+		return PAM_CONV_ERR;
+
+	prompt = (pamc_bp_t)msg[0]->msg;
+	data = PAM_BP_DATA(prompt);
+
+	if (PAM_BP_CONTROL(prompt) != PAM_BPC_SELECT ||
+	    strncmp(data, USERPASS_AGENT_ID "/", USERPASS_AGENT_ID_LENGTH + 1))
+		return PAM_CONV_ERR;
+
+	flags = data[USERPASS_AGENT_ID_LENGTH + 1];
+	data += USERPASS_AGENT_ID_LENGTH + 1 + 1;
+
+	if ((flags & USERPASS_USER_MASK) == USERPASS_USER_FIXED &&
+	    strcmp(data, userpass->user))
+		return PAM_CONV_AGAIN;
+
+	if (!(*resp = malloc(sizeof(struct pam_response))))
+		return PAM_CONV_ERR;
+
+	prompt = NULL;
+	PAM_BP_RENEW(&prompt, PAM_BPC_DONE,
+		strlen(userpass->user) + 1 + strlen(userpass->pass));
+	data = PAM_BP_DATA(prompt);
+
+	strcpy(data, userpass->user);
+	data += strlen(data) + 1;
+	memcpy(data, userpass->pass, strlen(userpass->pass));
+
+	(*resp)[0].resp_retcode = 0;
+	(*resp)[0].resp = (char *)prompt;
+
+	return PAM_SUCCESS;
+}
--- screen-3.9.8.orig/attacher.c	Sun Jul  2 20:30:16 2000
+++ screen-3.9.8/attacher.c	Sat Mar  3 13:27:44 2001
@@ -33,6 +33,11 @@
 #include "screen.h"
 #include "extern.h"
 
+#ifdef USE_PAM
+#include <security/pam_misc.h>
+#include "pam_userpass.h"
+#endif /* USE_PAM */
+
 #include <pwd.h>
 
 static sigret_t AttacherSigInt __P(SIGPROTOARG);
@@ -350,7 +350,7 @@
 
 
 #if defined(DEBUG) || !defined(DO_NOT_POLL_MASTER)
-static int AttacherPanic;
+static int AttacherPanic = 0;
 #endif
 
 #ifdef DEBUG
@@ -718,14 +722,32 @@
     }
 }				/* LockTerminal */
 
+#ifdef USE_PAM
+static pam_userpass_t userpass;
+static struct pam_conv conv = {
+    &pam_userpass_conv,
+    &userpass
+};
+#endif
+
+
 /* -- original copyright by Luigi Cannelloni 1985 (luigi@faui70.UUCP) -- */
 static void
 screen_builtin_lck()
 {
   char fullname[100], *cp1, message[100 + 100];
-  char *pass, mypass[9];
+  char *pass;
+#ifdef USE_PAM
+  int pam_error;
+  pam_handle_t *pamh = NULL;
+#else
+  char mypass[9];
+#endif /* USE_PAM */
 
   pass = ppp->pw_passwd;
+
+#ifndef USE_PAM 
+  /* if we're using PAM this will evaluate to true. which we don't want. */
   if (pass == 0 || *pass == 0)
     {
       if ((pass = getpass("Key:   ")))
@@ -752,6 +774,7 @@
         }
       pass = 0;
     }
+#endif /* USE_PAM */
 
   debug("screen_builtin_lck looking in gcos field\n");
   strncpy(fullname, ppp->pw_gecos, sizeof(fullname) - 9);
@@ -780,6 +803,22 @@
           AttacherFinit(SIGARG);
           /* NOTREACHED */
         }
+#ifdef USE_PAM
+	    userpass.user=ppp->pw_name;
+		userpass.pass=cp1;
+
+	    pam_error = pam_start("screen", ppp->pw_name, &conv, &pamh);
+
+		if (pam_error == PAM_SUCCESS) {
+			pam_error = pam_authenticate(pamh, 0);
+			pam_end(pamh, PAM_SUCCESS);
+			if (pam_error == PAM_SUCCESS) {
+//				memset(cp1,0,strlen(cp1));
+//				PAM_password = NULL; 
+				break;
+			}
+		}
+#else
       if (pass)
         {
           if (!strncmp(crypt(cp1, pass), pass, strlen(pass)))
@@ -790,6 +829,7 @@
           if (!strcmp(cp1, mypass))
             break;
         }
+#endif
       debug("screen_builtin_lck: NO!!!!!\n");
     }
   debug("password ok.\n");
--- screen-3.9.8.orig/configure.in	Wed Jun 14 17:04:17 2000
+++ screen-3.9.8/configure.in	Sat Mar  3 13:10:41 2001
@@ -28,6 +28,8 @@
 [echo "$1" 1>&AC_FD_MSG
 ])dnl
 
+AC_ARG_WITH(libpam, [  --with-libpam           use libpam for PAM support])
+
 dnl
 dnl Extract version from patchlevel.h
 dnl
@@ -1041,6 +1044,16 @@
 fi
 )
 fi
+
+AC_SUBST(LIBPAM)
+if test "$with_libpam" = "yes"; then
+	dnl AC_CHECK_LIB(pam, pam_start, AC_DEFINE(USE_PAM) LIBPAM=-lpam)
+	dnl the above doesn't work as there is no libpam.a (only .so)
+	dnl XXX - libpam_misc is probably Linux-PAM specific
+	LIBPAM="-lpam -lpam_misc -ldl"
+	AC_DEFINE(USE_PAM)
+fi
+
 
 dnl AC_CHECK_HEADER(shadow.h, AC_DEFINE(SHADOWPW))
 AC_CHECKING(getspnam)
--- screen-3.9.8.orig/pam_userpass.h	Thu Jan  1 03:00:00 1970
+++ screen-3.9.8/pam_userpass.h	Sat Mar  3 13:12:51 2001
@@ -0,0 +1,14 @@
+#ifndef _PAM_USERPASS_H
+#define _PAM_USERPASS_H
+
+#include <security/pam_appl.h>
+
+typedef struct {
+	char *user;
+	char *pass;
+} pam_userpass_t;
+
+extern int pam_userpass_conv(int num_msg, const struct pam_message **msg,
+	struct pam_response **resp, void *appdata_ptr);
+
+#endif
--- screen-3.9.8/config.h.in.orig       Fri Sep  1 19:07:26 2000
+++ screen-3.9.8/config.h.in    Sat Mar  3 19:58:34 2001
@@ -575,3 +575,7 @@
 #undef PTYRANGE0
 #undef PTYRANGE1
 
+/*
+ * define USE_PAM if you want to use pam authentification for screen lock
+ */
+#undef USE_PAM
