diff -ur mktemp-2.7.orig/usr.bin/mktemp/Makefile mktemp-2.7/usr.bin/mktemp/Makefile
--- mktemp-2.7.orig/usr.bin/mktemp/Makefile	Thu Nov 21 10:59:31 1996
+++ mktemp-2.7/usr.bin/mktemp/Makefile	Tue Aug  8 01:55:46 2000
@@ -1,5 +1,21 @@
-#	$OpenBSD: Makefile,v 1.1 1996/11/21 07:59:31 millert Exp $
+CC = gcc
+LD = gcc
+CFLAGS = -c -Wall -O2 -fomit-frame-pointer
+LDFLAGS = -s
 
-PROG=	mktemp
+FAKEROOT =
 
-.include <bsd.prog.mk>
+all: mktemp
+
+mktemp: mktemp.o
+	$(LD) $(LDFLAGS) mktemp.o -o mktemp
+
+mktemp.o: mktemp.c
+	$(CC) $(CFLAGS) mktemp.c -o mktemp.o
+
+clean:
+	rm -f mktemp *.o
+
+install:
+	install -m 755 mktemp $(FAKEROOT)/bin/mktemp
+	install -m 644 mktemp.1 $(FAKEROOT)/usr/man/man1
diff -ur mktemp-2.7.orig/usr.bin/mktemp/mktemp.1 mktemp-2.7/usr.bin/mktemp/mktemp.1
--- mktemp-2.7.orig/usr.bin/mktemp/mktemp.1	Wed Mar 29 22:14:40 2000
+++ mktemp-2.7/usr.bin/mktemp/mktemp.1	Tue Aug  8 01:59:58 2000
@@ -33,7 +33,6 @@
 .Nd make temporary file name (unique)
 .Sh SYNOPSIS
 .Nm mktemp
-.Op Fl d
 .Op Fl q
 .Op Fl u
 .Ar template
@@ -46,7 +45,7 @@
 .Ql X Ns s
 appended
 to it, for example
-.Pa /tmp/temp.XXXXXXXXXX .
+.Pa /tmp/temp.XXXXXX .
 .Pp
 The trailing
 .Ql X Ns s
@@ -59,16 +58,16 @@
 .Nm
 can return depends on the number of
 .Ql X Ns s
-provided; ten
+provided; six
 .Ql X Ns s
 will
 result in
 .Nm
-testing roughly 26 ** 10 combinations.
+testing roughly 26 ** 6 combinations.
 .Pp
 If
 .Nm
-can successfully generate a unique file name, the file (or directory)
+can successfully generate a unique file name, the file
 is created with file permissions such that it is only readable and writable
 by its owner (unless the
 .Fl u
@@ -90,8 +89,6 @@
 .Pp
 The options are as follows:
 .Bl -tag -width indent
-.It Fl d
-Make a directory instead of a file.
 .It Fl q
 Fail silently if an error occurs.
 This is useful if
@@ -121,13 +118,13 @@
 where the script should quit if it cannot get a safe
 temporary file.
 .Bd -literal -offset indent
-TMPFILE=`mktemp /tmp/$0.XXXXXXXXXX` || exit 1
+TMPFILE=`mktemp /tmp/$0.XXXXXX` || exit 1
 echo "program output" >> $TMPFILE
 .Ed
 .Pp
 In this case, we want the script to catch the error ourselves.
 .Bd -literal -offset indent
-TMPFILE=`mktemp -q /tmp/$0.XXXXXXXXXX`
+TMPFILE=`mktemp -q /tmp/$0.XXXXXX`
 if [ $? -ne 0 ]; then
 	echo "$0: Can't create temp file, exiting..."
 	exit 1
@@ -139,7 +136,7 @@
 is unable to create the file.
 In this case you can protect the part of the script thusly.
 .Bd -literal -offset indent
-TMPFILE=`mktemp /tmp/$0.XXXXXXXXXX` && {
+TMPFILE=`mktemp /tmp/$0.XXXXXX` && {
 	# Safe to use $TMPFILE in this block
 	echo data > $TMPFILE
 	...
@@ -147,11 +144,9 @@
 }
 .Ed
 .Sh SEE ALSO
-.Xr mkdtemp 3 ,
 .Xr mkstemp 3 ,
 .Xr mktemp 3
 .Sh HISTORY
 The
 .Nm
-utility appeared in
-.Ox 2.1 .
+utility appeared in OpenBSD 2.1.
diff -ur mktemp-2.7.orig/usr.bin/mktemp/mktemp.c mktemp-2.7/usr.bin/mktemp/mktemp.c
--- mktemp-2.7.orig/usr.bin/mktemp/mktemp.c	Tue Sep 15 03:58:37 1998
+++ mktemp-2.7/usr.bin/mktemp/mktemp.c	Tue Aug  8 02:03:39 2000
@@ -35,14 +35,33 @@
 #include <stdlib.h>
 #include <string.h>
 #include <unistd.h>
-#include <err.h>
+#include <errno.h>
+#include <stdarg.h>
 
 extern char *__progname;
 
+#ifdef __GNUC__
+__attribute__ ((format (printf, 2, 3)))
+#endif
+void err(int somecode, char * message, ...) {
+    va_list arglist;
+
+    va_start(arglist, message);
+    vfprintf(stderr, message, arglist);
+    fprintf(stderr, "\n");
+    va_end(arglist);
+
+    exit(somecode);
+}
+
+void errx(int somecode, char * message) {
+    err(somecode, "%s", message);
+}
+
 void
 usage()
 {
-	(void) fprintf(stderr, "Usage: %s [-d] [-q] [-u] template\n",
+	(void) fprintf(stderr, "Usage: %s [-q] [-u] template\n",
 	    __progname);
 	exit(1);
 }
@@ -82,6 +101,9 @@
 	}
 
 	if (makedir) {
+		fprintf(stderr, "mktemp: -d option is not supported on Linux\n");
+		exit(1);
+#if 0
 		if (mkdtemp(template) == NULL) {
 			if (qflag)
 				exit(1);
@@ -91,6 +113,7 @@
 
 		if (uflag)
 			(void) rmdir(template);
+#endif
 	} else {
 		if (mkstemp(template) < 0) {
 			if (qflag)
