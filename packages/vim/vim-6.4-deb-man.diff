--- vim64/runtime/doc/vim.1.orig	2004-03-01 11:26:46.000000000 +0000
+++ vim64/runtime/doc/vim.1	2005-12-18 00:27:35.000000000 +0000
@@ -7,7 +7,7 @@
 [options] [file ..]
 .br
 .B vim
-[options] -
+[options] \-
 .br
 .B vim
 [options] \-t tag
@@ -69,13 +69,13 @@
 The first one will be the current file and read into the buffer.
 The cursor will be positioned on the first line of the buffer.
 You can get to the other files with the ":next" command.
-To edit a file that starts with a dash, precede the filelist with "--".
+To edit a file that starts with a dash, precede the filelist with "\-\-".
 .TP
--
+\-
 The file to edit is read from stdin.  Commands are read from stderr, which
 should be a tty.
 .TP
--t {tag}
+\-t {tag}
 The file to edit and the initial cursor position depends on a "tag", a sort
 of goto label.
 {tag} is looked up in the tags file, the associated file becomes the current
@@ -84,9 +84,9 @@
 name.
 The effect is that the file containing that function becomes the current file
 and the cursor is positioned on the start of the function.
-See ":help tag-commands".
+See ":help tag\-commands".
 .TP
--q [errorfile]
+\-q [errorfile]
 Start in quickFix mode.
 The file [errorfile] is read and the first error is displayed.
 If [errorfile] is omitted, the filename is obtained from the 'errorfile'
@@ -105,27 +105,27 @@
 ex
 Start in Ex mode.
 Go to Normal mode with the ":vi" command.
-Can also be done with the "-e" argument.
+Can also be done with the "\-e" argument.
 .TP
 view
 Start in read-only mode.  You will be protected from writing the files.  Can
-also be done with the "-R" argument.
+also be done with the "\-R" argument.
 .TP
 gvim gview
 The GUI version.
 Starts a new window.
-Can also be done with the "-g" argument.
+Can also be done with the "\-g" argument.
 .TP
 evim eview
 The GUI version in easy mode.
 Starts a new window.
-Can also be done with the "-y" argument.
+Can also be done with the "\-y" argument.
 .TP
 rvim rview rgvim rgview
 Like the above, but with restrictions.  It will not be possible to start shell
 commands, or suspend
 .B Vim.
-Can also be done with the "-Z" argument.
+Can also be done with the "\-Z" argument.
 .SH OPTIONS
 The options may be given in any order, before or after filenames.
 Options without an argument can be combined after a single dash.
@@ -137,11 +137,11 @@
 +/{pat}
 For the first file the cursor will be positioned on the
 first occurrence of {pat}.
-See ":help search-pattern" for the available search patterns.
+See ":help search\-pattern" for the available search patterns.
 .TP
 +{command}
 .TP
--c {command}
+\-c {command}
 {command} will be executed after the
 first file has been read.
 {command} is interpreted as an Ex command.
@@ -149,21 +149,21 @@
 depends on the shell that is used).
 Example: Vim "+set si" main.c
 .br
-Note: You can use up to 10 "+" or "-c" commands.
+Note: You can use up to 10 "+" or "\-c" commands.
 .TP
--S {file}
+\-S {file}
 {file} will be sourced after the first file has been read.
-This is equivalent to -c "source {file}".
-{file} cannot start with '-'.
-If {file} is omitted "Session.vim" is used (only works when -S is the last
+This is equivalent to \-c "source {file}".
+{file} cannot start with '\-'.
+If {file} is omitted "Session.vim" is used (only works when \-S is the last
 argument).
 .TP
---cmd {command}
-Like using "-c", but the command is executed just before
+\-\-cmd {command}
+Like using "\-c", but the command is executed just before
 processing any vimrc file.
-You can use up to 10 of these commands, independently from "-c" commands.
+You can use up to 10 of these commands, independently from "\-c" commands.
 .TP
--A
+\-A
 If
 .B Vim
 has been compiled with ARABIC support for editing right-to-left
@@ -174,45 +174,45 @@
 .B Vim
 aborts.
 .TP
--b
+\-b
 Binary mode.
 A few options will be set that makes it possible to edit a binary or
 executable file.
 .TP
--C
+\-C
 Compatible.  Set the 'compatible' option.
 This will make
 .B Vim
 behave mostly like Vi, even though a .vimrc file exists.
 .TP
--d
+\-d
 Start in diff mode.
 There should be two or three file name arguments.
 .B Vim
 will open all the files and show differences between them.
 Works like vimdiff(1).
 .TP
--d {device}
+\-d {device}
 Open {device} for use as a terminal.
 Only on the Amiga.
 Example:
 "\-d con:20/30/600/150".
 .TP
--D
+\-D
 Debugging.  Go to debugging mode when executing the first command from a
 script.
 .TP
--e
+\-e
 Start
 .B Vim
 in Ex mode, just like the executable was called "ex".
 .TP
--E
+\-E
 Start
 .B Vim
 in improved Ex mode, just like the executable was called "exim".
 .TP
--f
+\-f
 Foreground.  For the GUI version,
 .B Vim
 will not fork and detach from the shell it was started in.
@@ -225,12 +225,12 @@
 session to finish (e.g. mail).
 On the Amiga the ":sh" and ":!" commands will not work.
 .TP
---nofork
+\-\-nofork
 Foreground.  For the GUI version,
 .B Vim
 will not fork and detach from the shell it was started in.
 .TP
--F
+\-F
 If
 .B Vim
 has been compiled with FKMAP support for editing right-to-left
@@ -241,7 +241,7 @@
 .B Vim
 aborts.
 .TP
--g
+\-g
 If
 .B Vim
 has been compiled with GUI support, this option enables the GUI.
@@ -249,13 +249,13 @@
 .B Vim
 aborts.
 .TP
--h
+\-h
 Give a bit of help about the command line arguments and options.
 After this
 .B Vim
 exits.
 .TP
--H
+\-H
 If
 .B Vim
 has been compiled with RIGHTLEFT support for editing right-to-left
@@ -266,87 +266,87 @@
 .B Vim
 aborts.
 .TP
--i {viminfo}
+\-i {viminfo}
 When using the viminfo file is enabled, this option sets the filename to use,
 instead of the default "~/.viminfo".
 This can also be used to skip the use of the .viminfo file, by giving the name
 "NONE".
 .TP
--L
-Same as -r.
+\-L
+Same as \-r.
 .TP
--l
+\-l
 Lisp mode.
 Sets the 'lisp' and 'showmatch' options on.
 .TP
--m
+\-m
 Modifying files is disabled.
 Resets the 'write' option.
 You can still modify the buffer, but writing a file is not possible.
 .TP
--M
+\-M
 Modifications not allowed.  The 'modifiable' and 'write' options will be unset,
 so that changes are not allowed and files can not be written.  Note that these
 options can be set to enable making modifications.
 .TP
--N
+\-N
 No-compatible mode.  Reset the 'compatible' option.
 This will make
 .B Vim
 behave a bit better, but less Vi compatible, even though a .vimrc file does
 not exist.
 .TP
--n
+\-n
 No swap file will be used.
 Recovery after a crash will be impossible.
 Handy if you want to edit a file on a very slow medium (e.g. floppy).
 Can also be done with ":set uc=0".
 Can be undone with ":set uc=200".
 .TP
--nb
+\-nb
 Become an editor server for NetBeans.  See the docs for details.
 .TP
--o[N]
+\-o[N]
 Open N windows stacked.
 When N is omitted, open one window for each file.
 .TP
--O[N]
+\-O[N]
 Open N windows side by side.
 When N is omitted, open one window for each file.
 .TP
--R
+\-R
 Read-only mode.
 The 'readonly' option will be set.
 You can still edit the buffer, but will be prevented from accidently
 overwriting a file.
 If you do want to overwrite a file, add an exclamation mark to the Ex command,
 as in ":w!".
-The -R option also implies the -n option (see below).
+The \-R option also implies the \-n option (see below).
 The 'readonly' option can be reset with ":set noro".
 See ":help 'readonly'".
 .TP
--r
+\-r
 List swap files, with information about using them for recovery.
 .TP
--r {file}
+\-r {file}
 Recovery mode.
 The swap file is used to recover a crashed editing session.
 The swap file is a file with the same filename as the text file with ".swp"
 appended.
 See ":help recovery".
 .TP
--s
-Silent mode.  Only when started as "Ex" or when the "-e" option was given
-before the "-s" option.
+\-s
+Silent mode.  Only when started as "Ex" or when the "\-e" option was given
+before the "\-s" option.
 .TP
--s {scriptin}
+\-s {scriptin}
 The script file {scriptin} is read.
 The characters in the file are interpreted as if you had typed them.
 The same can be done with the command ":source! {scriptin}".
 If the end of the file is reached before the editor exits, further characters
 are read from the keyboard.
 .TP
--T {terminal}
+\-T {terminal}
 Tells
 .B Vim
 the name of the terminal you are using.
@@ -356,49 +356,49 @@
 .B Vim
 (builtin) or defined in the termcap or terminfo file.
 .TP
--u {vimrc}
+\-u {vimrc}
 Use the commands in the file {vimrc} for initializations.
 All the other initializations are skipped.
 Use this to edit a special kind of files.
 It can also be used to skip all initializations by giving the name "NONE".
 See ":help initialization" within vim for more details.
 .TP
--U {gvimrc}
+\-U {gvimrc}
 Use the commands in the file {gvimrc} for GUI initializations.
 All the other GUI initializations are skipped.
 It can also be used to skip all GUI initializations by giving the name "NONE".
-See ":help gui-init" within vim for more details.
+See ":help gui\-init" within vim for more details.
 .TP
--V[N]
+\-V[N]
 Verbose.  Give messages about which files are sourced and for reading and
 writing a viminfo file.  The optional number N is the value for 'verbose'.
 Default is 10.
 .TP
--v
+\-v
 Start
 .B Vim
 in Vi mode, just like the executable was called "vi".  This only has effect
 when the executable is called "ex".
 .TP
--w {scriptout}
+\-w {scriptout}
 All the characters that you type are recorded in the file
 {scriptout}, until you exit
 .B Vim.
-This is useful if you want to create a script file to be used with "vim -s" or
+This is useful if you want to create a script file to be used with "vim \-s" or
 ":source!".
 If the {scriptout} file exists, characters are appended.
 .TP
--W {scriptout}
-Like -w, but an existing file is overwritten.
+\-W {scriptout}
+Like \-w, but an existing file is overwritten.
 .TP
--x
+\-x
 Use encryption when writing files.   Will prompt for a crypt key.
 .TP
--X
+\-X
 Don't connect to the X server.  Shortens startup time in a terminal, but the
 window title and clipboard will not be used.
 .TP
--y
+\-y
 Start
 .B Vim
 in easy mode, just like the executable was called "evim" or "eview".
@@ -406,58 +406,58 @@
 .B Vim
 behave like a click-and-type editor.
 .TP
--Z
+\-Z
 Restricted mode.  Works like the executable starts with "r".
 .TP
---
+\-\-
 Denotes the end of the options.
 Arguments after this will be handled as a file name.
-This can be used to edit a filename that starts with a '-'.
+This can be used to edit a filename that starts with a '\-'.
 .TP
---echo-wid
+\-\-echo\-wid
 GTK GUI only: Echo the Window ID on stdout
 .TP
---help
-Give a help message and exit, just like "-h".
+\-\-help
+Give a help message and exit, just like "\-h".
 .TP
---literal
+\-\-literal
 Take file name arguments literally, do not expand wildcards.  Not needed on
 Unix, the shell expand wildcards.
 .TP
---noplugin
-Skip loading plugins.  Implied by -u NONE.
+\-\-noplugin
+Skip loading plugins.  Implied by \-u NONE.
 .TP
---remote
+\-\-remote
 Connect to a Vim server and make it edit the files given in the rest of the
 arguments.  If no server is found a warning is given and the files are edited
 in the current Vim.
 .TP
---remote-expr {expr}
+\-\-remote\-expr {expr}
 Connect to a Vim server, evaluate {expr} in it and print the result on stdout.
 .TP
---remote-send {keys}
+\-\-remote\-send {keys}
 Connect to a Vim server and send {keys} to it.
 .TP
---remote-silent
-As --remote, but without the warning when no server is found.
+\-\-remote\-silent
+As \-\-remote, but without the warning when no server is found.
 .TP
---remote-wait
-As --remote, but Vim does not exit until the files have been edited.
+\-\-remote\-wait
+As \-\-remote, but Vim does not exit until the files have been edited.
 .TP
---remote-wait-silent
-As --remote-wait, but without the warning when no server is found.
+\-\-remote\-wait\-silent
+As \-\-remote\-wait, but without the warning when no server is found.
 .TP
---serverlist
+\-\-serverlist
 List the names of all Vim servers that can be found.
 .TP
---servername {name}
+\-\-servername {name}
 Use {name} as the server name.  Used for the current Vim, unless used with a
---remote argument, then it's the name of the server to connect to.
+\-\-remote argument, then it's the name of the server to connect to.
 .TP
---socketid {id}
+\-\-socketid {id}
 GTK GUI only: Use the GtkPlug mechanism to run gvim in another window.
 .TP
---version
+\-\-version
 Print version information and exit.
 .SH ON-LINE HELP
 Type ":help" in
@@ -465,7 +465,7 @@
 to get started.
 Type ":help subject" to get help on a specific subject.
 For example: ":help ZZ" to get help for the "ZZ" command.
-Use <Tab> and CTRL-D to complete subjects (":help cmdline-completion").
+Use <Tab> and CTRL-D to complete subjects (":help cmdline\-completion").
 Tags are present to jump from one place to another (sort of hypertext links,
 see ":help").
 All documentation files can be viewed in this way, for example
@@ -476,7 +476,7 @@
 The
 .B Vim
 documentation files.
-Use ":help doc-file-list" to get the complete list.
+Use ":help doc\-file\-list" to get the complete list.
 .TP
 /usr/local/lib/vim/doc/tags
 The tags file used for finding information in the documentation files.
--- vim64/runtime/doc/xxd.1.orig	2000-11-12 13:12:23.000000000 +0000
+++ vim64/runtime/doc/xxd.1	2005-12-18 00:27:35.000000000 +0000
@@ -21,9 +21,9 @@
 creates a hex dump of a given file or standard input.
 It can also convert a hex dump back to its original binary form.
 Like
-.BR uuencode(1)
+.BR uuencode (1)
 and
-.BR uudecode(1)
+.BR uudecode (1)
 it allows the transmission of binary data in a `mail-safe' ASCII representation,
 but has the advantage of decoding to standard output.
 Moreover, it can be used to perform binary file patching.
@@ -34,12 +34,12 @@
 If
 .I infile
 is specified as a
-.RB \` \- '
+.RB ` \- '
 character, then input is taken from standard input.
 If no
 .I outfile
 is given (or a
-.RB \` \- '
+.RB ` \- '
 character is in its place), results are sent to standard output.
 .PP
 Note that a "lazy" parser is used which does not check for more than the first
@@ -61,8 +61,8 @@
 .TP
 .IR \-b " | " \-bits
 Switch to bits (binary digits) dump, rather than hexdump.
-This option writes octets as eight digits "1"s and "0"s instead of a normal
-hexacecimal dump. Each line is preceded by a line number in hexadecimal and
+This option writes bytes as eight digits "1"s and "0"s instead of a normal
+hexadecimal dump. Each line is preceded by a line number in hexadecimal and
 followed by an ascii (or ebcdic) representation. The command line switches
 \-r, \-p, \-i do not work with this mode.
 .TP
@@ -70,7 +70,7 @@
 .IR "\-c cols " | " \-cols cols"
 format
 .RI < cols >
-octets per line. Default 16 (\-i: 12, \-ps: 30, \-b: 6). Max 256.
+bytes per line. Default 16 (\-i: 12, \-ps: 30, \-b: 6). Max 256.
 .TP
 .IR \-E " | " \-EBCDIC
 Change the character encoding in the righthand column from ASCII to EBCDIC.
@@ -78,7 +78,7 @@
 meaningless in combinations with \-r, \-p or \-i.
 .TP
 .IR "\-g bytes " | " \-groupsize bytes"
-seperate the output of every
+separate the output of every
 .RI < bytes >
 bytes (two hex characters or eight bit-digits each) by a whitespace.
 Specify
@@ -98,7 +98,7 @@
 .IR "\-l len " | " \-len len"
 stop after writing
 .RI  < len >
-octets.
+bytes.
 .TP
 .IR \-p " | " \-ps " | " \-postscript " | " \-plain
 output in postscript continuous hexdump style. Also known as plain hexdump
@@ -115,19 +115,19 @@
 .TP
 .I \-seek offset
 When used after
-.I \-r
-: revert with
+.IR \-r :
+revert with
 .RI < offset >
 added to file positions found in hexdump.
 .TP
-.I \-s [\+][\-]seek
+.I \-s [+][\-]seek
 start at
 .RI < seek >
 bytes abs. (or rel.) infile offset.
-\fI\+ \fRindicates that the seek is relative to the current stdin file position
+\fI+ \fRindicates that the seek is relative to the current stdin file position
 (meaningless when not reading from stdin).  \fI\- \fRindicates that the seek
 should be that many characters from the end of the input (or if combined with
-\fI \+ \fR: before the current stdin file position).
+\fI+\fR: before the current stdin file position).
 Without \-s option, xxd starts at the current file position.
 .TP
 .I \-u
@@ -160,12 +160,12 @@
 .br
 and
 .br
-\fI% xxd \-i \< file\fR
+\fI% xxd \-i < file\fR
 .PP
-.I xxd \-s \+seek
+.I xxd \-s +seek
 may be different from
-.I xxd \-s seek
-, as lseek(2) is used to "rewind" input.  A '+'
+.IR "xxd \-s seek" ,
+as lseek(2) is used to "rewind" input.  A '+'
 makes a difference if the input source is stdin, and if stdin's file position
 is not at the start of the file by the time xxd is started and given its input.
 The following examples may help to clarify (or further confuse!)...
@@ -173,17 +173,17 @@
 Rewind stdin before reading; needed because the `cat' has already read to the
 end of stdin.
 .br
-\fI% sh \-c 'cat > plain_copy; xxd \-s 0 > hex_copy' < file
+\fI% sh \-c "cat > plain_copy; xxd \-s 0 > hex_copy" < file
 .PP
 Hexdump from file position 0x480 (=1024+128) onwards.
 The `+' sign means "relative to the current position", thus the `128' adds to
 the 1k where dd left off.
 .br
-\fI% sh \-c 'dd of=plain_snippet bs=1k count=1; xxd \-s +128 > hex_snippet' < file
+\fI% sh \-c "dd of=plain_snippet bs=1k count=1; xxd \-s +128 > hex_snippet" < file
 .PP
-Hexdump from file position 0x100 ( = 1024-768) on.
+Hexdump from file position 0x100 ( = 1024\-768) on.
 .br
-\fI% sh \-c 'dd of=plain_snippet bs=1k count=1; xxd \-s +-768 > hex_snippet' < file
+\fI% sh \-c "dd of=plain_snippet bs=1k count=1; xxd \-s +\-768 > hex_snippet" < file
 .PP
 However, this is a rare situation and the use of `+' is rarely needed.
 the author prefers to monitor the effect of xxd with strace(1) or truss(1), whenever \-s is used.
@@ -191,20 +191,18 @@
 .PP
 .br
 Print everything but the first three lines (hex 0x30 bytes) of
-.B file
-\.
+.BR file .
 .br
 \fI% xxd \-s 0x30 file
 .PP
 .br
 Print 3 lines (hex 0x30 bytes) from the end of
-.B file
-\.
+.BR file .
 .br
 \fI% xxd \-s \-0x30 file
 .PP
 .br
-Print 120 bytes as continuous hexdump with 40 octets per line.
+Print 120 bytes as continuous hexdump with 40 bytes per line.
 .br
 \fI% xxd \-l 120 \-ps \-c 20 xxd.1\fR
 .br
@@ -222,7 +220,7 @@
 .br
 
 .br
-Hexdump the first 120 bytes of this man page with 12 octets per line.
+Hexdump the first 120 bytes of this man page with 12 bytes per line.
 .br
 \fI% xxd \-l 120 \-c 12 xxd.1\fR
 .br
@@ -260,13 +258,13 @@
 .B output_file
 and prepend 100 bytes of value 0x00.
 .br
-\fI% xxd input_file | xxd \-r \-s 100 \> output_file\fR
+\fI% xxd input_file | xxd \-r \-s 100 > output_file\fR
 .br
 
 .br
 Patch the date in the file xxd.1
 .br
-\fI% echo '0000029: 3574 68' | xxd \-r \- xxd.1\fR
+\fI% echo "0000029: 3574 68" | xxd \-r \- xxd.1\fR
 .br
 \fI% xxd \-s 0x28 \-l 12 \-c 12 xxd.1\fR
 .br
@@ -276,7 +274,7 @@
 Create a 65537 byte file with all bytes 0x00,
 except for the last one which is 'A' (hex 0x41).
 .br
-\fI% echo '010000: 41' | xxd \-r \> file\fR
+\fI% echo "010000: 41" | xxd \-r > file\fR
 .PP
 .br
 Hexdump this file with autoskip.
@@ -293,7 +291,7 @@
 The number after '\-r \-s' adds to the linenumbers found in the file;
 in effect, the leading bytes are suppressed.
 .br
-\fI% echo '010000: 41' | xxd \-r \-s \-0x10000 \> file\fR
+\fI% echo "010000: 41" | xxd \-r \-s \-0x10000 > file\fR
 .PP
 Use xxd as a filter within an editor such as
 .B vim(1)
@@ -356,7 +354,7 @@
 .br
 (c) 1990-1997 by Juergen Weigert
 .br
-<jnweiger@informatik.uni-erlangen.de>
+<jnweiger@informatik.uni\-erlangen.de>
 .LP
 Distribute freely and credit me,
 .br
