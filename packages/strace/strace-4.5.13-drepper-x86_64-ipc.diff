2005-07-31  Ulrich Drepper  <drepper@redhat.com>                                                           

	* linux/x86_64/syscallent.h: Fix syscall parameter count for
	msgrcv and msgctl.
	* ipc.c: Don't use LINUX specific code in sys_msgctl, sys_msgsnd,
	sys_msgrcv, sys_semop, sys_shmctl, sys_shmat, sys_shmdt.
	Add appropriate non-demux code to sys_semtimedop.
	Fixes RH#164755.

diff -upk.orig strace-4.5.13.orig/ipc.c strace-4.5.13/ipc.c
--- strace-4.5.13.orig/ipc.c	2005-06-01 19:02:37 +0000
+++ strace-4.5.13/ipc.c	2005-08-08 16:54:31 +0000
@@ -183,7 +183,7 @@ struct tcb *tcp;
 	if (entering(tcp)) {
 		tprintf("%lu, ", tcp->u_arg[0]);
 		PRINTCTL(msgctl_flags, tcp->u_arg[1], "MSG_???");
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 		tprintf(", %#lx", tcp->u_arg[3]);
 #else /* !LINUX */
 		tprintf(", %#lx", tcp->u_arg[2]);
@@ -199,7 +199,7 @@ struct tcb *tcp;
 
 	if (entering(tcp)) {
 		tprintf("%lu", tcp->u_arg[0]);
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 		umove(tcp, tcp->u_arg[3], &mtype);
 		tprintf(", {%lu, ", mtype);
 		printstr(tcp, tcp->u_arg[3] + sizeof(long),
@@ -224,7 +224,7 @@ int sys_msgrcv(tcp)
 struct tcb *tcp;
 {
 	long mtype;
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 	struct ipc_wrapper {
 		struct msgbuf *msgp;
 		long msgtyp;
@@ -234,7 +234,7 @@ struct tcb *tcp;
 
 	if (exiting(tcp)) {
 		tprintf("%lu", tcp->u_arg[0]);
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 		umove(tcp, tcp->u_arg[3], &tmp);
 		umove(tcp, (long) tmp.msgp, &mtype);
 		tprintf(", {%lu, ", mtype);
@@ -263,7 +263,7 @@ struct tcb *tcp;
 {
 	if (entering(tcp)) {
 		tprintf("%lu", tcp->u_arg[0]);
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 		tprintf(", %#lx", tcp->u_arg[3]);
 		tprintf(", %lu", tcp->u_arg[1]);
 #else /* !LINUX */
@@ -280,9 +280,15 @@ struct tcb *tcp;
 {
 	if (entering(tcp)) {
 		tprintf("%lu", tcp->u_arg[0]);
+# ifndef X86_64
 		tprintf(", %#lx", tcp->u_arg[3]);
 		tprintf(", %lu, ", tcp->u_arg[1]);
 		printtv(tcp, tcp->u_arg[5]);
+# else
+		tprintf(", %#lx", tcp->u_arg[1]);
+		tprintf(", %lu, ", tcp->u_arg[2]);
+		printtv(tcp, tcp->u_arg[3]);
+# endif
 	}
 	return 0;
 }
@@ -340,7 +346,7 @@ struct tcb *tcp;
 	if (entering(tcp)) {
 		tprintf("%lu, ", tcp->u_arg[0]);
 		PRINTCTL(shmctl_flags, tcp->u_arg[1], "SHM_???");
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 		tprintf(", %#lx", tcp->u_arg[3]);
 #else /* !LINUX */
 		tprintf(", %#lx", tcp->u_arg[2]);
@@ -358,7 +364,7 @@ struct tcb *tcp;
 
 	if (exiting(tcp)) {
 		tprintf("%lu", tcp->u_arg[0]);
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 		tprintf(", %#lx", tcp->u_arg[3]);
 		tprintf(", ");
 		printflags(shm_flags, tcp->u_arg[1], "SHM_???");
@@ -383,7 +389,7 @@ int sys_shmdt(tcp)
 struct tcb *tcp;
 {
 	if (entering(tcp))
-#ifdef LINUX
+#if defined LINUX && !defined X86_64
 		tprintf("%#lx", tcp->u_arg[3]);
 #else /* !LINUX */
 		tprintf("%#lx", tcp->u_arg[0]);
diff -upk.orig strace-4.5.13.orig/linux/x86_64/syscallent.h strace-4.5.13/linux/x86_64/syscallent.h
--- strace-4.5.13.orig/linux/x86_64/syscallent.h	2005-08-03 11:26:43 +0000
+++ strace-4.5.13/linux/x86_64/syscallent.h	2005-08-08 16:54:31 +0000
@@ -68,8 +68,8 @@
 	{ 4,	TI,	sys_shmdt,		"shmdt"		},  /* 67 */
 	{ 4,	TI,	sys_msgget,		"msgget"	},  /* 68 */
 	{ 4,	TI,	sys_msgsnd,		"msgsnd"	},  /* 69 */
-	{ 4,	TI,	sys_msgrcv,		"msgrcv"	},  /* 70 */
-	{ 4,	TI,	sys_msgctl,		"msgctl"	},  /* 71 */
+	{ 5,	TI,	sys_msgrcv,		"msgrcv"	},  /* 70 */
+	{ 3,	TI,	sys_msgctl,		"msgctl"	},  /* 71 */
 	{ 3,	TD,	sys_fcntl,		"fcntl"		},  /* 72 */
 	{ 2,	TD,	sys_flock,		"flock"		},  /* 73 */
 	{ 1,	TD,	sys_fsync,		"fsync"		},  /* 74 */
