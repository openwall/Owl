Patch by John Bradshaw <john@johnbradshaw.org> for popt <= 1.16 which fixes some
spelling mistakes in popt man page.

See https://bugzilla.redhat.com/show_bug.cgi?id=675567 for further details, please.
This patch was proposed to upstream: http://rpm5.org/community/popt-devel/0263.html

Upstream already corrected some issues with http://rpm5.org/cvs/chngview?cn=16879
and solved the last ones with http://rpm5.org/cvs/chngview?cn=17375 now. Thus popt
1.17 should make this patch completely obsolete.

--- popt-1.16/popt.3				2009-07-25 20:52:36.000000000 +0200
+++ popt-1.16/popt.3.man-page			2013-11-24 15:59:58.000000000 +0100
@@ -200,7 +200,7 @@
 .RB "This macro includes another option table (via " POPT_ARG_INCLUDE_TABLE
 ; see below) in the main one which provides the table entries for these
 .RB "arguments. When " --usage " or " --help " are passed to programs which
-use popt's automatical help, popt displays the appropriate message on 
+use popt's automatic help, popt displays the appropriate message on 
 stderr as soon as it finds the option, and exits the program with a
 return code of 0. If you want to use popt's automatic help generation in
 a different way, you need to explicitly add the option entries to your programs 
@@ -210,7 +210,7 @@
 the argument will not be shown in help output.
 .sp
 If the \fIargInfo\fR value is bitwise or'd with \fBPOPT_ARGFLAG_SHOW_DEFAULT\fR,
-the inital value of the arg will be shown in help output.
+the initial value of the arg will be shown in help output.
 .sp
 The final structure in the table should have all the pointer values set
 .RB "to " NULL " and all the arithmetic values set to 0, marking the "
@@ -233,7 +233,7 @@
 contain a overall description of the option table being included.
 .sp
 The other special option table entry type tells popt to call a function (a
-callback) when any option in that table is found. This is especially usefull
+callback) when any option in that table is found. This is especially useful
 when included option tables are being used, as the program which provides
 the top-level option table doesn't need to be aware of the other options
 which are provided by the included table. When a callback is set for
@@ -473,7 +473,7 @@
 .TP
 .B POPT_ERROR_BADNUMBER
 A conversion from a string to a number (int or long) failed due
-to the string containing nonnumeric characters. This occurs when
+to the string containing non-numeric characters. This occurs when
 .BR poptGetNextOpt() " is processing an argument of type " 
 .BR POPT_ARG_INT ", " POPT_ARG_SHORT ", " POPT_ARG_LONG ", " POPT_ARG_LONGLONG ", "
 .RB POPT_ARG_FLOAT ", or " POPT_ARG_DOUBLE "."  
@@ -517,7 +517,7 @@
 applications. When an error is detected from most of the functions, 
 an error message is printed along with the error string from 
 .BR poptStrerror() ". When an error occurs during argument parsing, "
-code similiar to the following displays a useful error message:
+code similar to the following displays a useful error message:
 .sp
 .nf
 fprintf(stderr, "%s: %s\\n",
@@ -608,7 +608,7 @@
 .RI "an " argv "-style array, some programs need to parse strings that "
 are formatted identically to command lines. To facilitate this, popt 
 provides a function that parses a string into an array of strings, 
-using rules similiar to normal shell parsing.
+using rules similar to normal shell parsing.
 .sp
 .nf
 .B "#include <popt.h>"
