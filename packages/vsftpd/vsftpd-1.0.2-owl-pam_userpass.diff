diff -upr vsftpd-1.0.2.orig/sysdeputil.c vsftpd-1.0.2/sysdeputil.c
--- vsftpd-1.0.2.orig/sysdeputil.c	Tue Apr  2 02:04:16 2002
+++ vsftpd-1.0.2/sysdeputil.c	Thu Apr  3 00:08:20 2003
@@ -94,7 +94,7 @@
 /* END config */
 
 /* PAM support - we include our own dummy version if the system lacks this */
-#include <security/pam_appl.h>
+#include <security/pam_userpass.h>
 
 /* No PAM? Try getspnam() with a getpwnam() fallback */
 #ifndef VSF_SYSDEP_HAVE_PAM
@@ -221,9 +221,7 @@ vsf_sysdep_check_auth(const struct mystr
 
 #else /* VSF_SYSDEP_HAVE_PAM */
 
-static struct mystr s_pword_str;
-static int pam_conv_func(int nmsg, const struct pam_message** p_msg,
-                         struct pam_response** p_reply, void* p_addata);
+static pam_userpass_t userpass;
 
 int
 vsf_sysdep_check_auth(const struct mystr* p_user_str,
@@ -234,10 +232,11 @@ vsf_sysdep_check_auth(const struct mystr
   pam_handle_t* pamh = 0;
   struct pam_conv the_conv =
   {
-    &pam_conv_func,
-    0
+    pam_userpass_conv,
+    &userpass
   };
-  str_copy(&s_pword_str, p_pass_str);
+  userpass.user = str_getbuf(p_user_str);
+  userpass.pass = str_getbuf(p_pass_str);
   retval = pam_start(tunable_pam_service_name,
                      str_getbuf(p_user_str), &the_conv, &pamh);
   if (retval != PAM_SUCCESS)
@@ -280,6 +279,7 @@ vsf_sysdep_check_auth(const struct mystr
   return 1;
 }
 
+#if 0
 static int
 pam_conv_func(int nmsg, const struct pam_message** p_msg,
               struct pam_response** p_reply, void* p_addata)
@@ -315,6 +315,7 @@ pam_conv_func(int nmsg, const struct pam
   *p_reply = p_resps;
   return PAM_SUCCESS;
 }
+#endif
 
 #endif /* VSF_SYSDEP_HAVE_PAM */
 
