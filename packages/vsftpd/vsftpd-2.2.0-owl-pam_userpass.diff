--- vsftpd-2.2.0/sysdeputil.c.orig	2009-07-14 04:03:31.000000000 +0000
+++ vsftpd-2.2.0/sysdeputil.c	2009-07-18 08:02:39.000000000 +0000
@@ -166,7 +166,7 @@
 /* END config */
 
 /* PAM support - we include our own dummy version if the system lacks this */
-#include <security/pam_appl.h>
+#include <security/pam_userpass.h>
 
 /* No PAM? Try getspnam() with a getpwnam() fallback */
 #ifndef VSF_SYSDEP_HAVE_PAM
@@ -305,9 +305,7 @@
 #else /* VSF_SYSDEP_HAVE_PAM */
 
 static pam_handle_t* s_pamh;
-static struct mystr s_pword_str;
-static int pam_conv_func(int nmsg, const struct pam_message** p_msg,
-                         struct pam_response** p_reply, void* p_addata);
+static pam_userpass_t userpass;
 static void vsf_auth_shutdown(void);
 
 int
@@ -319,14 +317,15 @@
   const char* pam_user_name = 0;
   struct pam_conv the_conv =
   {
-    &pam_conv_func,
-    0
+    pam_userpass_conv,
+    &userpass
   };
   if (s_pamh != 0)
   {
     bug("vsf_sysdep_check_auth");
   }
-  str_copy(&s_pword_str, p_pass_str);
+  userpass.user = str_getbuf(p_user_str);
+  userpass.pass = str_getbuf(p_pass_str);
   retval = pam_start(tunable_pam_service_name,
                      str_getbuf(p_user_str), &the_conv, &s_pamh);
   if (retval != PAM_SUCCESS)
@@ -432,6 +431,7 @@
   vsf_remove_uwtmp();
 }
 
+#if 0
 static int
 pam_conv_func(int nmsg, const struct pam_message** p_msg,
               struct pam_response** p_reply, void* p_addata)
@@ -467,6 +467,7 @@
   *p_reply = p_resps;
   return PAM_SUCCESS;
 }
+#endif
 
 #endif /* VSF_SYSDEP_HAVE_PAM */
 
