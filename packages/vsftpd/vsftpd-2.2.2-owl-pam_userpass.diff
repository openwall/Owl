diff -urp vsftpd-2.2.2-owl-warnings/sysdeputil.c vsftpd-2.2.2/sysdeputil.c
--- vsftpd-2.2.2-owl-warnings/sysdeputil.c	2009-11-18 04:09:48 +0000
+++ vsftpd-2.2.2/sysdeputil.c	2009-11-18 04:11:02 +0000
@@ -163,7 +163,7 @@
 /* END config */
 
 /* PAM support - we include our own dummy version if the system lacks this */
-#include <security/pam_appl.h>
+#include <security/pam_userpass.h>
 
 /* No PAM? Try getspnam() with a getpwnam() fallback */
 #ifndef VSF_SYSDEP_HAVE_PAM
@@ -309,9 +309,7 @@ vsf_sysdep_check_auth(struct mystr* p_us
 typedef lo_const void* pam_item_t;
 
 static pam_handle_t* s_pamh;
-static struct mystr s_pword_str;
-static int pam_conv_func(int nmsg, const struct pam_message** p_msg,
-                         struct pam_response** p_reply, void* p_addata);
+static pam_userpass_t userpass;
 static void vsf_auth_shutdown(void);
 
 int
@@ -324,14 +322,15 @@ vsf_sysdep_check_auth(struct mystr* p_us
   const char* pam_user_name = 0;
   struct pam_conv the_conv =
   {
-    &pam_conv_func,
-    0
+    pam_userpass_conv,
+    &userpass
   };
   if (s_pamh != 0)
   {
     bug("vsf_sysdep_check_auth");
   }
-  str_copy(&s_pword_str, p_pass_str);
+  userpass.user = str_getbuf(p_user_str);
+  userpass.pass = str_getbuf(p_pass_str);
   retval = pam_start(tunable_pam_service_name,
                      str_getbuf(p_user_str), &the_conv, &s_pamh);
   if (retval != PAM_SUCCESS)
@@ -438,6 +437,7 @@ vsf_auth_shutdown(void)
   vsf_remove_uwtmp();
 }
 
+#if 0
 static int
 pam_conv_func(int nmsg, const struct pam_message** p_msg,
               struct pam_response** p_reply, void* p_addata)
@@ -473,6 +473,7 @@ pam_conv_func(int nmsg, const struct pam
   *p_reply = p_resps;
   return PAM_SUCCESS;
 }
+#endif
 
 #endif /* VSF_SYSDEP_HAVE_PAM */
 
