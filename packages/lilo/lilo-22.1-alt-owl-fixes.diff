diff -ur lilo-22.1.orig/cfg.c lilo-22.1/cfg.c
--- lilo-22.1.orig/cfg.c	Sat Oct 27 19:40:25 2001
+++ lilo-22.1/cfg.c	Fri Feb 15 18:27:25 2002
@@ -208,7 +208,7 @@
 }
 
 
-void cfg_error(char *msg,...)
+void __attribute__ ((format (printf, 1, 2))) cfg_error(char *msg,...)
 {
     va_list ap;
 
diff -ur lilo-22.1.orig/cfg.h lilo-22.1/cfg.h
--- lilo-22.1.orig/cfg.h	Fri Apr  6 03:22:27 2001
+++ lilo-22.1/cfg.h	Fri Feb 15 18:27:25 2002
@@ -31,7 +31,7 @@
 /* Opens the configuration file. Returns the file descriptor of the open
    file. */
 
-void cfg_error(char *msg,...);
+void cfg_error(char *msg,...) __attribute__ ((format (printf, 1, 2)));
 
 /* Signals an error while parsing the configuration file and terminates the
    program. */
diff -ur lilo-22.1.orig/common.c lilo-22.1/common.c
--- lilo-22.1.orig/common.c	Sat Oct 27 19:39:26 2001
+++ lilo-22.1/common.c	Fri Feb 15 18:27:25 2002
@@ -32,24 +32,26 @@
 	CRC_POLY1, CRC_POLY2, CRC_POLY3, CRC_POLY4 };
 #endif	
 
-/*volatile*/ void pdie(char *msg)
+/*volatile*/ void pdie(const char *msg)
 {
     fflush(stdout);
     perror(msg);
     exit(1);
 }
 
+extern const char *__progname;
 
-/*volatile*/ void die(char *fmt,...)
+/*volatile*/ void __attribute__ ((format (printf, 1, 2))) die(const char *fmt, ...)
 {
-    va_list ap;
+    va_list args;
 
-    fflush(stdout);
-    fprintf(errstd,"Fatal: ");       /* JRC */
-    va_start(ap,fmt);
-    vfprintf(errstd,fmt,ap);
-    va_end(ap);
-    fputc('\n',errstd);
+    va_start(args,fmt);
+    fprintf(errstd,"%s: Fatal: ",__progname);
+    vfprintf(errstd,fmt,args);
+    va_end(args);
+    fputs("\r\n",errstd);
+
+    fflush(errstd);
     exit(1);
 }
 
diff -ur lilo-22.1.orig/common.h lilo-22.1/common.h
--- lilo-22.1.orig/common.h	Sat Oct 27 23:33:32 2001
+++ lilo-22.1/common.h	Fri Feb 15 18:27:25 2002
@@ -231,12 +231,12 @@
 extern FILE *errstd;
 
 
-/*volatile*/ void pdie(char *msg);
+/*volatile*/ void pdie(const char *msg) __attribute__ ((noreturn));
 
 /* Do a perror and then exit. */
 
 
-/*volatile*/ void die(char *fmt,...);
+/*volatile*/ void die(const char *fmt,...) __attribute__ ((noreturn)) __attribute__ ((format (printf, 1, 2)));
 
 /* fprintf an error message and then exit. */
 
diff -ur lilo-22.1.orig/geometry.c lilo-22.1/geometry.c
--- lilo-22.1.orig/geometry.c	Tue Oct 30 06:16:55 2001
+++ lilo-22.1/geometry.c	Fri Feb 15 18:27:25 2002
@@ -632,7 +632,7 @@
 }
 
 
-int geo_open(GEOMETRY *geo,char *name,int flags)
+int geo_open(GEOMETRY *geo,const char *name,int flags)
 {
     char *here;
     int user_dev,block_size;
diff -ur lilo-22.1.orig/geometry.h lilo-22.1/geometry.h
--- lilo-22.1.orig/geometry.h	Tue May 15 06:55:36 2001
+++ lilo-22.1/geometry.h	Fri Feb 15 18:27:25 2002
@@ -50,7 +50,7 @@
    number to user_device unless -1. If ALL is zero, only the BIOS device number
    is retrieved and the other geometry information is undefined. */
 
-int geo_open(GEOMETRY *geo,char *name,int flags);
+int geo_open(GEOMETRY *geo,const char *name,int flags);
 
 /* Opens the specified file or block device, obtains the necessary geometry
    information and returns the file descriptor. If the name contains a BIOS
diff -ur lilo-22.1.orig/partition.c lilo-22.1/partition.c
--- lilo-22.1.orig/partition.c	Tue Oct 30 22:00:59 2001
+++ lilo-22.1/partition.c	Fri Feb 15 18:32:34 2002
@@ -243,7 +243,7 @@
     int i;
 
     if (curr_prt_map == PRTMAP_SIZE)
-	cfg_error("Too many change rules (more than %s)",PRTMAP_SIZE);
+	cfg_error("Too many change rules (more than %d)",PRTMAP_SIZE);
     if (verbose >= 3)
 	printf("  Adding rule: disk 0x%02x, offset 0x%x, 0x%02x -> 0x%02x\n",
 	    bios,PART_TABLE_OFFSET+offset,expect,set);
@@ -256,7 +256,7 @@
 	  (prt_map[i] >> 24) == expect)
 	    die("Redundant rule: disk 0x%02x, offset 0x%x: 0x%02x -> 0x%02x "
 	      "-> 0x%02x",bios,PART_TABLE_OFFSET+offset,
-	     (prt_map[i] >> 16) & 0xff,expect,set);
+	      (unsigned int)(prt_map[i] >> 16) & 0xff,expect,set);
     }
     curr_prt_map++;
 }
