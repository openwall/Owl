diff -puNr lilo-22.7.orig/lilo.c lilo-22.7/lilo.c
--- lilo-22.7.orig/lilo.c	2005-03-13 20:00:29 +0000
+++ lilo-22.7/lilo.c	2005-06-13 17:00:48 +0000
@@ -56,6 +56,10 @@ FILE *errstd;
 
 #if !__MSDOS__
 
+extern const char *__progname;
+
+static void usage(int ret) __attribute__ ((noreturn));
+
 static void show_other(int fd)
 {
     BOOT_SECTOR buf[SETUPSECS-1];
@@ -98,7 +102,9 @@ static void show_other(int fd)
 }
 #endif /* !__MSDOS__ */
 
-static void show_images(char *map_file)
+static void show_images(const char *map_file) __attribute__ ((noreturn));
+
+static void show_images(const char *map_file)
 {
 #if !__MSDOS__
     DESCR_SECTORS descrs;
@@ -343,55 +349,66 @@ static char buffer[SECTOR_SIZE];
 #endif /* !__MSDOS__ */
     	  	exit(0);
 #if !__MSDOS__
-    fflush(stdout);
-    fprintf(errstd,"Checksum error\n");
-    exit(1);
+    die("Checksum error");
 #endif /* !__MSDOS__ */
 }
 
 
-static void usage(char *name)
+static void usage(int ret)
 {
-    char *here;
-
+    fprintf(errstd,
+"Usage: %s [ -C config_file ] -q [ -m map_file ] [ -v N | -v ... ]\n"
 #if !__MSDOS__
-    here = strrchr(name,'/');
-#else /* __MSDOS__ */
-    here = strrchr(name,'\\');
-#endif /* __MSDOS__ */
-    if (here) name = here+1;
-    fprintf(errstd,"usage: %s [ -C config_file ] -q [ -m map_file ] "
-      "[ -v N | -v ... ]\n",name);
-#if !__MSDOS__
-    fprintf(errstd,"%7s%s [ -C config_file ] [ -b boot_device ] [ -c ] "
-      "[ -g | -l | -L ]\n","",name);
-    fprintf(errstd,"%12s[ -F ] [ -i boot_loader ] [ -m map_file ] [ -d delay ]\n","");
-    fprintf(errstd,"%12s[ -v N | -v ... ] [ -t ] [ -s save_file | -S save_file ]\n",
-      "");
-    fprintf(errstd,"%12s[ -p ][ -P fix | -P ignore ] [ -r root_dir ] [ -w | -w+ ]\n","");
-#endif /* !__MSDOS__ */
-    fprintf(errstd,"%7s%s [ -C config_file ] [ -m map_file ] "
-      "-R [ word ... ]\n","",name);
-#if !__MSDOS__
-    fprintf(errstd,"%7s%s [ -C config_file ] -I name [ options ]\n","",name);
-    fprintf(errstd,"%7s%s [ -C config_file ] [ -s save_file ] "
-      "-u | -U [ boot_device ]\n","",name);
-    fprintf(errstd,"%7s%s -A /dev/XXX [ N ]\t\tinquire/activate a partition\n","",name);
-    fprintf(errstd,"%7s%s -M /dev/XXX [ mbr | ext ]\tinstall master boot record\n","",name);
-    fprintf(errstd,"%7s%s -T help \t\t\tlist additional options\n", "", name);
-    fprintf(errstd,"%7s%s -X\t\t\t\tinternal compile-time options\n", "", name);
+"       %s [ -C config_file ] [ -b boot_device ] [ -c ] [ -g | -l | -L ]\n"
+"            [ -F ] [ -i boot_loader ] [ -m map_file ] [ -d delay ]\n"
+"            [ -v N | -v ... ] [ -t ] [ -s save_file | -S save_file ]\n"
+"            [ -p ] [ -P fix | -P ignore ] [ -r root_dir ] [ -w | -w+ ]\n"
+#endif /* !__MSDOS__ */
+"       %s [ -C config_file ] [ -m map_file ] -R [ word ... ]\n"
+#if !__MSDOS__
+"       %s [ -C config_file ] -I name [ options ]\n"
+"       %s [ -C config_file ] [ -s save_file ] -u | -U [ boot_device ]\n"
+"       %s -A /dev/XXX [ N ]\t\tinquire/activate a partition\n"
+"       %s -M /dev/XXX [ mbr | ext ]\tinstall master boot record\n"
+"       %s -T help \t\t\tlist additional options\n"
+"       %s -X\t\t\t\tinternal compile-time options\n"
+#endif /* !__MSDOS__ */
+"       %s -V [ -v ]\t\t\tversion information\n\n",
+        __progname, __progname,
+#if !__MSDOS__
+        __progname, __progname, __progname, __progname,
+        __progname, __progname, __progname,
 #endif /* !__MSDOS__ */
-    fprintf(errstd,"%7s%s -V [ -v ]\t\t\tversion information\n\n","",name);
-    exit(1);
+        __progname);
+    exit(ret);
 }
 
 
-int main(int argc,char **argv)
+static char *get_two_args(const char *str, char **extra_arg, char *defstr)
 {
-    char *name,*reboot_arg,*ident_opt,*new_root;
-    char *tell_param, *uninst_dev, *param, *act1, *act2, ch;
-static char *bitmap_file;
-    int more,version,uninstall,validate,activate,instmbr,geom;
+    char *arg1 = strdup(str);
+    char *arg2 = strchr(arg1, ' ');
+
+    extra_arg = 0;
+    if (arg2) {
+        for (; ' ' == *arg2; ++arg2)
+            *arg2 = '\0';
+        if (*arg2)
+            *extra_arg = arg2;
+    }
+    if (defstr && !*extra_arg)
+        *extra_arg = defstr;
+    return arg1;
+}
+
+
+int main(int argc,char *const argv[])
+{
+    char *reboot_arg = 0, *ident_opt = 0, *new_root = 0, *param = 0;
+    char *tell_param = 0, *uninst_dev = 0, *act1 = 0, *act2 = 0, ch;
+    static char *bitmap_file = 0;
+    int more = 0, version = 0, uninstall = 0, validate = 0;
+    int activate = 0, instmbr = 0, geom = 0;
     int fd, temp=0, tell_early=0;
     int raid_offset;
 #if !__MSDOS__
@@ -406,17 +423,8 @@ static char *bitmap_file;
 #endif /* !__MSDOS__ */
 #endif
     config_file = DFL_CONFIG;
-    act1 = act2 = tell_param = 
-	    reboot_arg = identify = ident_opt = new_root = uninst_dev = NULL;
-    do_md_install = zflag =
-	    version = uninstall = validate = activate = instmbr = 0;
+    do_md_install = zflag = 0;
     verbose = -1;
-#if !__MSDOS__
-    name = *argv;
-#else  /* __MSDOS__ */
-    name = "lilo";
-#endif /* __MSDOS__ */
-    argc--;
 
 #if !__MSDOS__    
     if (atexit( (void(*)(void)) sync)) die("atexit(sync)");
@@ -424,33 +432,16 @@ static char *bitmap_file;
 #endif /* !__MSDOS__ */
     
     cfg_init(cf_options);
-    while (argc && **++argv == '-') {
-	argc--;
-      /* first those options with a mandatory parameter */
-      /* Notably absent are "RuUvw" */
-	if (strchr("AbBCdDEfiImMPrsSTxZ", ch=(*argv)[1])) {
-	    if ((*argv)[2]) param = (*argv)+2;
-	    else {
-		param = *++argv;
-		if(argc-- <= 0) usage(name);
-	    }
-	} else { 
-	    param = NULL;
-	    if (strchr("cFglLpqtVXz", ch)	/* those with no args */
-	    	&& (*argv)[2]) usage(name);
-	}
-#if 0
-fprintf(errstd,"argc=%d, *argv=%s, ch=%c param=%s\n", argc, *argv, ch, param);
-#endif
+
+    while ((ch = getopt(argc, argv,
+        "A:B:b:cC:d:D:E:Ff:hi:I:lLm:M:P:qr:R:s:S:tT:u::U::v::Vwx:X:zZ")) != -1) {
+        param = optarg;
+
 	switch (ch) {
 #if !__MSDOS__
 	    case 'A':
 		activate = 1;
-		act1 = param;
-		if (argc && argv[1][0] != '-') {
-		    act2 = *++argv;
-		    argc--;
-		}
+		act1 = get_two_args(param, &act2, 0);
 		break;
 	    case 'b':
 		cfg_set(cf_options,"boot",param,NULL);
@@ -490,13 +481,7 @@ fprintf(errstd,"argc=%d, *argv=%s, ch=%c
 		cfg_set(cf_options,"install",param,NULL);
 		break;
 	    case 'I':
-		identify = param;
-		if (argc && *argv[1] != '-') {
-		    ident_opt = *++argv;
-		    argc--;
-		} else {
-		    ident_opt = "i";
-		}
+		identify = get_two_args(param, &ident_opt, "i");
 		break;
 	    case 'l':
 		geometric |= AD_LINEAR;
@@ -511,13 +496,7 @@ fprintf(errstd,"argc=%d, *argv=%s, ch=%c
 #if !__MSDOS__
 	    case 'M':
 		instmbr = 1;
-		act1 = param;
-#if !defined LCF_BUILTIN	|| 1
-		if (argc && argv[1][0] != '-') {
-		    act2 = *++argv;
-		    argc--;
-		}
-#endif
+		act1 = get_two_args(param, &act2, 0);
 		break;
 	    case 'p':
 		passw = 1;	/* force re-gen of password file */
@@ -546,24 +525,7 @@ fprintf(errstd,"argc=%d, *argv=%s, ch=%c
 		break;
 #endif /* !__MSDOS__ */
 	    case 'R':
-	        if (*(param = (*argv)+2)) argc++;
-	        else if (argc) param = *++argv;
-	        else reboot_arg = "";
-	        
-		while (argc) {
-			if (!reboot_arg)
-			    *(reboot_arg = alloc(strlen(param)+1)) = 0;
-			else {
-			    param = *++argv;
-			    strcat(reboot_arg = ralloc(reboot_arg,
-			        strlen(reboot_arg)+strlen(param)+2)," ");
-			}
-			strcat(reboot_arg, param);
-			argc--;
-		    }
-#if 0
-fprintf(errstd,"REBOOT=\"%s\"\n", reboot_arg);		    
-#endif
+	        reboot_arg = param;
 		break;
 #if !__MSDOS__
 	    case 's':
@@ -583,25 +545,17 @@ fprintf(errstd,"REBOOT=\"%s\"\n", reboot
 		/* fall through */
 	    case 'U':	/* argument to -u or -U is optional */
 		uninstall = 1;
-		if ((*argv)[2]) param = (*argv)+2;
-		else if (argc && argv[1][0] != '-') {
-		    param = *++argv;
-		    argc--;
-		}
-		uninst_dev = param;
+		if (param && *param)
+		    uninst_dev = param;
 		break;
 #endif /* !__MSDOS__ */
 	    case 'v':
-	        if ((*argv)[2]) param = (*argv)+2;
-	        else if (argc && argv[1][0]>='0' && argv[1][0]<='9') {
-	            param = *++argv;
-	            argc--;
-	        }
-	        if (param) 
+	        if (param && *param) { 
 		    verbose = to_number(param);
-		else
-	            if (verbose<0) verbose = 1;
-	            else verbose++;
+		    if (verbose < 0)
+			usage(1);
+		} else
+	            verbose++;
 	        if (verbose) errstd = stdout;
 		break;
 	    case 'V':
@@ -611,7 +565,7 @@ fprintf(errstd,"REBOOT=\"%s\"\n", reboot
 	    case 'w':
 		cfg_set(cf_options,"nowarn",NULL,NULL);
 		nowarn = 1;
-		if ( (*argv)[2] == '+' ) nowarn = -1;
+		if (param && *param == '+' ) nowarn = -1;
 		break;
 	    case 'x':
 		cfg_set(cf_options,RAID_EXTRA_BOOT,param,NULL);
@@ -757,11 +711,15 @@ extern int has_partitions_beta(dev_t dev
 		cfg_set(cf_options,"bios-passes-dl",param,NULL);
 		break;
 #endif /* !__MSDOS__ */
+	    case 'h':
+		usage(0);
 	    default:
-		usage(name);
+		usage(1);
 	}
     }
-    if (argc) usage(name);
+    if (optind < argc)
+	usage(1);
+
 #if !__MSDOS__
     if (!new_root) new_root = getenv("ROOT");
     if (new_root && *new_root) {
@@ -772,7 +730,7 @@ extern int has_partitions_beta(dev_t dev
 	if (chdir("/") < 0) die("chdir /: %s",strerror(errno));
     }
     if (atexit(temp_remove)) die("atexit() failed");
-    if (version+activate+instmbr+(tell_param!=NULL) > 1) usage(name);
+    if (version+activate+instmbr+(tell_param!=NULL) > 1) usage(1);
     if (activate) do_activate(act1, act2);
 #endif /* !__MSDOS__ */
     if (verbose > 0 || version) {
