diff -ur perl-5.8.3.orig/gv.c perl-5.8.3/gv.c
--- perl-5.8.3.orig/gv.c	Tue Sep 30 17:10:33 2003
+++ perl-5.8.3/gv.c	Mon Jan 19 19:21:12 2004
@@ -838,10 +838,10 @@
 		&& AvFILLp(av) == -1)
 	    {
 		char *pname;
-		av_push(av, newSVpvn(pname = "NDBM_File",9));
-		gv_stashpvn(pname, 9, TRUE);
 		av_push(av, newSVpvn(pname = "DB_File",7));
 		gv_stashpvn(pname, 7, TRUE);
+		av_push(av, newSVpvn(pname = "NDBM_File",9));
+		gv_stashpvn(pname, 9, TRUE);
 		av_push(av, newSVpvn(pname = "GDBM_File",9));
 		gv_stashpvn(pname, 9, TRUE);
 		av_push(av, newSVpvn(pname = "SDBM_File",9));
diff -ur perl-5.8.3.orig/lib/AnyDBM_File.pm perl-5.8.3/lib/AnyDBM_File.pm
--- perl-5.8.3.orig/lib/AnyDBM_File.pm	Tue Sep 30 17:10:40 2003
+++ perl-5.8.3/lib/AnyDBM_File.pm	Mon Jan 19 19:21:12 2004
@@ -2,7 +2,7 @@
 
 use 5.006_001;
 our $VERSION = '1.00';
-our @ISA = qw(NDBM_File DB_File GDBM_File SDBM_File ODBM_File) unless @ISA;
+our @ISA = qw(DB_File NDBM_File GDBM_File SDBM_File ODBM_File) unless @ISA;
 
 my $mod;
 for $mod (@ISA) {
@@ -36,6 +36,11 @@
 
     BEGIN { @AnyDBM_File::ISA = qw(DB_File GDBM_File NDBM_File) }
     use AnyDBM_File;
+
+Note that DB_File module is used as the default backend (vanilla Perl
+uses NDBM module by default, for the sake of Perl4 compatibility).
+Other DBM packages are slower and have cell size limits, so DB_File
+is simply the best.
 
 Having multiple DBM implementations makes it trivial to copy database formats:
 
