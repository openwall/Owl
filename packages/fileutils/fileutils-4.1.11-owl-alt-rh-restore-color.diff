diff -ur fileutils-4.1.11.orig/src/ls.c fileutils-4.1.11/src/ls.c
--- fileutils-4.1.11.orig/src/ls.c	Sat Jul 20 10:50:44 2002
+++ fileutils-4.1.11/src/ls.c	Sun Aug  4 18:16:12 2002
@@ -66,6 +66,7 @@
 #include <grp.h>
 #include <pwd.h>
 #include <getopt.h>
+#include <signal.h>
 
 /* Get MB_CUR_MAX.  */
 #if HAVE_STDLIB_H
@@ -271,6 +272,7 @@
 static void print_color_indicator PARAMS ((const char *name, mode_t mode,
 					   int linkok));
 static void put_indicator PARAMS ((const struct bin_str *ind));
+static int put_indicator_direct PARAMS ((const struct bin_str *ind));
 static int length_of_file_name_and_frills PARAMS ((const struct fileinfo *f));
 static void add_ignore_pattern PARAMS ((const char *pattern));
 static void attach PARAMS ((char *dest, const char *dirname, const char *name));
@@ -992,6 +994,14 @@
   free (p);
 }
 
+static void
+restore_default_color_handler(int signum)
+{
+	if (put_indicator_direct (&color_indicator[C_LEFT]) == 0)
+		put_indicator_direct (&color_indicator[C_RIGHT]);
+	_exit(128 + signum);
+}
+
 int
 main (int argc, char **argv)
 {
@@ -1029,6 +1039,10 @@
 	  || (color_indicator[C_MISSING].string != NULL
 	      && format == long_format))
 	check_symlink_color = 1;
+
+	signal(SIGINT, restore_default_color_handler);
+	signal(SIGTERM, restore_default_color_handler);
+	signal(SIGQUIT, restore_default_color_handler);
     }
 
   if (dereference == DEREF_UNDEFINED)
@@ -3286,6 +3300,21 @@
 
   for (i = ind->len; i > 0; --i)
     putchar (*(p++));
+}
+
+/* A version which doesn't use stdio, for use from signal handlers.  */
+static int
+put_indicator_direct (const struct bin_str *ind)
+{
+  register int i;
+  register const char *p;
+
+  p = ind->string;
+
+  for (i = ind->len; i > 0; --i)
+    if (write (STDOUT_FILENO, p++, 1) != 1) return -1;
+
+  return 0;
 }
 
 static int
