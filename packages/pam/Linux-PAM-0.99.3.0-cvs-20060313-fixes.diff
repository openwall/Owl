2006-03-13  Thorsten Kukuk  <kukuk at thkukuk.de>

	* modules/pam_lastlog/pam_lastlog.c: Move comment for
	translators in right line.

2006-02-22  Thorsten Kukuk  <kukuk at thkukuk.de>

	* modules/pam_lastlog/pam_lastlog.c (last_login_write): Initialize
	correct last_login field [#1427401].

2006-02-13  Thorsten Kukuk  <kukuk at thkukuk.de>

	* modules/pam_echo/pam_echo.c: Fix return value.

2006-01-15  Thorsten Kukuk  <kukuk at thkukuk.de>

	* modules/pam_echo/pam_echo.c: Define HOST_NAME_MAX if not
	already defined.

--- modules/pam_echo/pam_echo.c	24 Nov 2005 17:15:31 -0000	1.2
+++ modules/pam_echo/pam_echo.c	13 Feb 2006 07:45:17 -0000	1.4
@@ -48,6 +48,10 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 
+#ifndef HOST_NAME_MAX
+#define HOST_NAME_MAX 255
+#endif
+
 #define PAM_SM_ACCOUNT
 #define PAM_SM_AUTH
 #define PAM_SM_PASSWORD
@@ -72,7 +76,7 @@ replace_and_print (pam_handle_t *pamh, c
   if (output == NULL)
     {
       pam_syslog (pamh, LOG_ERR, "running out of memory");
-      return PAM_IGNORE;
+      return PAM_BUF_ERR;
     }
 
   for (p = mesg, len = 0; *p != '\0' && len < length - 1; ++p)
@@ -135,6 +139,7 @@ pam_echo (pam_handle_t *pamh, int flags,
   int orig_argc = argc;
   const char **orig_argv = argv;
   const char *file = NULL;
+  int retval;
 
   if (flags & PAM_SILENT)
     return PAM_IGNORE;
@@ -162,7 +167,7 @@ pam_echo (pam_handle_t *pamh, int flags,
 	}
       msg[len] = '\0';
 
-      replace_and_print (pamh, msg);
+      retval = replace_and_print (pamh, msg);
     }
   else if ((fd = open (file, O_RDONLY, 0)) >= 0)
     {
@@ -175,7 +180,7 @@ pam_echo (pam_handle_t *pamh, int flags,
 
       mtmp = malloc (st.st_size + 1);
       if (!mtmp)
-	return PAM_IGNORE;
+	return PAM_BUF_ERR;
 
       if (read (fd, mtmp, st.st_size) == -1)
 	{
@@ -190,13 +195,15 @@ pam_echo (pam_handle_t *pamh, int flags,
 	mtmp[st.st_size] = '\0';
 
       close (fd);
-      replace_and_print (pamh, mtmp);
+      retval = replace_and_print (pamh, mtmp);
       free (mtmp);
     }
   else
-    pam_syslog (pamh, LOG_ERR, "Cannot open %s: %m", file);
-
-  return PAM_IGNORE;
+    {
+       pam_syslog (pamh, LOG_ERR, "Cannot open %s: %m", file);
+       retval = PAM_IGNORE;
+    }
+  return retval;
 }
 
 int
--- modules/pam_lastlog/pam_lastlog.c	20 Dec 2005 21:28:07 -0000	1.16
+++ modules/pam_lastlog/pam_lastlog.c	13 Mar 2006 10:04:54 -0000	1.20
@@ -183,7 +183,8 @@ last_login_read(pam_handle_t *pamh, int 
 		ll_time = last_login.ll_time;
 		tm = localtime_r (&ll_time, &tm_buf);
 		strftime (the_time, sizeof (the_time),
-			  " %a %b %e %H:%M:%S %Z %Y", tm);
+	        /* TRANSLATORS: "strftime options for date of last login" */
+			  _(" %a %b %e %H:%M:%S %Z %Y"), tm);
 
 		date = the_time;
 	    }
@@ -274,7 +275,7 @@ last_login_write(pam_handle_t *pamh, int
     terminal_line = get_tty(pamh);
 
     /* copy to last_login */
-    last_login.ll_host[0] = '\0';
+    last_login.ll_line[0] = '\0';
     strncat(last_login.ll_line, terminal_line, sizeof(last_login.ll_line)-1);
     terminal_line = NULL;
 
