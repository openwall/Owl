diff -ur -x config.h procmail-3.15.orig/src/autoconf procmail-3.15/src/autoconf
--- procmail-3.15.orig/src/autoconf	Tue Jun 20 10:45:17 2000
+++ procmail-3.15/src/autoconf	Wed Nov 15 22:19:17 2000
@@ -1380,13 +1380,18 @@
 
 _autotst $a/__ $a/__/__ 4 >>$ACONF
 
-cat /usr/lib/sendmail.cf /etc/sendmail.cf /etc/mail/sendmail.cf 2>$DEVNULL |
- grep 'Mlocal.*procmail' >$DEVNULL ||
- echo '#define CF_no_procmail_yet' >>$ACONF
+# Skip this check on systems without sendmail (possibly with another MTA)
+if test -r /usr/lib/sendmail.cf -o \
+	-r /etc/sendmail.cf -o \
+	-r /etc/mail/sendmail.cf; then
+  cat /usr/lib/sendmail.cf /etc/sendmail.cf /etc/mail/sendmail.cf 2>$DEVNULL |
+   grep 'Mlocal.*procmail' >$DEVNULL ||
+   echo '#define CF_no_procmail_yet' >>$ACONF
 
-cat /usr/lib/sendmail.cf /etc/sendmail.cf /etc/mail/sendmail.cf 2>$DEVNULL |
- grep '^V' >$DEVNULL ||
- echo '#define buggy_SENDMAIL' >>$ACONF
+  cat /usr/lib/sendmail.cf /etc/sendmail.cf /etc/mail/sendmail.cf 2>$DEVNULL |
+   grep '^V' >$DEVNULL ||
+   echo '#define buggy_SENDMAIL' >>$ACONF
+fi
 
 lpath='/bin'
 bins="/bin"
diff -ur -x config.h procmail-3.15.orig/src/exopen.c procmail-3.15/src/exopen.c
--- procmail-3.15.orig/src/exopen.c	Tue May  9 10:36:38 2000
+++ procmail-3.15/src/exopen.c	Wed Nov 15 21:13:57 2000
@@ -22,13 +22,13 @@
  const size_t len;const mode_t mode;const int verbos,chownit;
 { static const char s2c[]=".,+%";static int serial=STRLEN(s2c);
   static time_t t;char*dot,*end=full+len,*op,*ldp;struct stat filebuf;
-  int nicediff,i,didnice,retry=RETRYunique;
+  int i,didnice,retry=RETRYunique;
+  didnice=0;
   if(chownit&doCHOWN)		  /* semi-critical, try raising the priority */
-   { nicediff=nice(0);SETerrno(0);nicediff-=nice(-NICE_RANGE);
-     didnice=errno;
+   { nice(0);SETerrno(0);nice(-NICE_RANGE);didnice=!errno;
    }
   *(end=len?full+len-1:p+UNIQnamelen-1)='\0';
-  *(op=p)=UNIQ_PREFIX;dot=ultoan((long)thepid,p+1);
+  *(ldp=op=p)=UNIQ_PREFIX;dot=ultoan((long)thepid,p+1);
   if(serial<STRLEN(s2c))
      goto in;
   do
@@ -65,8 +65,9 @@
   while((!i||errno!=ENOENT||	      /* casually check if it already exists */
 	 (0>(i=ropen(full,O_WRONLY|O_CREAT|O_EXCL,mode))&&errno==EEXIST))&&
 	(i= -1,retry--));
-  if(chownit&doCHOWN&&didnice)
-     nice(nicediff);		   /* put back the priority to the old level */
+  if(didnice) {
+     nice(NICE_RANGE/2);nice(0);   /* put back the priority to the old level */
+  }
   if(i<0)
    { if(verbos)			      /* this error message can be confusing */
 	writeerr(full);					 /* for casual users */
diff -ur -x config.h procmail-3.15.orig/src/fields.c procmail-3.15/src/fields.c
--- procmail-3.15.orig/src/fields.c	Sat Jan 29 09:51:36 2000
+++ procmail-3.15/src/fields.c	Wed Nov 15 21:49:45 2000
@@ -30,7 +30,7 @@
 }
 
 void cleanheader P((void))		  /* zorch whitespace before the ':' */
-{ struct field**pp,*p;char*cp;int idlen;
+{ struct field**pp,*p;char*cp;
   for(pp=&rdheader;p= *pp;pp= &(*pp)->fld_next)
      if((cp=p->fld_text+p->id_len-1,*cp==HEAD_DELIMITER)&&	    /* has : */
 	(*--cp==' '||*cp=='\t'))				   /* has ws */
diff -ur -x config.h procmail-3.15.orig/src/foldinfo.c procmail-3.15/src/foldinfo.c
--- procmail-3.15.orig/src/foldinfo.c	Tue Aug 22 08:25:47 2000
+++ procmail-3.15/src/foldinfo.c	Wed Nov 15 22:22:53 2000
@@ -10,10 +10,13 @@
  "$Id: foldinfo.c,v 1.1.2.1 2000/06/21 20:34:56 guenther Exp $";
 #endif
 #include "procmail.h"
+#include "acommon.h"
 #include "misc.h"
 #include "lastdirsep.h"
 #include "robust.h"
 #include "exopen.h"
+#include "goodies.h"
+#include "locking.h"
 #include "foldinfo.h"
 
 static const char
@@ -97,8 +100,9 @@
 static int mkmaildir(buffer,chp,paranoid)char*const buffer,*const chp;
  const int paranoid;
 { mode_t mode;int i;
+  i=chp-buffer+1;
   if(paranoid)
-     strncpy(buf2,buffer,i=chp-buffer+1),buf2[i-1]=*MCDIRSEP_,buf2[i]='\0';
+     strncpy(buf2,buffer,i),buf2[i-1]=*MCDIRSEP_,buf2[i]='\0';
   return
    (strcpy(chp,maildirnew),mode=trymkdir(buffer,paranoid,i),S_ISDIR(mode))&&
    (strcpy(chp,maildircur),mode=trymkdir(buffer,paranoid,i),S_ISDIR(mode))&&
@@ -108,6 +112,7 @@
 int foldertype(type,forcedir,modep,paranoid)int type,forcedir;
  mode_t*const modep;struct stat*const paranoid;
 { struct stat stbuf;mode_t mode;int i;char*chp;
+  mode=0; /* XXX: this appears to be actually used (type==ft_FILE&&forcedir) */
   if(!type)
      type=folderparse();
   switch(type)
diff -ur -x config.h procmail-3.15.orig/src/formail.c procmail-3.15/src/formail.c
--- procmail-3.15.orig/src/formail.c	Tue Aug 22 07:54:42 2000
+++ procmail-3.15/src/formail.c	Wed Nov 15 22:17:34 2000
@@ -12,7 +12,7 @@
 static /*const*/char rcsid[]=
  "$Id: formail.c,v 1.97.2.4 2000/08/22 03:54:42 guenther Exp $";
 #endif
-static /*const*/char rcsdate[]="$Date: 2000/08/22 03:54:42 $";
+/*const*/char formail_rcsdate[]="$Date: 2000/08/22 03:54:42 $";
 #include "includes.h"
 #include <ctype.h>		/* iscntrl() */
 #include "formail.h"
@@ -307,6 +307,7 @@
  FILE*idcache;const off_t maxlen;const int split;
 { int dupid=0;char*key,*oldnewl;
   key=(char*)namep;		  /* not to worry, no change will be noticed */
+  oldnewl=NULL;
   if(!areply)
    { key=0;
      if(msid->rexl)					/* any Message-ID: ? */
@@ -364,9 +365,9 @@
 
 int main(lastm,argv)int lastm;const char*const argv[];
 { int i,split=0,force=0,bogus=1,every=0,headreply=0,digest=0,nowait=0,keepb=0,
-   minfields=(char*)progid-(char*)progid,conctenate=0,babyl=0,babylstart,
+   minfields=(char*)progid-(char*)progid,conctenate=0,babyl=0,babylstart=0,
    berkeley=0,forgetclen;
-  off_t maxlen,ctlength;FILE*idcache=0;pid_t thepid;
+  off_t maxlen=0,ctlength;FILE*idcache=NULL;pid_t thepid;
   size_t j,lnl,escaplen;char*chp,*namep,*escap=ESCAP;
   struct field*fldp,*fp2,**afldp,*fdate,*fcntlength,*fsubject,*fFrom_;
   if(lastm)			       /* sanity check, any argument at all? */
@@ -785,7 +786,10 @@
 	   else if(split&&digest&&(lnl||every)&&digheadr())	  /* digest? */
 accuhdr:    { for(i=minfields;--i&&readhead()&&digheadr();); /* found enough */
 	      if(!i)					   /* then split it! */
-splitit:       { if(!lnl)   /* did the previous mail end with an empty line? */
+#ifdef MAILBOX_SEPARATOR
+splitit:
+#endif
+	       { if(!lnl)   /* did the previous mail end with an empty line? */
 		    lputcs('\n');		      /* but now it does :-) */
 		 logfolder();
 		 if(fclose(mystdout)==EOF||errout==EOF)
diff -ur -x config.h procmail-3.15.orig/src/lockfile.c procmail-3.15/src/lockfile.c
--- procmail-3.15.orig/src/lockfile.c	Thu Jun 22 00:35:00 2000
+++ procmail-3.15/src/lockfile.c	Wed Nov 15 21:43:58 2000
@@ -15,7 +15,7 @@
 static /*const*/char rcsid[]=
  "$Id: lockfile.c,v 1.43.2.1 2000/06/21 20:35:00 guenther Exp $";
 #endif
-static /*const*/char rcsdate[]="$Date: 2000/06/21 20:35:00 $";
+/*const*/char lockfile_rcsdate[]="$Date: 2000/06/21 20:35:00 $";
 #include "includes.h"
 #include "sublib.h"
 #include "exopen.h"
diff -ur -x config.h procmail-3.15.orig/src/misc.c procmail-3.15/src/misc.c
--- procmail-3.15.orig/src/misc.c	Wed Aug 23 09:20:25 2000
+++ procmail-3.15/src/misc.c	Wed Nov 15 21:33:38 2000
@@ -700,6 +700,7 @@
       if(i)					 /* check out all conditions */
        { int negate,scoreany;double weight,xponent,lscore;
 	 char*lstartchar=startchar;long ltobesent=tobesent,sizecheck=filled;
+	 weight=xponent=0;
 	 for(chp=strchr(buf2,'\0');--chp>=buf2;)
 	  { switch(*chp)		  /* strip off whitespace at the end */
 	     { case ' ':case '\t':*chp='\0';
diff -ur -x config.h procmail-3.15.orig/src/misc.h procmail-3.15/src/misc.h
--- procmail-3.15.orig/src/misc.h	Wed Aug 23 09:20:26 2000
+++ procmail-3.15/src/misc.h	Wed Nov 15 22:15:02 2000
@@ -31,7 +31,11 @@
  onguard P((void)),
  offguard P((void)),
  sterminate P((void)),
- Terminate P((void)),
+#ifdef __GNUC__
+__attribute__((noreturn))
+#endif
+ Terminate P((void));
+void
  suspend P((void)),
  *app_val_ P((struct dyna_long*const sp)),
  setmaildir P((const char*const newdir)),
diff -ur -x config.h procmail-3.15.orig/src/pipes.c procmail-3.15/src/pipes.c
--- procmail-3.15.orig/src/pipes.c	Thu Jun 22 00:35:07 2000
+++ procmail-3.15/src/pipes.c	Wed Nov 15 21:36:07 2000
@@ -135,6 +135,7 @@
 
 int pipthrough(line,source,len)char*line,*source;const long len;
 { int pinfd[2],poutfd[2];char*eq;
+  eq=NULL;
   if(Stdout&&(*(eq=strchr(Stdout,'\0')-1)='\0',		     /* chop the '=' */
    !(backblock=getenv(Stdout))))			/* no current value? */
      PRDB=PWRB= -1;
@@ -175,7 +176,7 @@
   rclose(PWRB);rclose(PWRI);getstdin(PRDI);
   if(forkerr(pidchild,procmailn))
      return -1;
-  if(Stdout)
+  if(eq)
    { char*name;
      *eq='=';name=Stdout;Stdout=0;primeStdout(name);free(name);
      Stdout=readdyn(Stdout,&Stdfilled);
@@ -235,7 +236,9 @@
       }
    }
   pidchild=0;
+#if 0
 builtin:
+#endif
   if(!sh)
      concatenate(line);
   setlastfolder(line);
diff -ur -x config.h procmail-3.15.orig/src/procmail.c procmail-3.15/src/procmail.c
--- procmail-3.15.orig/src/procmail.c	Tue Aug 22 08:02:16 2000
+++ procmail-3.15/src/procmail.c	Wed Nov 15 22:22:14 2000
@@ -97,7 +97,9 @@
   newid();
   ;{ int presenviron,Deliverymode,override;char*fromwhom=0;
      const char*idhint=0;gid_t egid=getegid();
+     presenviron=0; /* for argc==0 */
      Deliverymode=mailfilter=override=0;
+     chp=chp2=NULL;
      Openlog(procmailn,LOG_PID,LOG_MAIL);		  /* for the syslogd */
      if(argc)			       /* sanity check, any argument at all? */
       { Deliverymode=strncmp(lastdirsep(argv0=argv[0]),procmailn,
@@ -480,7 +482,7 @@
 	   *	to prevent security holes, drop any privileges now
 	   */
 	 { setdef(lgname,buf);setdef(home,RootDir);setdef(shell,binsh);
-	   setdef(orgmail,"/tmp/dead.letter");setids();
+	   setdef(orgmail,"/var/run/dead.letter");setids();
 	 }
 	endpwent();auth_freeid(spassinvk);
       }
@@ -524,6 +526,7 @@
       }
    }
   ;{ int lastsucc,lastcond,prevcond;
+     lastsucc=lastcond=prevcond=0;
      if(etcrc)		  /* do we start with an /etc/procmailrc file first? */
       { if(0<=bopen(etcrc))
 	 { yell(drcfile,etcrc);
@@ -614,7 +617,10 @@
 	      if(((stbuf.st_uid!=uid&&stbuf.st_uid!=ROOT_uid||	/* check uid */
 		   stbuf.st_mode&S_IWOTH||	       /* writable by others */
 		   i&&stbuf.st_mode&S_IWGRP		/* writable by group */
-		    &&(NO_CHECK_stgid||stbuf.st_gid!=gid)
+		    &&(NO_CHECK_stgid||stbuf.st_gid!=gid)||
+		   !S_ISREG(stbuf.st_mode)||
+		   stbuf.st_size>stbuf.st_blocks*stbuf.st_blksize
+		    &&stbuf.st_blksize>=512
 		  )&&strcmp(devnull,buf)||    /* /dev/null is a special case */
 		 (*chp='\0',stat(buf,&stbuf))||	      /* check the directory */
 #ifndef CAN_chown				   /* sticky and can't chown */
diff -ur -x config.h procmail-3.15.orig/src/regexp.c procmail-3.15/src/regexp.c
--- procmail-3.15.orig/src/regexp.c	Thu Nov 25 06:13:36 1999
+++ procmail-3.15/src/regexp.c	Wed Nov 15 22:23:06 2000
@@ -126,6 +126,7 @@
 	return;
      case R_BEG_CLASS:					   /* a simple class */
       { unsigned i,j=R_NOT_CLASS==*++p;
+	i=0;
 	if(e)
 	 { r->opc=OPC_CLASS;r->next=Ceps e;Cc(r,pos1.st_)=Cc(r,pos2.st_)=0;
 	   i=maxindex(rAc);
@@ -269,6 +270,7 @@
 
 static int por(e)const struct eps*const e;
 { uchar*pvold;struct eps*rvold;
+  pvold=NULL;rvold=NULL;
   if(!e)
    { rvold=r;
      if(cachea==(pvold=p))
@@ -509,7 +511,7 @@
    }
   while(--len);					     /* still text to search */
   goto wrapup;
-  ;{ const char*start,*bom;
+  ;{ const char*start,*bom=NULL;
      do
       { i= *++str;			 /* get the next real-text character */
 	if(i-'A'<='Z'-'A')
diff -ur -x config.h procmail-3.15.orig/src/robust.c procmail-3.15/src/robust.c
--- procmail-3.15.orig/src/robust.c	Wed Dec  1 10:18:52 1999
+++ procmail-3.15/src/robust.c	Wed Nov 15 21:42:20 2000
@@ -20,6 +20,9 @@
 #define nomemretry	noresretry
 #define noforkretry	noresretry
 		       /* set nextexit to prevent elog() from using malloc() */
+#ifdef __GNUC__
+__attribute__ ((noreturn))
+#endif
 void nomemerr(len)const size_t len;
 { static const char outofmem[]="Out of memory";
   nextexit=2;nlog(outofmem);elog("\n");
@@ -118,7 +121,8 @@
 int ropen(name,mode,mask)const char*const name;const int mode;
  const mode_t mask;
 { int i,r;					       /* a SysV secure open */
-  for(r=noresretry,lcking|=lck_FILDES;0>(i=open(name,mode,mask));)
+  for(r=noresretry,lcking|=lck_FILDES;
+   0>(i=open(name,mode|O_NOCTTY|O_NONBLOCK,mask));)
      if(errno!=EINTR&&!(errno==ENFILE&&(r<0||r--)))
 	break;		 /* survives a temporary "file table full" condition */
   lcking&=~lck_FILDES;
