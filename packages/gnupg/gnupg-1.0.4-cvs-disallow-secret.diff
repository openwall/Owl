Extracted from CVS on 14 December.  We'll use this because 1.0.4c has a lot of
other changes I don't feel safe about pulling in (it's not an official release).

diff -uNr projects/redhat/BUILD/gnupg-1.0.4/g10/g10.c gnupg/g10/g10.c
--- projects/redhat/BUILD/gnupg-1.0.4/g10/g10.c	Mon Oct 16 04:01:07 2000
+++ gnupg/g10/g10.c	Thu Dec  7 05:55:10 2000
@@ -183,6 +183,7 @@
     oDisablePubkeyAlgo,
     oAllowNonSelfsignedUID,
     oAllowFreeformUID,
+    oAllowSecretKeyImport,                      
     oNoLiteral,
     oSetFilesize,
     oHonorHttpProxy,
@@ -384,6 +385,7 @@
     { oNoRandomSeedFile,  "no-random-seed-file", 0, "@" },
     { oNoAutoKeyRetrieve, "no-auto-key-retrieve", 0, "@" },
     { oMergeOnly,	  "merge-only", 0, "@" },
+    { oAllowSecretKeyImport, "allow-secret-key-import", 0, "@" },
     { oTryAllSecrets,  "try-all-secrets", 0, "@" },
     { oEmu3DESS2KBug,  "emulate-3des-s2k-bug", 0, "@"},
     { oEmuMDEncodeBug,	"emulate-md-encode-bug", 0, "@"},
@@ -935,6 +937,7 @@
 		opt.override_session_key = pargs.r.ret_str;
 		break;
 	  case oMergeOnly: opt.merge_only = 1; break;
+	  case oAllowSecretKeyImport: opt.allow_secret_key_import = 1; break;
 	  case oTryAllSecrets: opt.try_all_secrets = 1; break;
           case oTrustedKey: register_trusted_key( pargs.r.ret_str ); break;
 
diff -uNr projects/redhat/BUILD/gnupg-1.0.4/g10/import.c gnupg/g10/import.c
--- projects/redhat/BUILD/gnupg-1.0.4/g10/import.c	Thu Jul 27 11:31:09 2000
+++ gnupg/g10/import.c	Thu Dec  7 05:55:10 2000
@@ -54,11 +54,11 @@
 } stats;
 
 
-static int import( IOBUF inp, int fast, const char* fname );
+static int import( IOBUF inp, int fast, const char* fname, int allow_secret );
 static void print_stats(void);
 static int read_block( IOBUF a, PACKET **pending_pkt, KBNODE *ret_root );
 static int import_one( const char *fname, KBNODE keyblock, int fast );
-static int import_secret_one( const char *fname, KBNODE keyblock );
+static int import_secret_one( const char *fname, KBNODE keyblock, int allow );
 static int import_revoke_cert( const char *fname, KBNODE node );
 static int chk_self_sigs( const char *fname, KBNODE keyblock,
 			  PKT_public_key *pk, u32 *keyid );
@@ -127,7 +127,7 @@
 	if( !inp )
 	    log_error(_("can't open `%s': %s\n"), fname, strerror(errno) );
 	else {
-	    int rc = import( inp, fast, fname );
+	    int rc = import( inp, fast, fname, opt.allow_secret_key_import );
 	    iobuf_close(inp);
 	    if( rc )
 		log_error("import from `%s' failed: %s\n", fname,
@@ -148,7 +148,7 @@
 
     /* fixme: don't use static variables */
     memset( &stats, 0, sizeof( stats ) );
-    rc = import( inp, fast, "[stream]" );
+    rc = import( inp, fast, "[stream]", opt.allow_secret_key_import );
     print_stats();
     if( !fast )
 	sync_trustdb();
@@ -156,7 +156,7 @@
 }
 
 static int
-import( IOBUF inp, int fast, const char* fname )
+import( IOBUF inp, int fast, const char* fname, int allow_secret )
 {
     PACKET *pending_pkt = NULL;
     KBNODE keyblock;
@@ -173,8 +173,8 @@
     while( !(rc = read_block( inp, &pending_pkt, &keyblock) )) {
 	if( keyblock->pkt->pkttype == PKT_PUBLIC_KEY )
 	    rc = import_one( fname, keyblock, fast );
-	else if( keyblock->pkt->pkttype == PKT_SECRET_KEY )
-	    rc = import_secret_one( fname, keyblock );
+	else if( keyblock->pkt->pkttype == PKT_SECRET_KEY ) 
+                rc = import_secret_one( fname, keyblock, allow_secret );
 	else if( keyblock->pkt->pkttype == PKT_SIGNATURE
 		 && keyblock->pkt->pkt.signature->sig_class == 0x20 )
 	    rc = import_revoke_cert( fname, keyblock );
@@ -556,9 +556,12 @@
 
 /****************
  * Ditto for secret keys.  Handling is simpler than for public keys.
+ * We allow secret key importing only when allow is true, this is so
+ * that a secret key can not be imported accidently and thereby tampering
+ * with the trust calculation.
  */
 static int
-import_secret_one( const char *fname, KBNODE keyblock )
+import_secret_one( const char *fname, KBNODE keyblock, int allow )
 {
     PKT_secret_key *sk;
     KBNODE node, uidnode;
@@ -586,6 +589,13 @@
 	putc('\n', stderr);
     }
     stats.secret_read++;
+    if (!allow) {
+        log_info ( _("secret key %08lX not imported "
+                    "(use %s to allow for it)\n"),
+                   (ulong)keyid[1], "--allow-secret-key-import");
+        return 0;
+    }
+
     if( !uidnode ) {
 	log_error( _("key %08lX: no user ID\n"), (ulong)keyid[1]);
 	return 0;
@@ -1057,6 +1067,7 @@
 		KBNODE n2 = clone_kbnode(node);
 		insert_kbnode( keyblock_orig, n2, 0 );
 		n2->flag |= 1;
+                ++*n_sigs;
 		log_info( _("key %08lX: revocation certificate added\n"),
 					 (ulong)keyid[1]);
 	    }
diff -uNr projects/redhat/BUILD/gnupg-1.0.4/g10/options.h gnupg/g10/options.h
--- projects/redhat/BUILD/gnupg-1.0.4/g10/options.h	Wed Aug 23 13:40:24 2000
+++ gnupg/g10/options.h	Thu Dec  7 05:55:10 2000
@@ -95,6 +95,7 @@
     const char *override_session_key;
     int show_session_key;
     int merge_only;
+    int allow_secret_key_import;
     int try_all_secrets;
 } opt;
 
