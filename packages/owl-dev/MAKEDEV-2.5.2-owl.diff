diff -ur MAKEDEV-2.5.2.orig/MAKEDEV MAKEDEV-2.5.2/MAKEDEV
--- MAKEDEV-2.5.2.orig/MAKEDEV	2000-03-01 22:16:37 +0000
+++ MAKEDEV-2.5.2/MAKEDEV	2009-05-21 20:27:49 +0000
@@ -1,6 +1,11 @@
 #!/bin/bash -
 
-RCSID='$Id: MAKEDEV 2.3 1997/09/29 19:03:13 johnsonm Exp $'
+VERSION='MAKEDEV 2.5.2-0.12-owl1'
+
+# This version of MAKEDEV is based on work of many people.  The script was
+# initially written by Nick Holloway, and then maintained by Michael K.
+# Johnson and later by Nalin Dahyabhai of Red Hat.  Finally, it has been
+# modified for Owl.
 
 #---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#
 # Customisation:
@@ -10,34 +15,41 @@
 # system, and you may change the permissions to suit your preference.  These
 # lines _must_ be of the format "user group perm".
 
- public="  root sys    666"
-private="  root sys    600"
- system="  root sys    660"
-   kmem="  root kmem   660"
-    tty="  root tty    666"
-   cons="  root tty    622"	# 622 for console?
-    vcs="  root sys    600"
+ pub_rw="  root root   666"
+ pub_ro="  root root   644"
+private="  root root   600"
+   kmem="  root kmem   640"
+    tty="  root tty    600"	# should become 620 after login, but not now
+ owntty="  root tty    666"	# /dev/tty only
+   cons="  root tty    600"
+    vcs="  root root   600"
 dialout="  root uucp   660"
-  mouse="  root sys    666"
-printer="  root daemon 660"
+  mouse="  root root   600"
+printer="  root root   600"	# should allow group access once lpd is smarter
  floppy="  root floppy 660"
    disk="  root disk   660"
-   scsi="  root sys    600"
+   scsi="  root root   600"
   cdrom="  root disk   660"
    tape="  root disk   660"
-  audio="  root sys    666"
-  ibcs2="  root sys    666"
-scanner="  root sys    666"
+  audio="  root audio  660"
+  video="  root video  660"
+  radio="  root radio  660"
+  ibcs2="  root root   600"
+scanner="  root root   600"
 
 MAXVT=8
 
 #---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#
 
 procfs=/proc
+procfs_rel2dev=..${procfs}
 
 opt_v=
 opt_d=
 opt_n=
+opt_p=
+opt_V=
+opt_touch=
 
 while [ $# -ge 1 ]
 do
@@ -46,7 +58,11 @@
 		-v)	shift; opt_v=1 ;;
 		-d)	shift; opt_d=1 ;;
 		-n)	shift; opt_n=1; opt_v=1 ;;
-		-V)	shift; opt_V=1 ;;
+		-p)	shift; opt_p=1 ;;
+		-V|--version|--help)
+			shift; opt_V=1 ;;
+		--touch)
+			shift; opt_touch=1 ;;
 		-*)	echo "$0: unknown flag \"$1\"" >&2; exit 1 ;;
 		*)	break ;;
 	esac
@@ -54,11 +70,11 @@
 
 if [ "$opt_V" ]
 then
-	echo "$RCSID"
+	echo "$VERSION"
 	exit 0
 fi
 
-opts="${opt_n:+-n} ${opt_v:+-v} ${opt_d:+-d}"
+opts="${opt_n:+-n} ${opt_p:+-p} ${opt_v:+-v} ${opt_d:+-d} ${opt_touch:+--touch}"
 
 #---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#
 
@@ -75,10 +91,23 @@
 			rm -f $1
 		else
 			rm -f $1-
-			mknod $1- $2 $3 $4 &&
-			chown $5:$6 $1- &&
-			chmod $7 $1- &&
-			mv $1- $1
+			if [ "$opt_touch" ]
+			then
+				touch $1- &&
+				chmod $7 $1- &&
+				mv $1- $1 || {
+					rm -f $1-
+					exit 1
+				}
+			else
+				mknod $1- $2 $3 $4 &&
+				chown $5:$6 $1- &&
+				chmod $7 $1- &&
+				mv $1- $1 || {
+					rm -f $1-
+					exit 1
+				}
+			fi
 		fi
 	fi
 }
@@ -110,16 +139,16 @@
 		eval echo "\${#I}"
 	}
 	suffix () {
-	    eval echo "\${1#$2}"
+		eval echo "\${1#$2}"
 	}
 	strip () {
 		eval echo "\${1% $2 *} \${1#* $2 }"
 	}
 	first () {
-	    eval echo "\${1:0:1}"
+		eval echo "\${1:0:1}"
 	}
 	second () {
-	    eval echo "\${1:1:1}"
+		eval echo "\${1:1:1}"
 	}
 else
 	math () {
@@ -146,21 +175,35 @@
 #---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#---#
 
 devices=
-if [ ! -f $procfs/devices ]
+if [ "$opt_p" -o ! -f $procfs/devices ]
 then
-	echo "$0: warning: can't read $procfs/devices" >&2
+	test "$opt_p" || echo "$0: warning: can't read $procfs/devices" >&2
 else
 	exec 3<$procfs/devices
 	while read major device <&3
 	do
-		case "$major" in
-			Character|Block|'')
+		case "$device" in
+			pty/m%d)
+				device=pty
+				;;
+			pty/s%d)
+				device=ttyp
+				;;
+			tts/%d)
+				device=ttyS
 				;;
-			*)
-				eval "major_$device=$major"
-				devices="$devices $device"
+			cua/%d)
+				device=cua
+				;;
+			pts/%d)
+				device=pts
+				;;
+			*/*|*%*|devices:|'')
+				continue
 				;;
 		esac
+		eval "major_$device=$major"
+		devices="$devices $device"
 	done
 	exec 3<&-
 fi
@@ -188,7 +231,11 @@
 			ide1)	echo hdc hdd ;;
 			ide2)	echo hde hdf ;;
 			ide3)	echo hdg hdh ;;
-			sd)	echo sda sdb sdc sdd ;;
+			ide4)	echo hdi hdj ;;
+			ide5)	echo hdk hdl ;;
+			ide6)	echo hdm hdn ;;
+			ide7)	echo hdo hdp ;;
+			sd)	echo sda sdb sdc sdd sde sdf sdg sdh ;;
 			sr)	echo scd0 ;;
 			st)	echo st0 ;;
 			xd)	echo xda xdb ;;
@@ -202,7 +249,6 @@
 			sound)		echo audio ;;
 			logiscan)	echo logiscan ;;
 			ac4096)		echo ac4096 ;;
-			hw)	echo helloworld ;;
 			sbpcd | sbpcd[123])	echo $1 ;;
 			joystick)	echo js ;;
 			apm_bios)	echo apm ;;
@@ -222,44 +268,60 @@
 do
 	case $arg in
 	generic)
-		$0 $opts std
-		$0 $opts fd
-		$0 $opts fd0 fd1
-		$0 $opts hda hdb
-		$0 $opts xda xdb
-		$0 $opts sda sdb sdc sdd
-		$0 $opts pty
-		$0 $opts console
-		$0 $opts ttyS0 ttyS1 ttyS2 ttyS3
-		$0 $opts busmice
-		$0 $opts lp
-		$0 $opts par
+		$0 $opts std || exit 1
+		$0 $opts fd || exit 1
+		$0 $opts fd0 fd1 || exit 1
+		$0 $opts hda hdb hdc hdd hde hdf hdg hdh || exit 1
+		$0 $opts xda xdb || exit 1
+		$0 $opts sda sdb sdc sdd sde sdf sdg sdh || exit 1
+		$0 $opts st0 st1 || exit 1
+		$0 $opts scd0 scd1 || exit 1
+		$0 $opts sg || exit 1
+		$0 $opts md || exit 1
+		$0 $opts loop || exit 1
+		$0 $opts pty || exit 1
+		$0 $opts pts || exit 1
+		$0 $opts console || exit 1
+		$0 $opts ttyS0 ttyS1 ttyS2 ttyS3 || exit 1
+		$0 $opts busmice || exit 1
+		$0 $opts lp || exit 1
+		$0 $opts par || exit 1
+		$0 $opts audio || exit 1
+		$0 $opts usb || exit 1
+		$0 $opts fb || exit 1
+		$0 $opts misc || exit 1
+		$0 $opts kbd || exit 1
 		;;
 	local)
-		$0.local $opts
+		$0.local $opts || exit 1
 		;;
 	std)
 		makedev mem     c 1 1 $kmem
 		makedev kmem    c 1 2 $kmem
-		makedev null    c 1 3 $public
+		makedev null    c 1 3 $pub_rw
 		makedev port    c 1 4 $kmem
-		makedev zero    c 1 5 $public
-		symlink core    $procfs/kcore
-		makedev full    c 1 7 $public
-		makedev random  c 1 8 $public
-		makedev urandom c 1 9 $public
-		$0 ram
-		makedev tty  c 5 0 $tty
+		makedev zero    c 1 5 $pub_rw
+		symlink core    $procfs_rel2dev/kcore
+		makedev full    c 1 7 $pub_rw
+		makedev random  c 1 8 $pub_ro
+		makedev urandom c 1 9 $pub_ro
+		$0 $opts ram || exit 1
+		makedev tty     c 5 0 $owntty
 		;;
 	ram)
 		for i in 0 1 2 3 4 5 6 7 ; do
 			makedev ram$i  b 1 $i $disk
 		done
-		ln -sf ram0 ram
+		if [ "$opt_d" ]
+		then
+			rm -f ram
+		else
+			ln -sf ram0 ram
+		fi
 		makedev initrd b 1 250 $disk
 		;;
 	console)
-		major=`Major vcs`	# not fatal
+		major=`Major vcs 7`
 		# console
 		makedev tty0 c 4 0 $cons
 		makedev console c 5 1 $cons
@@ -302,7 +364,15 @@
 		do
 			ptysufs="$ptysufs pty$i"
 		done
-		$0 $opts $ptysufs
+		$0 $opts $ptysufs || exit 1
+		;;
+	pts)
+		if [ "$opt_d" ]; then
+			test -d pts && rmdir pts
+		else
+			mkdir -p -m 755 pts
+		fi
+		makedev ptmx c 5 2 $pub_rw
 		;;
 	cyclades|ttyC)
 		major1=`Major ttyC 19` || continue
@@ -528,12 +598,23 @@
 		done
 		;;
 	busmice)
-		major=`Major mouse 10` || continue
+		major=`Major misc 10` || continue
 		makedev logimouse c $major 0 $mouse
 		makedev psmouse   c $major 1 $mouse
+		symlink psaux psmouse
 		makedev msmouse   c $major 2 $mouse
 		makedev atimouse  c $major 3 $mouse
 		makedev jmouse    c $major 4 $mouse
+		makedev sunmouse  c $major 6 $mouse
+		;;
+	misc)
+		major=`Major misc 10` || continue
+		makedev rtc c $major 135 $private
+		makedev openprom c $major 139 $private
+		;;
+	kbd)
+		major=`Major kbd 11` || continue
+		makedev kbd c $major 0 $private
 		;;
 	js)
 		major=`Major Joystick` || continue
@@ -585,12 +666,12 @@
 		makedev ${arg}H1600 b $major `math $base + 124` $floppy
 		;;
 	hd[a-b])
-		major=`Major ide0` || major=`Major hd 3` || continue
+		major=`Major ide0 3` || continue
 		unit=`suffix $arg hd`
 		base=`index ab $unit`
 		base=`math $base \* 64`
 		makedev hd$unit b $major $base $disk
-		for part in 1 2 3 4 5 6 7 8 # 9 10 11 12 13 14 15 16 17 18 19 20
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
 		do
 			makedev hd$unit$part b $major `math $base + $part` $disk
 		done
@@ -601,7 +682,7 @@
 		base=`index cd $unit`
 		base=`math $base \* 64`
 		makedev hd$unit b $major $base $disk
-		for part in 1 2 3 4 5 6 7 8 # 9 10 11 12 13 14 15 16 17 18 19 20
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
 		do
 			makedev hd$unit$part b $major `expr $base + $part` $disk
 		done
@@ -612,7 +693,7 @@
 		base=`index ef $unit`
 		base=`math $base \* 64`
 		makedev hd$unit b $major $base $disk
-		for part in 1 2 3 4 5 6 7 8 # 9 10 11 12 13 14 15 16 17 18 19 20
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
 		do
 			makedev hd$unit$part b $major `expr $base + $part` $disk
 		done
@@ -623,7 +704,51 @@
 		base=`index gh $unit`
 		base=`math $base \* 64`
 		makedev hd$unit b $major $base $disk
-		for part in 1 2 3 4 5 6 7 8 # 9 10 11 12 13 14 15 16 17 18 19 20
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
+		do
+			makedev hd$unit$part b $major `expr $base + $part` $disk
+		done
+		;;
+	hd[i-j])
+		major=`Major ide4 56` || continue
+		unit=`suffix $arg hd`
+		base=`index ij $unit`
+		base=`math $base \* 64`
+		makedev hd$unit b $major $base $disk
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
+		do
+			makedev hd$unit$part b $major `expr $base + $part` $disk
+		done
+		;;
+	hd[k-l])
+		major=`Major ide5 57` || continue
+		unit=`suffix $arg hd`
+		base=`index kl $unit`
+		base=`math $base \* 64`
+		makedev hd$unit b $major $base $disk
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
+		do
+			makedev hd$unit$part b $major `expr $base + $part` $disk
+		done
+		;;
+	hd[m-n])
+		major=`Major ide6 88` || continue
+		unit=`suffix $arg hd`
+		base=`index mn $unit`
+		base=`math $base \* 64`
+		makedev hd$unit b $major $base $disk
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
+		do
+			makedev hd$unit$part b $major `expr $base + $part` $disk
+		done
+		;;
+	hd[o-p])
+		major=`Major ide7 89` || continue
+		unit=`suffix $arg hd`
+		base=`index op $unit`
+		base=`math $base \* 64`
+		makedev hd$unit b $major $base $disk
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
 		do
 			makedev hd$unit$part b $major `expr $base + $part` $disk
 		done
@@ -632,7 +757,6 @@
 		major=`Major ht0 37` || continue
 		# Only one IDE tape drive is currently supported; ht0.
 		makedev ht0 c $major 0 $tape
-		makedev ht0 c $major 0 $tape
 		makedev nht0 c $major 128 $tape
 		;;
 	pt)
@@ -649,7 +773,7 @@
 		base=`index abcd $unit`
 		base=`math $base \* 64`
 		makedev xd$unit b $major $base $disk
-		for part in 1 2 3 4 5 6 7 8 # 9 10 11 12 13 14 15 16 17 18 19 20
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
 		do
 			makedev xd$unit$part b $major `expr $base + $part` $disk
 		done
@@ -665,7 +789,7 @@
                         base=`math $base \- 256`
                 fi
 		makedev sd$unit b $major $base $disk
-		for part in 1 2 3 4 5 6 7 8 # 9 10 11 12 13 14 15
+		for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
 		do
 			minor=`expr $base + $part`
 			makedev sd$unit$part b $major $minor $disk
@@ -739,6 +863,28 @@
 		    done
 		done
 		;;
+	cciss[0-9])
+		[ -d cciss ] || {
+			mkdir cciss
+			chown root.root cciss
+			chmod 755 cciss
+		}
+		for ctr in 0 1 2 # 3 4 5 6 7
+		do
+		    major=`math 104 + $ctr`
+		    minor=0
+		    for ld in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
+		    do
+			makedev cciss/c${ctr}d${ld} b $major $minor $disk
+			minor=`math minor + 1`
+			for part in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
+			do
+			    makedev cciss/c${ctr}d${ld}p$part b $major $minor $disk
+			    minor=`math minor + 1`
+			done
+		    done
+		done
+		;;
 	rom)
 		major=`Major rom 31`
 		for i in 0 1 2 3 4 5 6 7
@@ -758,14 +904,14 @@
 		done
 		;;
 	loop)
-		major=`Major loop` || continue
+		major=`Major loop 7` || continue
 		for part in 0 1 2 3 4 5 6 7
 		do
 			makedev loop$part b $major $part $disk
 		done
 		;;
 	md)
-		major=`Major md` || continue
+		major=`Major md 9` || continue
 		for part in 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
 		do
 			makedev md$part b $major $part $disk
@@ -816,6 +962,7 @@
 		major=`Major sr 11` || continue
 		unit=`suffix $arg scd`
 		makedev scd$unit b $major $unit $cdrom
+		makedev sr$unit b $major $unit $cdrom
 		;;
 	sonycd)
 		major=`Major cdu31a` || continue
@@ -919,15 +1066,15 @@
 		minor=0
 		until [ $minor -gt 63 ]
 		do
-			makedev video$minor c $major $minor $private
-			makedev radio$minor c $major `math $minor + 64` $private
+			makedev video$minor c $major $minor $video
+			makedev radio$minor c $major `math $minor + 64` $radio
 			minor=`math $minor + 1`
 		done
 		minor=0
 		until [ $minor -gt 31 ]
 		do
-			makedev vtx$minor c $major `math $minor + 192` $private
-			makedev vbi$minor c $major `math $minor + 224` $private
+			makedev vtx$minor c $major `math $minor + 192` $video
+			makedev vbi$minor c $major `math $minor + 224` $video
 			minor=`math $minor + 1`
 		done
 		symlink video video0
@@ -937,13 +1084,13 @@
 		minor=0
 		until [ $minor -gt 1 ]
 		do
-			makedev winradio$minor c $major $minor $private
+			makedev winradio$minor c $major $minor $radio
 			minor=`math $minor + 1`
 		done
 		symlink winradio winradio0
 		major=83
-		#makedev vtx     c $major 0 $private
-		makedev vttuner c $major 16 $private
+		#makedev vtx     c $major 0 $video
+		makedev vttuner c $major 16 $video
 		;;
 	i2c)
 		major=`Major i2c 89` || continue
@@ -968,16 +1115,16 @@
 		makedev srnd1 c 110 1 $private
 		;;
 	fgrab)
-		makedev mmetfgrab c 40 0 $system
-		makedev wvisfgrab c 26 0 $system
+		makedev mmetfgrab c 40 0 $private
+		makedev wvisfgrab c 26 0 $private
 		for i in 0 1 # more?
 		do
-			makedev iscc$i    c 93 $i $system
-			makedev isccctl$i c 93 `math $i + 128` $system
+			makedev iscc$i    c 93 $i $private
+			makedev isccctl$i c 93 `math $i + 128` $private
 		done
 		for i in 0 1 # more?
 		do
-			makedev dcxx$i c 94 $i $system
+			makedev dcxx$i c 94 $i $private
 		done
 		;;
 	sg)
@@ -1003,7 +1150,7 @@
 		;;
 	fd)
 		# not really devices, we use the /proc filesystem
-		symlink fd     $procfs/self/fd
+		symlink fd     $procfs_rel2dev/self/fd
 		symlink stdin  fd/0
 		symlink stdout fd/1
 		symlink stderr fd/2
@@ -1036,15 +1183,31 @@
 		;;
 	apm)
 		major=`Major apm_bios` || continue
-		makedev $arg c $major 0 $system
+		makedev $arg c $major 0 $private
 		;;
 	dcf)
 		major=`Major dcf` || continue
-		makedev $arg c $major 0 $system
+		makedev $arg c $major 0 $private
+		;;
+	usb)
+		major=`Major usb 180`
+		if [ "$opt_d" ]; then
+			test -d usb && rmdir usb
+		else
+			mkdir -p -m 755 usb
+		fi
+		for i in 0 1 2 3 # up to 15
+		do
+			makedev usb/lp$i    c $major $i $printer
+			makedev usb/mouse$i c $major `math $i + 16` $mouse
+		done
 		;;
-	helloworld)
-		major=`Major hw` || continue
-		makedev helloworld c $major 0 $public
+	fb)
+		major=`Major fb 29`
+		for i in 0 1 2 3 # up to 7
+		do
+			makedev fb$i c $major `math $i \* 32` $private
+		done
 		;;
 	update)
 		if [ ! "$devices" ]
@@ -1080,8 +1243,8 @@
 			exec 3<&-
 		fi
 		create="$create "`cvt $devs`
-		[ "$delete" != "" ] && $0 $opts -d $delete
-		[ "$create" != " " ] && $0 $opts $create
+		[ "$delete" != "" ] && $0 $opts -d $delete || exit 1
+		[ "$create" != " " ] && $0 $opts $create || exit 1
 		[ "$opt_n" ] && continue
 		for device in $devices
 		do
diff -ur MAKEDEV-2.5.2.orig/MAKEDEV.man MAKEDEV-2.5.2/MAKEDEV.man
--- MAKEDEV-2.5.2.orig/MAKEDEV.man	1999-03-26 00:29:05 +0000
+++ MAKEDEV-2.5.2/MAKEDEV.man	2009-05-21 20:41:11 +0000
@@ -1,5 +1,4 @@
-.\" $Id: MAKEDEV.man,v 2.2 1995/05/21 17:55:30 alfie Exp $
-.TH MAKEDEV 8 "14th August 1994" Linux "Linux Programmer's Manual"
+.TH MAKEDEV 8 "" Linux
 .SH NAME
 MAKEDEV \- create devices
 .SH SYNOPSIS
@@ -389,7 +388,13 @@
 that is no longer the case.  To see what network devices are known by the
 kernel, look at /proc/net/dev.
 .SH "SEE ALSO"
-Linux Allocated Devices, maintained by H.\ Peter Anvin,
-<Peter.Anvin@linux.org>.
-.SH AUTHOR
-Nick Holloway, <Nick.Hollowa
+Linux Allocated Devices, available at:
+.PP
+http://www.lanana.org/docs/device-list/
+.PP
+and also as Documentation/devices.txt in the Linux kernel source tree.
+.SH AUTHORS
+This MAKEDEV script was initially written by Nick Holloway,
+and then maintained by Michael K. Johnson
+and later by Nalin Dahyabhai of Red Hat.
+Finally, it has been modified for Owl.
