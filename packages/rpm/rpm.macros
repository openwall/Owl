#
# This is a global RPM configuration file. All changes made here will
# be lost when the rpm package is upgraded. Any per-system configuration
# should be added to /etc/rpm/macros, while per-user configuration should
# be added to ~/.rpmmacros.
#
#==============================================================================
# Macro naming conventions (preliminary):
#
#	Macros that begin with an underscore are "local" in the sense that
#	they (if used) will not be exported in rpm headers. Some macros
#	that don't start with an underscore (but look like they should)
#	are compatible with macros generated by rpm-2.5.x and will be made
#	more consistent in a future release.
#

#==============================================================================
# ---- A macro that expands to nothing.
#
%nil			%{!?nil}

#==============================================================================
# ---- Required rpmrc macros.
#	Macros that used to be initialized as a side effect of rpmrc parsing.
#	These are the default values that can be overridden by other
#	(e.g. per-platform, per-system, per-packager, per-package) macros.
#
#	The directory where rpm's configuration and scripts live
%_rpmconfigdir		%{getconfdir}

#	The location of the rpm database file(s).
%_dbpath		%_var/lib/rpm

#	The location of the rpm database file(s) after "rpm --rebuilddb".
%_dbpath_rebuild	%_dbpath

%_keyringpath		%_dbpath/pubkeys/

%_defaultdocdir		%_datadir/doc
%_defaultlicensedir	%_datadir/licenses

#	The Unix time of the latest kept changelog entry in binary packages.
#	Any older entry is not packaged in binary packages.
%_changelog_trimtime	0

#	The interpreter used for build scriptlets.
%_buildshell		/bin/sh

#	Path to top of build area.
%_topdir		%{getenv:HOME}/.rpm.d

#	The directory where sources/patches will be unpacked and built.
%_builddir		%_topdir/BUILD

#	The directory where newly built binary packages will be written.
%_rpmdir		%_topdir/RPMS

#	The directory where sources/patches from a source package will be
#	installed. This is also where sources/patches are found when building.
%_sourcedir		%_topdir/SOURCES

#	The directory where the spec file from a source package will be
#	installed.
%_specdir		%_topdir/SPECS

#	The directory where newly built source packages will be written.
%_srcrpmdir		%_topdir/SRPMS

#	The directory where buildroots will be created.
%_buildrootdir		%_topdir/buildroots

#	Build root path, where %install installs the package during build.
%buildroot		%_buildrootdir/%name-%version-%release.%_arch

#	Directory where temporary files can be created.
%_tmppath		%_var/tmp

#==============================================================================
# ---- Optional rpmrc macros.
#	Macros that are initialized as a side effect of rpmrc and/or spec
#	file parsing.
#
#	The sub-directory (relative to %{_builddir}) where sources are compiled.
#	This macro is set after processing %setup, either explicitly from the
#	value given to -n or the default name-version.
#
#%buildsubdir

#	Configurable distribution information, same as Distribution: tag in a
#	specfile.
#
#%distribution

#	Configurable distribution URL, same as DistURL: tag in a specfile.
#	The URL will be used to supply reliable information to tools like
#	rpmfind.
#
# Note: You should not configure with disturl (or build packages with
# the DistURL: tag) unless you are willing to supply content in a
# yet-to-be-determined format at the URL specified.
#
#%disturl

#	Configurable bug URL, same as BugURL: tag in a specfile.
#	The URL will be used to supply reliable information to where
#	to file bugs.
#
#%bugurl

#	Boolean (i.e. 1 == "yes", 0 == "no") that controls whether files
#	marked as %doc should be installed.
#%_excludedocs

#	The port and machine name of a FTP proxy host running TIS firewall.
#
#%_ftpport
#%_ftpproxy

#	The signature to use and the location of configuration files for
#	signing packages with GNU gpg.
#
#%_gpg_name
#%_gpg_path

#	The port and machine name of an HTTP proxy host.
#
#%_httpport
#%_httpproxy

#	The PATH put into the environment before running %pre/%post et al.
#
%_install_script_path	/sbin:/bin:/usr/sbin:/usr/bin:/usr/X11R6/bin

#	A colon separated list of desired locales to be installed;
#	"all" means install all locale specific files.
#	
%_install_langs	all

#	A colon separated list of paths where files should *not* be installed.
#	Usually, these are network file system mount points.
#
#%_netsharedpath

#	(experimental)
#	The type of pattern match used on rpmdb iterator selectors:
#	"default"	simple glob-like regex, periods will be escaped,
#			splats will have period prepended, full "^...$" match
#			required. Also, file path tags will use glob(7).
#	"strcmp"	compare strings
#	"regex"		regex(7) patterns using regcomp(3)/regexec(3)
#	"glob"		glob(7) patterns using fnmatch(3)
#
%_query_selector_match	default

#	Configurable packager information, same as Packager: in a specfile.
#
#%packager

#	Compression type and level for source/binary package payloads.
#		"w9.gzdio"	gzip level 9 (default).
#		"w9.bzdio"	bzip2 level 9.
#		"w7.xzdio"	xz level 7, xz's default.
#		"w7.lzdio"	lzma-alone level 7, lzma's default
#
%_source_payload	w7.xzdio
%_binary_payload	w7.xzdio

#	Algorithm to use for generating file checksum digests on build.
#	If not specified or 0, MD5 is used.
#	WARNING: non-MD5 is backwards incompatible, don't enable lightly!
#	The supported algorithms may depend on NSS version, as of NSS
#	3.11.99.5 the following are supported:
#	1	MD5 (default)
#	2	SHA1
#	8	SHA256
#	9	SHA384
#	10	SHA512
#
#%_source_filedigest_algorithm	1
#%_binary_filedigest_algorithm	1

#	Configurable vendor information, same as Vendor: in a specfile.
#
#%vendor

#	Default fuzz level for %patch in spec file.
%_default_patch_fuzz	0

#	Default patch flags
#%_default_patch_flags	-s

#==============================================================================
# ---- Build configuration macros.
#
# Script gets packaged file list on input and buildroot as first parameter.
# Returns list of unpackaged files, i.e. files in $RPM_BUILD_ROOT not packaged.
#
# Note: Disable (by commenting out) for legacy compatibility.
%__check_files         %_rpmconfigdir/check-files '%buildroot'

#
# Should unpackaged files in a build root terminate a build?
#
# Note: The default value should be 0 for legacy compatibility.
%_unpackaged_files_terminate_build	1

#
# Should missing %doc files in the build directory terminate a build?
#
# Note: The default value should be 0 for legacy compatibility.
%_missing_doc_files_terminate_build	1

#
# Should binaries in noarch packages terminate a build?
%_binaries_in_noarch_packages_terminate_build	1

#
# Should rpm try to download missing sources at build-time?
# Enabling this is dangerous as long as rpm has no means to validate
# the integrity of the download with a digest or signature.
%_disable_source_fetch 1

#
# Program to call for each successfully built and written binary package.
# The package name is passed to the program as a command-line argument.
#
#%_build_pkgcheck	%{_bindir}/rpmlint

#
# Program to call for the whole binary package set after build.
# The package set is passed to the program via command-line arguments.
#
#%_build_pkgcheck_set	%{_bindir}/rpmlint

#
# Program to call for successfully built and written SRPM.
# The package name is passed to the program as a command-line argument.
#
#%_build_pkgcheck_srpm	%{_bindir}/rpmlint

#
# Should the build of packages fail if package checker (if defined) returns
# non-zero exit status?
#
#%_nonzero_exit_pkgcheck_terminate_build	1

#
# Should an ELF file processed by find-debuginfo.sh having no build ID
# terminate a build?  This is left undefined to disable it and defined to
# enable.
#
#%_missing_build_ids_terminate_build	1

# Directories whose contents should be considered as documentation.
%__docdir_path %_datadir/doc:%_datadir/man:%_datadir/info:%_datadir/gtk-doc/html:%{?_docdir}:%{?_mandir}:%{?_infodir}:%{?_javadocdir}:/usr/doc:/usr/man:/usr/info:/usr/X11R6/man

#==============================================================================
# ---- Database configuration macros.
#	Macros used to configure Berkley db parameters.
#
# rpmdb macro configuration values are a colon (or white space) separated
# list of tokens, with an optional '!' negation to explicitly disable bit
# values, or a "=value" if a parameter. A per-tag value is used (e.g.
# %_dbi_config_Packages) if defined, otherwise a per-rpmdb default
# (e.g. %_dbi_config).
#
# Here's a short list of the tokens, with a guess of whether the option is
# useful:
#	(nothing)	currently used in rpm, known to work.
#	"+++"		under development, will be supported in rpm eventually.
#	"???"		I have no clue, you're mostly on your own.
#
# If you do find yourself inclined to fiddle, here's what I see (shrug):
# 1) Only the value of mp_size has any serious impact on overall performance,
#    and you will need ~256Kb to handle a typical machine install.
# 2) Only the Packages hash, because of the size of the values (i.e. headers),
#    will ever need tuning. Diddle the pagesize if you're interested, although
#    I believe that you will find pagesize=512 "best".
# 3) Adding nofsync increases speed, but risks total data loss. Fiddle shared
#    and/or mp_size instead.
#
#   token	works?	Berkeley db flag or value
#==================================================
#---------------------- DBENV tunable values:
#   mmapsize=16Mb	DBENV->set_mp_mmapsize
#   cachesize=1Mb	DBENV->set_cachesize, DB->set_cachesize
#---------------------- DB->open bits:
#   nommap	???	DB_NOMMAP
#----------------------- rpmdb specific configuration:
#   lockdbfd		(always on for Packages) Use fcntl(2) locking ?
#   nofsync		Disable fsync(2) call performed after db3 writes?
#

# Misc BDB tuning options
%__dbi_other			mp_mmapsize=128Mb mp_size=1Mb

%_dbi_config			%{?__dbi_other}

# "Packages" should have shared/exclusive fcntl(2) lock using "lockdbfd".
%_dbi_config_Packages		%{?_dbi_config} lockdbfd

#==============================================================================
# ---- Transaction macros.
#	Macro(s) used to parameterize transactions.
#
#	Verify digest/signature flags for various rpm modes:
#	0x30300 (_RPMVSF_NODIGESTS)    --nohdrchk      if set, don't check digest(s)
#	0xc0c00 (_RPMVSF_NOSIGNATURES) --nosignature   if set, don't check signature(s)
#	0xf0000 (_RPMVSF_NOPAYLOAD)    --nolegacy      if set, check header+payload (if possible)
#	0x00f00 (_RPMVSF_NOHEADER)     --nohdrchk      if set, don't check rpmdb headers
#
#	For example, the value 0xf0c00 (=0xf0000+0xc0c00) disables legacy
#	digest/signature checking, disables signature checking, but attempts
#	digest checking, also when retrieving headers from the database.
#
#	You also can do:
#	 >>> hex(rpm._RPMVSF_NOSIGNATURES)
#	 '0xc0c00'
#	or:
#	 >>> hex(rpm._RPMVSF_NOSIGNATURES|rpm._RPMVSF_NOPAYLOAD)
#	 '0xf0c00'
#	at the python prompt for example, after "import rpm".
#
#	The checking overhead is ~11ms per header for digests/signatures;
#	each header from the database is checked only when first encountered
#	for each database open.
#
#	Note: the %_vsflags_erase applies to --upgrade/--freshen modes as
#	well as --erase.
#
%__vsflags		0xf0000
%_vsflags_build		%{__vsflags}
%_vsflags_erase		%{__vsflags}
%_vsflags_install	%{__vsflags}
%_vsflags_query		%{__vsflags}
%_vsflags_rebuilddb	0xc0c00
%_vsflags_verify	%{__vsflags}

#
# Default output format string for rpm -qa
#
# XXX	Note: escaped %% for use in headerFormat()
%_query_all_fmt		%%{nvra}

#
# Default path to the file used for transaction fcntl lock.
%_rpmlock_path	%{_dbpath}/.rpm.lock

#
# ISA dependency marker, none for noarch and name-bitness for others
%_isa			%{?__isa:(%{__isa})}%{!?__isa:%{nil}}

#
# Define per-arch and per-os defaults. Can be overridden by per-target macros.
%__arch_install_post	%{nil}
%__os_install_post    \
    %{_rpmconfigdir}/brp-compress \
    %{_rpmconfigdir}/brp-strip %{__strip} \
    %{_rpmconfigdir}/brp-strip-static-archive %{__strip} \
    %{_rpmconfigdir}/brp-strip-comment-note %{__strip} %{__objdump} \
%{nil}

%_smp_mflags %([ -z "$RPM_BUILD_NCPUS" ] \\\
	&& RPM_BUILD_NCPUS=$(/usr/bin/getconf _NPROCESSORS_ONLN); \\\
	[ -n "$RPM_BUILD_NCPUS" -a -z "${RPM_BUILD_NCPUS//[[:digit:]]}" -a "$RPM_BUILD_NCPUS" -gt 1 ] \\\
	&& echo "-j$RPM_BUILD_NCPUS")

# Macro to fix broken permissions in sources
%_fixperms      %__chmod -Rf a+rX,u+w,g-w,o-w

%patches %{lua: for i, p in ipairs(patches) do print(p.." ") end}
%sources %{lua: for i, s in ipairs(sources) do print(s.." ") end}

#------------------------------------------------------------------------
# Use in %install to generate locale specific file lists. For example,
#
# %install
# ...
# %find_lang %{name}
# ...
# %files -f %{name}.lang
#
%find_lang	%{_rpmconfigdir}/find-lang.sh %{buildroot}

# Commands + opts to use for retrieving remote files
# Proxy opts can be set through --httpproxy/--httpport popt aliases,
# for any special local needs use %__urlhelper_localopts in system-wide
# or per-user macro configuration.
%__urlhelpercmd         %__curl
%__urlhelperopts        --silent --show-error --fail --location -o
%__urlhelper_proxyopts   %{?_httpproxy:--proxy %{_httpproxy}%{?_httpport::%{_httpport}}}%{!?_httpproxy:%{nil}}
%_urlhelper             %{__urlhelpercmd} %{?__urlhelper_localopts} %{?__urlhelper_proxyopts} %{__urlhelperopts}
