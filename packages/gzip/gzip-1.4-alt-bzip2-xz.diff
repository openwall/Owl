--- gzip-1.4/zdiff.1
+++ gzip-1.4/zdiff.1
@@ -10,37 +10,51 @@ zcmp, zdiff \- compare compressed files
 [ diff_options ] file1
 [ file2 ]
 .SH DESCRIPTION
-.I  Zcmp
+.B zcmp
 and
-.I zdiff
+.B zdiff
 are used to invoke the
-.I cmp
+.B cmp
 or the
-.I diff
+.B diff
 program on files compressed via
-.IR gzip "."
+.BR gzip .
 All options specified are passed directly to
-.I cmp
+.B cmp
 or
-.IR diff "."
-If only 1 file is specified, then the files compared are
+.BR diff .
+If only one file is specified, then the files compared are
 .I file1
 and an uncompressed
-.IR file1 ".gz."
+.I file1
+without
+.IR .gz ", " .bz2 ", " .lzma
+or
+.I .xz
+suffix.
 If two files are specified, then they are uncompressed if necessary and fed to
-.I cmp
+.B cmp
 or
-.IR diff "."
+.BR diff .
 The exit status from
-.I cmp
+.B cmp
 or
-.I diff
+.B diff
 is preserved.
 .SH "SEE ALSO"
-cmp(1), diff(1), zmore(1), zgrep(1), znew(1), zforce(1), gzip(1), gzexe(1)
+.BR cmp (1),
+.BR diff (1),
+.BR zmore (1),
+.BR zgrep (1),
+.BR znew (1),
+.BR zforce (1),
+.BR gzexe (1),
+.BR gzip (1),
+.BR bzip2 (1),
+.BR xz (1).
 .SH BUGS
 Messages from the
-.I cmp
+.B cmp
 or
-.I diff
+.B diff
 programs refer to temporary filenames instead of those specified.
--- gzip-1.4/zdiff.in
+++ gzip-1.4/zdiff.in
@@ -24,13 +24,19 @@ case $1 in
 esac
 PATH=$bindir:$PATH
 
-case $1 in
-  --__cmp) shift
-	prog=cmp;  cmp='${CMP-cmp}'  ;;
+case "${0##*/}" in
+  bz*) def_compr=bzip2 ;;
+  lz*) def_compr=lzma  ;;
+  xz*) def_compr=xz    ;;
+  *)   def_compr=gzip  ;;
+esac
+
+case "${0##*/}" in
+  *cmp) prog=cmp;  cmp='${CMP-cmp}'  ;;
   *)    prog=diff; cmp='${DIFF-diff}';;
 esac
 
-version="z$prog (gzip) @VERSION@
+version="${0##*/} (gzip) @VERSION@
 Copyright (C) 2007, 2009-2010 Free Software Foundation, Inc.
 This is free software.  You may redistribute copies of it under the terms of
 the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
@@ -41,7 +47,7 @@ Written by Jean-loup Gailly."
 usage="Usage: $0 [OPTION]... FILE1 [FILE2]
 Compare FILE1 to FILE2, using their uncompressed contents if they are
 compressed.  If FILE2 is omitted, compare FILE1 to the uncompressed
-contents of FILE1.gz.  Do comparisons like '$prog' does.
+file FILE1 without compression suffix.  Do comparisons like '$prog' does.
 
 OPTIONs are the same as for '$prog'.
 
@@ -75,27 +81,55 @@ done
 gzip_status=0
 exec 3>&1
 
-if test $# -eq 1; then
-  case $1 in
-  *[-.]gz* | *[-.][zZ] | *.t[ga]z)
-    FILE=`expr "X$1" : 'X\(.*\)[-.][zZtga]*$'`
-    gzip_status=$(
-      exec 4>&1
-      (gzip -cd -- "$1" 4>&-; echo $? >&4) 3>&- | eval "$cmp" - '"$FILE"' >&3
-    );;
+guess_compr()
+{
+  case $2 in
+  *[-.]bz2)
+    eval $1=bzip2
+    FILE="${2%[-.]bz2}";;
+  *[-.]xz)
+    eval $1=xz
+    FILE="${2%[-.]xz}";;
+  *[-.]lzma)
+    eval $1=lzma
+    FILE="${2%[-.]lzma}";;
+  *[-.]gz*)
+    eval $1=gzip
+    FILE="${2%[-.]gz*}";;
+  *[-.][zZ])
+    eval $1=gzip
+    FILE="${2%[-.][zZ]}";;
+  *[-.]t[ga]z)
+    eval $1=gzip
+    FILE="${2%[-.]t[ga]z}";;
+  -)
+    eval $1=$def_compr
+    FILE="$2";;
   *)
-    echo >&2 "$0: $1: unknown compressed file extension"
-    exit 2;;
+    eval $1=
+    FILE="$2";;
   esac
+}
+
+if test $# -eq 1; then
+  guess_compr compr "$1"
+  if test "$1" = "$FILE"; then
+    echo >&2 "$0: $1: unknown compressed file extension"
+    exit 2
+  fi
+  gzip_status=$(
+    exec 4>&1
+    ($compr -cd -- "$1" 4>&-; echo $? >&4) 3>&- | eval "$cmp" - '"$FILE"' >&3
+  )
 elif test $# -eq 2; then
-	case "$1" in
-	*[-.]gz* | *[-.][zZ] | *.t[ga]z | -)
-                case "$2" in
-		*[-.]gz* | *[-.][zZ] | *.t[ga]z | -)
+	guess_compr compr1 "$1"
+	guess_compr compr2 "$2"
+	if test -n "$compr1"; then
+		if test -n "$compr2"; then
 		    if test "$1$2" = --; then
 			gzip_status=$(
 			  exec 4>&1
-			  (gzip -cdfq - 4>&-; echo $? >&4) 3>&- |
+			  ($compr1 -cdfq - 4>&-; echo $? >&4) 3>&- |
 			    eval "$cmp" - - >&3
 			)
 		    elif
@@ -106,8 +140,8 @@ elif test $# -eq 2; then
 		    then
 			gzip_status=$(
 			  exec 4>&1
-			  (gzip -cdfq -- "$1" 4>&-; echo $? >&4) 3>&- |
-			    ( (gzip -cdfq -- "$2" 4>&-; echo $? >&4) 3>&- 5<&- </dev/null |
+			  ($compr1 -cdfq -- "$1" 4>&-; echo $? >&4) 3>&- |
+			    ( ($compr2 -cdfq -- "$2" 4>&-; echo $? >&4) 3>&- 5<&- </dev/null |
 			       eval "$cmp" /dev/fd/5 - >&3) 5<&0
 			)
 			cmp_status=$?
@@ -117,7 +151,7 @@ elif test $# -eq 2; then
 			esac
 			(exit $cmp_status)
 		    else
-			F=`expr "/$2" : '.*/\(.*\)[-.][zZtga]*$'` || F=$prog
+			F=$prog
 			tmp=
 			trap '
 			  test -n "$tmp" && rm -f "$tmp"
@@ -129,34 +163,35 @@ elif test $# -eq 2; then
 			  set -C
 			  tmp=${TMPDIR-/tmp}/$F.$$
 			fi
-			gzip -cdfq -- "$2" > "$tmp" || exit 2
+			$compr2 -cdfq -- "$2" > "$tmp" || exit 2
 			gzip_status=$(
 			  exec 4>&1
-			  (gzip -cdfq -- "$1" 4>&-; echo $? >&4) 3>&- |
+			  ($compr1 -cdfq -- "$1" 4>&-; echo $? >&4) 3>&- |
 			    eval "$cmp" - '"$tmp"' >&3
 			)
                         cmp_status=$?
 			rm -f "$tmp" || gzip_status=$?
 			trap - HUP INT PIPE TERM 0
 			(exit $cmp_status)
-		    fi;;
-		*)
+		    fi
+	    else
 		    gzip_status=$(
 		      exec 4>&1
-		      (gzip -cdfq -- "$1" 4>&-; echo $? >&4) 3>&- |
+		      ($compr1 -cdfq -- "$1" 4>&-; echo $? >&4) 3>&- |
 		        eval "$cmp" - '"$2"' >&3
-		    );;
-                esac;;
-        *)      case "$2" in
-		*[-.]gz* | *[-.][zZ] | *.t[ga]z | -)
+		    )
+	    fi
+	else
+		if test -n "$compr2"; then
 			gzip_status=$(
 			  exec 4>&1
-			  (gzip -cdfq -- "$2" 4>&-; echo $? >&4) 3>&- |
+			  ($compr2 -cdfq -- "$2" 4>&-; echo $? >&4) 3>&- |
 			    eval "$cmp" '"$1"' - >&3
-			);;
-		*)	eval "$cmp" '"$1"' '"$2"';;
-                esac;;
-	esac
+			)
+		else
+			eval "$cmp" '"$1"' '"$2"'
+		fi
+	fi
 else
 	echo >&2 "$0: invalid number of operands; try \`$0 --help' for help"
 	exit 2
--- gzip-1.4/zgrep.1
+++ gzip-1.4/zgrep.1
@@ -6,24 +6,135 @@ zgrep \- search possibly compressed files for a regular expression
 [ grep_options ]
 .BI  [\ -e\ ] " pattern"
 .IR filename ".\|.\|."
+.br
+.B zegrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B zfgrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B bzgrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B bzegrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B bzfgrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B lzgrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B lzegrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B lzfgrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B xzgrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B xzegrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
+.br
+.B xzfgrep
+[ grep_options ]
+.BI  [\ -e\ ] " pattern"
+.IR filename ".\|.\|."
 .SH DESCRIPTION
-.I Zgrep
+.B zgrep
 invokes
-.I grep
-on compressed or gzipped files.
+.B grep
+on compressed files.
 All options specified are passed directly to
-.IR grep .
+.BR grep .
 If no file is specified, then the standard input is decompressed
 if necessary and fed to grep.
 Otherwise the given files are uncompressed if necessary and fed to
-.IR grep .
+.BR grep .
 .PP
-If the GREP environment variable is set,
-.I zgrep
+If
+.B zgrep
+is invoked as
+.B zegrep
+or
+.B zfgrep
+then
+.B egrep
+or
+.B fgrep
+is used instead of
+.BR grep .
+.br
+If the
+.I GREP
+environment variable is set,
+.B zgrep
 uses it as the
-.I grep
+.B grep
 program to be invoked.
+.br
+If
+.B zgrep
+is invoked as
+.BR bzgrep ", " bzegrep
+or
+.BR bzfgrep ", "
+then
+.B bzip2
+is used instead of
+.BR gzip .
+.br
+Likewise, if
+.B zgrep
+is invoked as
+.BR lzgrep ", " lzegrep
+or
+.BR lzfgrep ", "
+then
+.B lxma
+is used instead of
+.BR gzip .
+.br
+Likewise, if
+.B zgrep
+is invoked as
+.BR xzgrep ", " xzegrep
+or
+.BR xzfgrep ", "
+then
+.B xz
+is used instead of
+.BR gzip .
 .SH AUTHOR
 Charles Levert (charles@comm.polymtl.ca)
 .SH "SEE ALSO"
-grep(1), gzexe(1), gzip(1), zdiff(1), zforce(1), zmore(1), znew(1)
+.BR grep (1),
+.BR zdiff (1),
+.BR zmore (1),
+.BR znew (1),
+.BR zforce (1),
+.BR gzexe (1),
+.BR gzip (1),
+.BR bzip2 (1),
+.BR xz (1).
--- gzip-1.4/zgrep.in
+++ gzip-1.4/zgrep.in
@@ -26,15 +26,26 @@ case $1 in
 esac
 PATH=$bindir:$PATH
 
-grep='${GREP-grep}'
+case "${0##*/}" in
+  bz*) compr=bzip2 ;;
+  lz*) compr=lzma  ;;
+  xz*) compr=xz    ;;
+  *)   compr=gzip  ;;
+esac
+
+case "${0##*/}" in
+  *egrep) grep='${GREP-grep} -E' ;;
+  *fgrep) grep='${GREP-grep} -F' ;;
+  *)      grep='${GREP-grep}'    ;;
+esac
 
-version='zgrep (gzip) @VERSION@
+version="${0##*/} (gzip) @VERSION@
 Copyright (C) 2007, 2009-2010 Free Software Foundation, Inc.
 This is free software.  You may redistribute copies of it under the terms of
 the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
 There is NO WARRANTY, to the extent permitted by law.
 
-Written by Jean-loup Gailly.'
+Written by Jean-loup Gailly."
 
 usage="Usage: $0 [OPTION]... [-e] PATTERN [FILE]...
 Look for instances of PATTERN in the input FILEs, using their
@@ -182,7 +193,7 @@ do
     if test $pat_on_stdin -eq 1; then
       eval "exec $pat_fd<&0"
     fi
-    (gzip -cdfq -- "$i" 5>&-; echo $? >&5) 3>&- |
+    ($compr -cdfq -- "$i" 5>&-; echo $? >&5) 3>&- |
     if test $files_with_matches -eq 1; then
       eval "$grep" >/dev/null && { printf '%s\n' "$i" || exit 2; }
     elif test $files_without_matches -eq 1; then
--- gzip-1.4/zmore.in
+++ gzip-1.4/zmore.in
@@ -23,7 +23,7 @@ case $1 in
 esac
 PATH=$bindir:$PATH; export PATH
 
-version="zmore (gzip) @VERSION@
+version="${0##*/} (gzip) @VERSION@
 Copyright (C) 2007, 2009-2010 Free Software Foundation, Inc.
 This is free software.  You may redistribute copies of it under the terms of
 the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
@@ -36,6 +36,13 @@ Like 'more', but operate on the uncompressed contents of any compressed FILEs.
 
 Report bugs to <bug-gzip@gnu.org>."
 
+case "${0##*/}" in
+  bz*) compr=bzip2 ;;
+  lz*) compr=lzma  ;;
+  xz*) compr=xz    ;;
+  *)   compr=gzip  ;;
+esac
+
 if test "`echo -n a`" = "-n a"; then
   # looks like a SysV system:
   n1=''; n2='\c'
@@ -59,7 +66,7 @@ if test $# = 0; then
     if test -t 0; then
 	echo >&2 "$0: invalid number of operands; try \`$0 --help' for help"
     else
-	gzip -cdfq | eval ${PAGER-more}
+	$compr -cdfq | eval ${PAGER-more}
     fi
 else
     FIRST=1
@@ -83,7 +90,7 @@ else
 	fi
 	if test "$ANS" != 's'; then
 		echo "------> $FILE <------"
-		gzip -cdfq -- "$FILE" | eval ${PAGER-more}
+		$compr -cdfq -- "$FILE" | eval ${PAGER-more}
 	fi
 	if test -t 1; then
 		FIRST=0
