--- e2fsprogs-1.40.4/debugfs/set_fields.c
+++ e2fsprogs-1.40.4/debugfs/set_fields.c
@@ -10,6 +10,7 @@
  */
 
 #define _XOPEN_SOURCE 500 /* for inclusion of strptime() */
+#define _BSD_SOURCE /* for inclusion of strcasecmp() */
 
 #include <stdio.h>
 #include <unistd.h>
--- e2fsprogs-1.40.4/debugfs/util.c
+++ e2fsprogs-1.40.4/debugfs/util.c
@@ -6,7 +6,14 @@
  *
  */
 
-#define _XOPEN_SOURCE /* needed for strptime */
+#ifdef HAVE_STRPTIME
+# ifndef _XOPEN_SOURCE
+#  define _XOPEN_SOURCE 500 /* needed for strptime() */
+# endif
+#endif
+#ifndef _BSD_SOURCE
+# define _BSD_SOURCE /* needed for ffs() */
+#endif
 
 #include <stdio.h>
 #include <unistd.h>
--- e2fsprogs-1.40.4/e2fsck/super.c
+++ e2fsprogs-1.40.4/e2fsck/super.c
@@ -779,7 +779,6 @@ int check_backup_super_block(e2fsck_t ctx)
 {
 	ext2_filsys	fs = ctx->fs;
 	ext2_filsys	tfs = 0;
-	io_manager	io_ptr;
 	errcode_t	retval;
 	dgrp_t		g;
 	blk_t		sb;
--- e2fsprogs-1.40.4/lib/blkid/dev.c
+++ e2fsprogs-1.40.4/lib/blkid/dev.c
@@ -193,7 +193,7 @@ extern char *optarg;
 extern int optind;
 #endif
 
-void usage(char *prog)
+static void usage(char *prog)
 {
 	fprintf(stderr, "Usage: %s [-f blkid_file] [-m debug_mask]\n", prog);
 	fprintf(stderr, "\tList all devices and exit\n");
--- e2fsprogs-1.40.4/lib/blkid/devno.c
+++ e2fsprogs-1.40.4/lib/blkid/devno.c
@@ -111,9 +111,7 @@ static void scan_dir(char *dirname, dev_t devno, struct dir_list **list,
 		if (dirlen + strlen(dp->d_name) >= sizeof(path))
 			continue;
 
-		if (dp->d_name[0] == '.' &&
-		    ((dp->d_name[1] == 0) ||
-		     ((dp->d_name[1] == '.') && (dp->d_name[2] == 0))))
+		if (dp->d_name[0] == '.')
 			continue;
 
 		sprintf(path, "%s/%s", dirname, dp->d_name);
--- e2fsprogs-1.40.4/lib/blkid/tag.c
+++ e2fsprogs-1.40.4/lib/blkid/tag.c
@@ -390,7 +390,7 @@ extern char *optarg;
 extern int optind;
 #endif
 
-void usage(char *prog)
+static void usage(char *prog)
 {
 	fprintf(stderr, "Usage: %s [-f blkid_file] [-m debug_mask] device "
 		"[type value]\n", 
--- e2fsprogs-1.40.4/lib/uuid/gen_uuid.c
+++ e2fsprogs-1.40.4/lib/uuid/gen_uuid.c
@@ -357,6 +357,7 @@ try_again:
 	return 0;
 }
 
+#ifdef USE_UUIDD
 static ssize_t read_all(int fd, char *buf, size_t count)
 {
 	ssize_t ret;
@@ -376,6 +377,7 @@ static ssize_t read_all(int fd, char *buf, size_t count)
 	}
 	return c;
 }
+#endif
 
 
 /*
@@ -409,7 +411,7 @@ static int get_uuid_via_daemon(int op, uuid_t out, int *num)
 			access_ret = access(uuidd_path, X_OK);
 		if (access_ret == 0 && start_attempts++ < 5) {
 			if ((pid = fork()) == 0) {
-				execl(uuidd_path, "uuidd", "-qT", "300", 0);
+				execl(uuidd_path, "uuidd", "-qT", "300", NULL);
 				exit(1);
 			}
 			(void) waitpid(pid, 0, 0);
--- e2fsprogs-1.40.4/misc/uuidd.c
+++ e2fsprogs-1.40.4/misc/uuidd.c
@@ -9,6 +9,10 @@
  * %End-Header%
  */
 
+#if defined(HAVE_SETRESUID) && !defined(_GNU_SOURCE)
+#define _GNU_SOURCE 1 /* for setresuid() prototype */
+#endif
+
 #include <stdio.h>
 #ifdef HAVE_STDLIB_H
 #include <stdlib.h>
