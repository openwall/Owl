diff -urp openssl-1.0.0d.orig/crypto/conf/conf_api.c openssl-1.0.0d/crypto/conf/conf_api.c
--- openssl-1.0.0d.orig/crypto/conf/conf_api.c	2010-06-15 17:25:07 +0000
+++ openssl-1.0.0d/crypto/conf/conf_api.c	2011-05-17 08:50:41 +0000
@@ -139,7 +139,7 @@ char *_CONF_get_string(const CONF *conf,
 			vv.section=(char *)section;
 			v=lh_CONF_VALUE_retrieve(conf->data,&vv);
 			if (v != NULL) return(v->value);
-			if (strcmp(section,"ENV") == 0)
+			if (!OPENSSL_issetugid() && (strcmp(section,"ENV") == 0))
 				{
 				p=getenv(name);
 				if (p != NULL) return(p);
@@ -154,7 +154,7 @@ char *_CONF_get_string(const CONF *conf,
 			return(NULL);
 		}
 	else
-		return(getenv(name));
+		return (OPENSSL_issetugid() ? NULL : getenv(name));
 	}
 
 #if 0 /* There's no way to provide error checking with this function, so
diff -urp openssl-1.0.0d.orig/crypto/conf/conf_mod.c openssl-1.0.0d/crypto/conf/conf_mod.c
--- openssl-1.0.0d.orig/crypto/conf/conf_mod.c	2008-11-05 18:38:55 +0000
+++ openssl-1.0.0d/crypto/conf/conf_mod.c	2011-05-17 08:51:57 +0000
@@ -548,6 +548,9 @@ char *CONF_get1_default_config_file(void
 	char *file;
 	int len;
 
+	if (OPENSSL_issetugid())
+		return NULL;
+
 	file = getenv("OPENSSL_CONF");
 	if (file) 
 		return BUF_strdup(file);
diff -urp openssl-1.0.0d.orig/crypto/engine/eng_list.c openssl-1.0.0d/crypto/engine/eng_list.c
--- openssl-1.0.0d.orig/crypto/engine/eng_list.c	2010-03-27 18:28:13 +0000
+++ openssl-1.0.0d/crypto/engine/eng_list.c	2011-05-17 08:53:29 +0000
@@ -399,9 +399,9 @@ ENGINE *ENGINE_by_id(const char *id)
 	if (strcmp(id, "dynamic"))
 		{
 #ifdef OPENSSL_SYS_VMS
-		if((load_dir = getenv("OPENSSL_ENGINES")) == 0) load_dir = "SSLROOT:[ENGINES]";
+		if(OPENSSL_issetugid() || (load_dir = getenv("OPENSSL_ENGINES")) == 0) load_dir = "SSLROOT:[ENGINES]";
 #else
-		if((load_dir = getenv("OPENSSL_ENGINES")) == 0) load_dir = ENGINESDIR;
+		if(OPENSSL_issetugid() || (load_dir = getenv("OPENSSL_ENGINES")) == 0) load_dir = ENGINESDIR;
 #endif
 		iterator = ENGINE_by_id("dynamic");
 		if(!iterator || !ENGINE_ctrl_cmd_string(iterator, "ID", id, 0) ||
diff -urp openssl-1.0.0d.orig/crypto/x509/by_dir.c openssl-1.0.0d/crypto/x509/by_dir.c
--- openssl-1.0.0d.orig/crypto/x509/by_dir.c	2010-02-19 18:26:23 +0000
+++ openssl-1.0.0d/crypto/x509/by_dir.c	2011-05-17 08:55:10 +0000
@@ -135,7 +135,8 @@ static int dir_ctrl(X509_LOOKUP *ctx, in
 	case X509_L_ADD_DIR:
 		if (argl == X509_FILETYPE_DEFAULT)
 			{
-			dir=(char *)getenv(X509_get_default_cert_dir_env());
+			if (!OPENSSL_issetugid())
+				dir=(char *)getenv(X509_get_default_cert_dir_env());
 			if (dir)
 				ret=add_cert_dir(ld,dir,X509_FILETYPE_PEM);
 			else
diff -urp openssl-1.0.0d.orig/crypto/x509/by_file.c openssl-1.0.0d/crypto/x509/by_file.c
--- openssl-1.0.0d.orig/crypto/x509/by_file.c	2005-12-18 19:11:37 +0000
+++ openssl-1.0.0d/crypto/x509/by_file.c	2011-05-17 10:02:53 +0000
@@ -93,14 +93,15 @@ static int by_file_ctrl(X509_LOOKUP *ctx
 	     char **ret)
 	{
 	int ok=0;
-	char *file;
+	char *file = NULL;
 
 	switch (cmd)
 		{
 	case X509_L_FILE_LOAD:
 		if (argl == X509_FILETYPE_DEFAULT)
 			{
-			file = (char *)getenv(X509_get_default_cert_file_env());
+			if (!OPENSSL_issetugid())
+				file = (char *)getenv(X509_get_default_cert_file_env());
 			if (file)
 				ok = (X509_load_cert_crl_file(ctx,file,
 					      X509_FILETYPE_PEM) != 0);
diff -urp openssl-1.0.0d.orig/crypto/x509/x509_vfy.c openssl-1.0.0d/crypto/x509/x509_vfy.c
--- openssl-1.0.0d.orig/crypto/x509/x509_vfy.c	2010-11-02 15:57:40 +0000
+++ openssl-1.0.0d/crypto/x509/x509_vfy.c	2011-05-17 10:03:11 +0000
@@ -461,7 +461,7 @@ static int check_chain_extensions(X509_S
 	int (*cb)(int xok,X509_STORE_CTX *xctx);
 	int proxy_path_length = 0;
 	int purpose;
-	int allow_proxy_certs;
+	int allow_proxy_certs = 0;
 	cb=ctx->verify_cb;
 
 	/* must_be_ca can have 1 of 3 values:
@@ -486,7 +486,7 @@ static int check_chain_extensions(X509_S
 			!!(ctx->param->flags & X509_V_FLAG_ALLOW_PROXY_CERTS);
 		/* A hack to keep people who don't want to modify their
 		   software happy */
-		if (getenv("OPENSSL_ALLOW_PROXY_CERTS"))
+		if (!OPENSSL_issetugid() && getenv("OPENSSL_ALLOW_PROXY_CERTS"))
 			allow_proxy_certs = 1;
 		purpose = ctx->param->purpose;
 		}
diff -urp openssl-1.0.0d.orig/engines/ccgost/gost_ctl.c openssl-1.0.0d/engines/ccgost/gost_ctl.c
--- openssl-1.0.0d.orig/engines/ccgost/gost_ctl.c	2008-03-16 21:05:44 +0000
+++ openssl-1.0.0d/engines/ccgost/gost_ctl.c	2011-05-17 08:59:37 +0000
@@ -59,13 +59,14 @@ int gost_control_func(ENGINE *e,int cmd,
 
 const char *get_gost_engine_param(int param) 
 	{
-	char *tmp;
+	char *tmp = NULL;
 	if (param <0 || param >GOST_PARAM_MAX) return NULL;
 	if (gost_params[param]!=NULL) 
 		{
 		return gost_params[param];
 		}
-	tmp = getenv(gost_envnames[param]);
+	if (!OPENSSL_issetugid())
+		tmp = getenv(gost_envnames[param]);
 	if (tmp) 
 		{
 		if (gost_params[param]) OPENSSL_free(gost_params[param]);
@@ -77,9 +78,10 @@ const char *get_gost_engine_param(int pa
 
 int gost_set_default_param(int param, const char *value) 
 	{
-	const char *tmp;
+	const char *tmp = NULL;
 	if (param <0 || param >GOST_PARAM_MAX) return 0;
-	tmp = getenv(gost_envnames[param]);
+	if (!OPENSSL_issetugid())
+		tmp = getenv(gost_envnames[param]);
 	/* if there is value in the environment, use it, else -passed string * */
 	if (!tmp) tmp=value;
 	if (gost_params[param]) OPENSSL_free(gost_params[param]);
