diff -ur run-parts-1.15.races/run-parts.c run-parts-1.15/run-parts.c
--- run-parts-1.15.races/run-parts.c	Fri May 25 02:50:16 2001
+++ run-parts-1.15/run-parts.c	Fri May 25 02:51:29 2001
@@ -140,6 +140,29 @@
   }
 }
 
+int write_loop(int fd, char *buffer, int count)
+{
+  int offset, block;
+
+  offset = 0;
+  while (count > 0) {
+    block = write(fd, &buffer[offset], count);
+
+/* If any write(2) fails, we consider that the entire write_loop() has
+ * failed to do its job, unless we were interrupted by a signal. */
+    if (block < 0) {
+      if (errno == EINTR) continue;
+      return block;
+    }
+
+    offset += block;
+    count -= block;
+  }
+
+/* Should be equal to the requested size, unless our kernel got crazy. */
+  return offset;
+}
+
 jmp_buf sigchld_jmp;
 volatile int sigchld_jmp_enable;
 
@@ -240,7 +263,7 @@
 	      fflush(stdout);
 	      printflag = 1;
 	    }
-	    write(STDOUT_FILENO, buf, c);
+	    write_loop(STDOUT_FILENO, buf, c);
 	  }
 	  else if (c == 0) {
 	    close(pout[0]);
@@ -255,7 +278,7 @@
 	      fflush(stderr);
 	      printflag = 1;
 	    }
-	    write(STDERR_FILENO, buf, c);
+	    write_loop(STDERR_FILENO, buf, c);
 	  }
 	  else if (c == 0) {
 	    close(perr[0]);
