diff -urp dhcp-3.0pl2.orig/client/dhclient.c dhcp-3.0pl2/client/dhclient.c
--- dhcp-3.0pl2.orig/client/dhclient.c	Wed Aug  8 14:46:14 2001
+++ dhcp-3.0pl2/client/dhclient.c	Sun Jun 13 03:36:52 2004
@@ -255,11 +255,8 @@ int main (argc, argv, envp)
 	        /* XXX inelegant hack to prove concept */
 		char command[1024];
 
-#if !defined (NO_SNPRINTF)
-		snprintf (command, 1024, "kill `cat %s`", path_dhclient_pid);
-#else
-		sprintf (command, "kill `cat %s`", path_dhclient_pid);
-#endif
+		snprintf (command, sizeof(command),
+			"kill `cat %s`", path_dhclient_pid);
 		system (command);
 	}
 
@@ -1075,7 +1072,8 @@ void dhcpoffer (packet)
 		return;
 	}
 
-	sprintf (obuf, "%s from %s", name, piaddr (packet -> client_addr));
+	snprintf (obuf, sizeof(obuf),
+		"%s from %s", name, piaddr (packet -> client_addr));
 
 
 	/* If this lease doesn't supply the minimum required parameters,
@@ -2582,13 +2580,18 @@ void client_envadd (struct client_state 
 {
 	char spbuf [1024];
 	char *s;
-	unsigned len, i;
+	int len;
 	struct string_list *val;
 	va_list list;
 
 	va_start (list, fmt);
 	len = vsnprintf (spbuf, sizeof spbuf, fmt, list);
 	va_end (list);
+
+/* Handle truncation on glibc 2.0.x or possible unexpected errors on others;
+ * avoid integer overflow in the addition below. */
+	if (len < 0 || len > 0x3fffffff)
+		return;
 
 	val = dmalloc (strlen (prefix) + strlen (name) + 1 /* = */ +
 		       len + sizeof *val, MDL);
diff -urp dhcp-3.0pl2.orig/common/bpf.c dhcp-3.0pl2/common/bpf.c
--- dhcp-3.0pl2.orig/common/bpf.c	Sun Apr  8 21:12:49 2001
+++ dhcp-3.0pl2/common/bpf.c	Fri Jun 11 04:22:22 2004
@@ -103,11 +103,7 @@ int if_register_bpf (info)
 
 	/* Open a BPF device */
 	for (b = 0; 1; b++) {
-#ifndef NO_SNPRINTF
 		snprintf(filename, sizeof(filename), BPF_FORMAT, b);
-#else
-		sprintf(filename, BPF_FORMAT, b);
-#endif
 		sock = open (filename, O_RDWR, 0);
 		if (sock < 0) {
 			if (errno == EBUSY) {
diff -urp dhcp-3.0pl2.orig/common/dns.c dhcp-3.0pl2/common/dns.c
--- dhcp-3.0pl2.orig/common/dns.c	Thu Jun 21 23:34:54 2001
+++ dhcp-3.0pl2/common/dns.c	Fri Jun 11 04:25:53 2004
@@ -544,15 +544,9 @@ isc_result_t ddns_update_a (struct data_
 
 	if (ddns_addr.len != 4)
 		return ISC_R_INVALIDARG;
-#ifndef NO_SNPRINTF
-	snprintf (ddns_address, 16, "%d.%d.%d.%d",
+	snprintf (ddns_address, sizeof(ddns_address), "%d.%d.%d.%d",
 		  ddns_addr.iabuf[0], ddns_addr.iabuf[1],
 		  ddns_addr.iabuf[2], ddns_addr.iabuf[3]);
-#else
-	sprintf (ddns_address, "%d.%d.%d.%d",
-		 ddns_addr.iabuf[0], ddns_addr.iabuf[1],
-		 ddns_addr.iabuf[2], ddns_addr.iabuf[3]);
-#endif
 
 	/*
 	 * When a DHCP client or server intends to update an A RR, it first
@@ -769,15 +763,9 @@ isc_result_t ddns_remove_a (struct data_
 	if (ddns_addr.len != 4)
 		return ISC_R_INVALIDARG;
 
-#ifndef NO_SNPRINTF
-	snprintf (ddns_address, 16, "%d.%d.%d.%d",
+	snprintf (ddns_address, sizeof(ddns_address), "%d.%d.%d.%d",
 		  ddns_addr.iabuf[0], ddns_addr.iabuf[1],
 		  ddns_addr.iabuf[2], ddns_addr.iabuf[3]);
-#else
-	sprintf (ddns_address, "%d.%d.%d.%d",
-		 ddns_addr.iabuf[0], ddns_addr.iabuf[1],
-		 ddns_addr.iabuf[2], ddns_addr.iabuf[3]);
-#endif
 
 
 	/*
diff -urp dhcp-3.0pl2.orig/common/parse.c dhcp-3.0pl2/common/parse.c
--- dhcp-3.0pl2.orig/common/parse.c	Tue Jun 26 18:33:32 2001
+++ dhcp-3.0pl2/common/parse.c	Fri Jun 11 04:05:59 2004
@@ -4751,13 +4751,8 @@ int parse_warn (struct parse *cfile, con
 	unsigned i, lix;
 	
 	do_percentm (mbuf, fmt);
-#ifndef NO_SNPRINTF
 	snprintf (fbuf, sizeof fbuf, "%s line %d: %s",
 		  cfile -> tlname, cfile -> lexline, mbuf);
-#else
-	sprintf (fbuf, "%s line %d: %s",
-		 cfile -> tlname, cfile -> lexline, mbuf);
-#endif
 	
 	va_start (list, fmt);
 	vsnprintf (mbuf, sizeof mbuf, fbuf, list);
diff -urp dhcp-3.0pl2.orig/common/print.c dhcp-3.0pl2/common/print.c
--- dhcp-3.0pl2.orig/common/print.c	Tue Apr 30 04:35:37 2002
+++ dhcp-3.0pl2/common/print.c	Fri Jun 11 04:09:28 2004
@@ -455,7 +455,7 @@ static unsigned print_subexpression (exp
 	      case expr_check:
 		rv = 10 + strlen (expr -> data.check -> name);
 		if (len > rv) {
-			sprintf (buf, "(check %s)",
+			snprintf (buf, len, "(check %s)",
 				 expr -> data.check -> name);
 			return rv;
 		}
@@ -562,7 +562,7 @@ static unsigned print_subexpression (exp
 	      case expr_host_lookup:
 		rv = 15 + strlen (expr -> data.host_lookup -> hostname);
 		if (len > rv) {
-			sprintf (buf, "(dns-lookup %s)",
+			snprintf (buf, len, "(dns-lookup %s)",
 				 expr -> data.host_lookup -> hostname);
 			return rv;
 		}
@@ -646,7 +646,7 @@ static unsigned print_subexpression (exp
 		rv = strlen (s) + 2 + (strlen (expr -> data.option -> name) +
 			   strlen (expr -> data.option -> universe -> name));
 		if (len > rv) {
-			sprintf (buf, "(option %s.%s)",
+			snprintf (buf, len, "(option %s.%s)",
 				 expr -> data.option -> universe -> name,
 				 expr -> data.option -> name);
 			return rv;
@@ -782,7 +782,7 @@ static unsigned print_subexpression (exp
 		rv = 10 + (strlen (expr -> data.option -> name) +
 			   strlen (expr -> data.option -> universe -> name));
 		if (len > rv) {
-			sprintf (buf, "(exists %s.%s)",
+			snprintf (buf, len, "(exists %s.%s)",
 				 expr -> data.option -> universe -> name,
 				 expr -> data.option -> name);
 			return rv;
@@ -792,7 +792,8 @@ static unsigned print_subexpression (exp
 	      case expr_variable_exists:
 		rv = 10 + strlen (expr -> data.variable);
 		if (len > rv) {
-			sprintf (buf, "(defined %s)", expr -> data.variable);
+			snprintf (buf, len,
+				"(defined %s)", expr -> data.variable);
 			return rv;
 		}
 		break;
@@ -800,7 +801,7 @@ static unsigned print_subexpression (exp
 	      case expr_variable_reference:
 		rv = strlen (expr -> data.variable);
 		if (len > rv) {
-			sprintf (buf, "%s", expr -> data.variable);
+			snprintf (buf, len, "%s", expr -> data.variable);
 			return rv;
 		}
 		break;
diff -urp dhcp-3.0pl2.orig/common/upf.c dhcp-3.0pl2/common/upf.c
--- dhcp-3.0pl2.orig/common/upf.c	Fri Sep  1 23:03:39 2000
+++ dhcp-3.0pl2/common/upf.c	Fri Jun 11 04:23:08 2004
@@ -88,11 +88,7 @@ int if_register_upf (info)
 
 	/* Open a UPF device */
 	for (b = 0; 1; b++) {
-#ifndef NO_SNPRINTF
 		snprintf(filename, sizeof(filename), "/dev/pf/pfilt%d", b);
-#else
-		sprintf(filename, "/dev/pf/pfilt%d", b);
-#endif
 		sock = open (filename, O_RDWR, 0);
 		if (sock < 0) {
 			if (errno == EBUSY) {
diff -urp dhcp-3.0pl2.orig/dst/dst_support.c dhcp-3.0pl2/dst/dst_support.c
--- dhcp-3.0pl2.orig/dst/dst_support.c	Thu Feb 22 07:22:08 2001
+++ dhcp-3.0pl2/dst/dst_support.c	Fri Jun 11 04:10:35 2004
@@ -396,8 +396,8 @@ dst_s_build_filename(char *filename, con
 	if (filename_length < 1 + strlen(name) + 4 + 6 + 1 + strlen(suffix))
 		return (-1);
 	my_id = id;
-	sprintf(filename, "K%s+%03d+%05d.%s", name, alg, my_id,
-		(const char *) suffix);
+	snprintf(filename, filename_length, "K%s+%03d+%05d.%s",
+		name, alg, my_id, (const char *) suffix);
 	if (strrchr(filename, '/'))
 		return (-1);
 	if (strrchr(filename, '\\'))
diff -urp dhcp-3.0pl2.orig/includes/cf/linux.h dhcp-3.0pl2/includes/cf/linux.h
--- dhcp-3.0pl2.orig/includes/cf/linux.h	Thu May 10 19:28:55 2001
+++ dhcp-3.0pl2/includes/cf/linux.h	Fri Jun 11 04:21:46 2004
@@ -105,9 +105,6 @@ extern int h_errno;
 #define VA_start(list, last) va_start (list, last)
 #define va_dcl
 
-#define vsnprintf(buf, size, fmt, list) vsprintf (buf, fmt, list)
-#define NO_SNPRINTF
-
 #define VOIDPTR	void *
 
 #define EOL	'\n'
diff -urp dhcp-3.0pl2.orig/minires/res_query.c dhcp-3.0pl2/minires/res_query.c
--- dhcp-3.0pl2.orig/minires/res_query.c	Tue Jan 16 22:33:15 2001
+++ dhcp-3.0pl2/minires/res_query.c	Fri Jun 11 04:10:56 2004
@@ -369,7 +369,7 @@ res_nquerydomain(res_state statp,
 			RES_SET_H_ERRNO(statp, NO_RECOVERY);
 			return ISC_R_NOSPACE;
 		}
-		sprintf(nbuf, "%s.%s", name, domain);
+		snprintf(nbuf, sizeof(nbuf), "%s.%s", name, domain);
 	}
 	return res_nquery(statp,
 			  longname, class, type, answer, anslen, ansret);
diff -urp dhcp-3.0pl2.orig/server/bootp.c dhcp-3.0pl2/server/bootp.c
--- dhcp-3.0pl2.orig/server/bootp.c	Fri Jun 22 01:49:49 2001
+++ dhcp-3.0pl2/server/bootp.c	Fri Jun 11 04:11:21 2004
@@ -77,7 +77,7 @@ void bootp (packet)
 	if (packet -> raw -> op != BOOTREQUEST)
 		return;
 
-	sprintf (msgbuf, "BOOTREQUEST from %s via %s",
+	snprintf (msgbuf, sizeof(msgbuf), "BOOTREQUEST from %s via %s",
 		 print_hw_addr (packet -> raw -> htype,
 				packet -> raw -> hlen,
 				packet -> raw -> chaddr),
diff -urp dhcp-3.0pl2.orig/server/db.c dhcp-3.0pl2/server/db.c
--- dhcp-3.0pl2.orig/server/db.c	Fri Jun 22 23:58:08 2001
+++ dhcp-3.0pl2/server/db.c	Fri Jun 11 04:12:25 2004
@@ -766,7 +766,7 @@ int new_lease_file ()
 
 	/* Make a temporary lease file... */
 	GET_TIME (&t);
-	sprintf (newfname, "%s.%d", path_dhcpd_db, (int)t);
+	snprintf (newfname, sizeof(newfname), "%s.%d", path_dhcpd_db, (int)t);
 	db_fd = open (newfname, O_WRONLY | O_TRUNC | O_CREAT, 0664);
 	if (db_fd < 0) {
 		log_error ("Can't create new lease file: %m");
@@ -817,7 +817,7 @@ int new_lease_file ()
 	if (!trace_playback ()) {
 #endif
 	    /* Get the old database out of the way... */
-	    sprintf (backfname, "%s~", path_dhcpd_db);
+	    snprintf (backfname, sizeof(backfname), "%s~", path_dhcpd_db);
 	    if (unlink (backfname) < 0 && errno != ENOENT) {
 		log_error ("Can't remove old lease database backup %s: %m",
 			   backfname);
diff -urp dhcp-3.0pl2.orig/server/ddns.c dhcp-3.0pl2/server/ddns.c
--- dhcp-3.0pl2.orig/server/ddns.c	Thu Jun 28 23:33:20 2001
+++ dhcp-3.0pl2/server/ddns.c	Fri Jun 11 04:23:27 2004
@@ -433,21 +433,12 @@ int ddns_updates (struct packet *packet,
 				 d1.len + 17, MDL);
 		if (ddns_rev_name.buffer) {
 			ddns_rev_name.data = ddns_rev_name.buffer -> data;
-#ifndef NO_SNPRINTF
 			snprintf ((char *)ddns_rev_name.buffer -> data, 17,
 				  "%d.%d.%d.%d.",
 				  lease -> ip_addr . iabuf[3],
 				  lease -> ip_addr . iabuf[2],
 				  lease -> ip_addr . iabuf[1],
 				  lease -> ip_addr . iabuf[0]);
-#else
-			sprintf ((char *)ddns_rev_name.buffer -> data,
-				 "%d.%d.%d.%d.",
-				 lease -> ip_addr . iabuf[3],
-				 lease -> ip_addr . iabuf[2],
-				 lease -> ip_addr . iabuf[1],
-				 lease -> ip_addr . iabuf[0]);
-#endif
 			ddns_rev_name.len =
 				strlen ((const char *)ddns_rev_name.data);
 			data_string_append (&ddns_rev_name, &d1);
diff -urp dhcp-3.0pl2.orig/server/dhcp.c dhcp-3.0pl2/server/dhcp.c
--- dhcp-3.0pl2.orig/server/dhcp.c	Thu Oct  4 22:21:00 2001
+++ dhcp-3.0pl2/server/dhcp.c	Fri Jun 11 04:15:01 2004
@@ -89,13 +89,8 @@ void dhcp (packet)
 		    packet -> packet_type < dhcp_type_name_max - 1) {
 			s = dhcp_type_names [packet -> packet_type - 1];
 		} else {
-#if defined (HAVE_SNPRINTF)
 			snprintf (typebuf, sizeof typebuf,
 				  "type %d", packet -> packet_type);
-#else
-			sprintf (typebuf, 
-				  "type %d", packet -> packet_type);
-#endif
 			s = typebuf;
 		}
 		
@@ -275,7 +270,7 @@ void dhcpdiscover (packet, ms_nulltp)
 		s = (char *)0;
 
 	/* Say what we're doing... */
-	sprintf (msgbuf, "DHCPDISCOVER from %s %s%s%svia %s",
+	snprintf (msgbuf, sizeof(msgbuf), "DHCPDISCOVER from %s %s%s%svia %s",
 		 (packet -> raw -> htype
 		  ? print_hw_addr (packet -> raw -> htype,
 				   packet -> raw -> hlen,
@@ -463,13 +458,14 @@ void dhcprequest (packet, ms_nulltp, ip_
 		sip.len = 4;
 		memcpy (sip.iabuf, data.data, 4);
 		data_string_forget (&data, MDL);
-		sprintf (smbuf, " (%s)", piaddr (sip));
+		snprintf (smbuf, sizeof(smbuf), " (%s)", piaddr (sip));
 		have_server_identifier = 1;
 	} else
 		smbuf [0] = 0;
 
 	/* Say what we're doing... */
-	sprintf (msgbuf, "DHCPREQUEST for %s%s from %s %s%s%svia %s",
+	snprintf (msgbuf, sizeof(msgbuf),
+		"DHCPREQUEST for %s%s from %s %s%s%svia %s",
 		 piaddr (cip), smbuf,
 		 (packet -> raw -> htype
 		  ? print_hw_addr (packet -> raw -> htype,
@@ -720,7 +716,7 @@ void dhcprelease (packet, ms_nulltp)
 		s = (char *)0;
 
 	/* Say what we're doing... */
-	sprintf (msgbuf,
+	snprintf (msgbuf, sizeof(msgbuf),
 		 "DHCPRELEASE of %s from %s %s%s%svia %s (%sfound)",
 		 inet_ntoa (packet -> raw -> ciaddr),
 		 (packet -> raw -> htype
@@ -804,7 +800,8 @@ void dhcpdecline (packet, ms_nulltp)
 	else
 		s = (char *)0;
 
-	sprintf (msgbuf, "DHCPDECLINE of %s from %s %s%s%svia %s",
+	snprintf (msgbuf, sizeof(msgbuf),
+		"DHCPDECLINE of %s from %s %s%s%svia %s",
 		 piaddr (cip),
 		 (packet -> raw -> htype
 		  ? print_hw_addr (packet -> raw -> htype,
@@ -915,7 +912,7 @@ void dhcpinform (packet, ms_nulltp)
 		memcpy (cip.iabuf, &packet -> raw -> ciaddr, 4);
 	}
 
-	sprintf (msgbuf, "DHCPINFORM from %s via %s",
+	snprintf (msgbuf, sizeof(msgbuf), "DHCPINFORM from %s via %s",
 		 piaddr (cip), packet -> interface -> name);
 
 	/* If the IP source address is zero, don't respond. */
diff -urp dhcp-3.0pl2.orig/server/failover.c dhcp-3.0pl2/server/failover.c
--- dhcp-3.0pl2.orig/server/failover.c	Thu Aug 23 16:25:51 2001
+++ dhcp-3.0pl2/server/failover.c	Fri Jun 11 04:17:03 2004
@@ -3375,13 +3375,7 @@ failover_option_t *dhcp_failover_option_
 	char tbuf [256];
 
 	va_start (va, fmt);
-#if defined (HAVE_SNPRINTF)
-	/* Presumably if we have snprintf, we also have
-	   vsnprintf. */
 	vsnprintf (tbuf, sizeof tbuf, fmt, va);
-#else
-	vsprintf (tbuf, fmt, va);
-#endif
 	va_end (va);
 
 	return dhcp_failover_make_option (code, obuf, obufix, obufmax,
@@ -3480,7 +3474,7 @@ failover_option_t *dhcp_failover_make_op
 	putUShort (&option.data [2], size - 4);
 
 #if defined (DEBUG_FAILOVER_MESSAGES)	
-	sprintf (tbuf, " (%s<%d>", info -> name, option.count);
+	snprintf (tbuf, sizeof(tbuf), " (%s<%d>", info -> name, option.count);
 	failover_print (obuf, obufix, obufmax, tbuf);
 #endif
 
@@ -3490,7 +3484,7 @@ failover_option_t *dhcp_failover_make_op
 		for (i = 0; i < count; i++) {
 			val = va_arg (va, unsigned);
 #if defined (DEBUG_FAILOVER_MESSAGES)
-			sprintf (tbuf, " %d", val);
+			snprintf (tbuf, sizeof(tbuf), " %d", val);
 			failover_print (obuf, obufix, obufmax, tbuf);
 #endif
 			option.data [i + 4] = val;
@@ -3550,7 +3544,7 @@ failover_option_t *dhcp_failover_make_op
 	      case FT_TEXT_OR_BYTES:
 	      case FT_TEXT:
 #if defined (DEBUG_FAILOVER_MESSAGES)
-		sprintf (tbuf, "\"%s\"", txt);
+		snprintf (tbuf, sizeof(tbuf), "\"%s\"", txt);
 		failover_print (obuf, obufix, obufmax, tbuf);
 #endif
 		memcpy (&option.data [4], txt, count);
@@ -4453,19 +4447,11 @@ isc_result_t dhcp_failover_process_bind_
 		}
 		if (new_binding_state != msg -> binding_status) {
 			char outbuf [100];
-#if !defined (NO_SNPRINTF)
 			snprintf (outbuf, sizeof outbuf,
 				  "%s: invalid state transition: %s to %s",
 				  piaddr (lease -> ip_addr),
 				  binding_state_print (lease -> binding_state),
 				  binding_state_print (msg -> binding_status));
-#else
-			sprintf (outbuf,
-				 "%s: invalid state transition: %s to %s",
-				 piaddr (lease -> ip_addr),
-				 binding_state_print (lease -> binding_state),
-				 binding_state_print (msg -> binding_status));
-#endif
 			dhcp_failover_send_bind_ack (state, msg,
 						     FTR_FATAL_CONFLICT,
 						     outbuf);
