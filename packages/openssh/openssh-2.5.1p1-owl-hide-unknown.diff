diff -ur openssh-2.5.1p1.orig/auth.c openssh-2.5.1p1/auth.c
--- openssh-2.5.1p1.orig/auth.c	Thu Feb 15 06:08:27 2001
+++ openssh-2.5.1p1/auth.c	Wed Feb 28 08:32:22 2001
@@ -208,8 +208,10 @@
 	authlog("%s %s for %s%.100s from %.200s port %d%s",
 	    authmsg,
 	    method,
-	    authctxt->valid ? "" : "illegal user ",
-	    authctxt->valid && authctxt->pw->pw_uid == 0 ? "ROOT" : authctxt->user,
+	    !authctxt->known ? "an unknown user" :
+	    (!authctxt->valid ? "illegal user " :
+	    (authctxt->pw->pw_uid == 0 ? "ROOT user " : "")),
+	    authctxt->known ? authctxt->user : "",
 	    get_remote_ipaddr(),
 	    get_remote_port(),
 	    info);
diff -ur openssh-2.5.1p1.orig/auth.h openssh-2.5.1p1/auth.h
--- openssh-2.5.1p1.orig/auth.h	Sun Feb 18 09:01:00 2001
+++ openssh-2.5.1p1/auth.h	Wed Feb 28 08:32:22 2001
@@ -40,6 +40,7 @@
 	int success;
 	int postponed;
 	int valid;
+	int known;
 	int attempt;
 	int failures;
 	char *user;
diff -ur openssh-2.5.1p1.orig/auth1.c openssh-2.5.1p1/auth1.c
--- openssh-2.5.1p1.orig/auth1.c	Sun Feb 18 09:01:00 2001
+++ openssh-2.5.1p1/auth1.c	Wed Feb 28 08:32:22 2001
@@ -386,6 +386,7 @@
 
 	/* Verify that the user is a valid user. */
 	pw = getpwnam(user);
+	authctxt->known = (pw != NULL);
 	if (pw && allowed_user(pw)) {
 		authctxt->valid = 1;
 		pw = pwcopy(pw);
@@ -395,7 +396,7 @@
 	}
 	authctxt->pw = pw;
 
-	setproctitle("%s", pw ? user : "unknown");
+	setproctitle("%s", authctxt->known ? user : "unknown user");
 
 #ifdef USE_PAM
 	if (pw)
diff -ur openssh-2.5.1p1.orig/auth2.c openssh-2.5.1p1/auth2.c
--- openssh-2.5.1p1.orig/auth2.c	Sun Feb 18 22:13:33 2001
+++ openssh-2.5.1p1/auth2.c	Wed Feb 28 08:32:22 2001
@@ -190,6 +190,7 @@
 		/* setup auth context */
 		struct passwd *pw = NULL;
 		pw = getpwnam(user);
+		authctxt->known = (pw != NULL);
 		if (pw && allowed_user(pw) && strcmp(service, "ssh-connection")==0) {
 			authctxt->pw = pwcopy(pw);
 			authctxt->valid = 1;
@@ -198,12 +199,14 @@
 			start_pam(pw->pw_name);
 #endif
 		} else {
+			authctxt->pw = NULL;
+			authctxt->valid = 0;
 			log("input_userauth_request: illegal user %s", user);
 #ifdef USE_PAM
 			start_pam("NOUSER");
 #endif
 		}
-		setproctitle("%s", pw ? user : "unknown");
+		setproctitle("%s", authctxt->known ? user : "unknown user");
 		authctxt->user = xstrdup(user);
 		authctxt->service = xstrdup(service);
 		authctxt->style = style ? xstrdup(style) : NULL; /* currently unused */
