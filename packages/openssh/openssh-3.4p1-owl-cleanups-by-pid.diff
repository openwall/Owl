diff -ur openssh-3.4p1.orig/auth-pam.c openssh-3.4p1/auth-pam.c
--- openssh-3.4p1.orig/auth-pam.c	Wed May  8 06:27:56 2002
+++ openssh-3.4p1/auth-pam.c	Fri Jul  5 22:06:27 2002
@@ -177,7 +177,7 @@
 {
 	int pam_retval = PAM_SUCCESS;
 
-	if (__pamh && session_opened) {
+	if (__pamh && getpid() == session_opened) {
 		pam_retval = pam_close_session(__pamh, 0);
 		if (pam_retval != PAM_SUCCESS)
 			log("Cannot close PAM session[%d]: %.200s",
@@ -291,7 +291,7 @@
 		fatal("PAM session setup failed[%d]: %.200s",
 		    pam_retval, PAM_STRERROR(__pamh, pam_retval));
 
-	session_opened = 1;
+	session_opened = getpid();
 }
 
 /* Set PAM credentials */
diff -ur openssh-3.4p1.orig/packet.c openssh-3.4p1/packet.c
--- openssh-3.4p1.orig/packet.c	Mon Jun 24 01:49:25 2002
+++ openssh-3.4p1/packet.c	Fri Jul  5 22:06:26 2002
@@ -126,6 +126,15 @@
 /* roundup current message to extra_pad bytes */
 static u_char extra_pad = 0;
 
+static pid_t packet_cleanup_pid;
+
+static void
+packet_cleanup(void)
+{
+	if (getpid() == packet_cleanup_pid)
+		packet_close();
+}
+
 /*
  * Sets the descriptors used for communication.  Disables encryption until
  * packet_set_encryption_key is called.
@@ -149,7 +158,8 @@
 		buffer_init(&incoming_packet);
 	}
 	/* Kludge: arrange the close function to be called from fatal(). */
-	fatal_add_cleanup((void (*) (void *)) packet_close, NULL);
+	packet_cleanup_pid = getpid();
+	fatal_add_cleanup((void (*) (void *)) packet_cleanup, NULL);
 }
 
 /* Returns 1 if remote host is connected via socket, 0 if not. */
