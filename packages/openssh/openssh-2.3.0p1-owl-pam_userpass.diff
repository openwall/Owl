diff -urN openssh-2.3.0p1.orig/Makefile.in openssh-2.3.0p1/Makefile.in
--- openssh-2.3.0p1.orig/Makefile.in	Mon Nov  6 00:13:45 2000
+++ openssh-2.3.0p1/Makefile.in	Mon Nov 20 09:12:44 2000
@@ -41,7 +41,7 @@
 
 SSHOBJS= ssh.o sshconnect.o sshconnect1.o sshconnect2.o log-client.o readconf.o clientloop.o
 
-SSHDOBJS= sshd.o auth.o auth1.o auth2.o auth-skey.o auth2-skey.o auth-rhosts.o auth-options.o auth-krb4.o auth-pam.o auth-passwd.o auth-rsa.o auth-rh-rsa.o dh.o pty.o log-server.o login.o loginrec.o servconf.o serverloop.o md5crypt.o session.o
+SSHDOBJS= sshd.o auth.o auth1.o auth2.o auth-skey.o auth2-skey.o auth-rhosts.o auth-options.o auth-krb4.o auth-pam.o appl_userpass.o auth-passwd.o auth-rsa.o auth-rh-rsa.o dh.o pty.o log-server.o login.o loginrec.o servconf.o serverloop.o md5crypt.o session.o
 
 TROFFMAN	= scp.1 ssh-add.1 ssh-agent.1 ssh-keygen.1 ssh.1 sshd.8 sftp-server.8
 CATMAN		= scp.0 ssh-add.0 ssh-agent.0 ssh-keygen.0 ssh.0 sshd.0 sftp-server.0
diff -urN openssh-2.3.0p1.orig/_pam_userpass.h openssh-2.3.0p1/_pam_userpass.h
--- openssh-2.3.0p1.orig/_pam_userpass.h	Thu Jan  1 03:00:00 1970
+++ openssh-2.3.0p1/_pam_userpass.h	Mon Nov 20 09:12:44 2000
@@ -0,0 +1,12 @@
+#ifndef __PAM_USERPASS_H
+#define __PAM_USERPASS_H
+
+#define USERPASS_AGENT_ID		"userpass"
+#define USERPASS_AGENT_ID_LENGTH	8
+
+#define USERPASS_USER_MASK		0x03
+#define USERPASS_USER_REQUIRED		1
+#define USERPASS_USER_KNOWN		2
+#define USERPASS_USER_FIXED		3
+
+#endif
diff -urN openssh-2.3.0p1.orig/appl_userpass.c openssh-2.3.0p1/appl_userpass.c
--- openssh-2.3.0p1.orig/appl_userpass.c	Thu Jan  1 03:00:00 1970
+++ openssh-2.3.0p1/appl_userpass.c	Mon Nov 20 09:12:44 2000
@@ -0,0 +1,51 @@
+#include <string.h>
+#include <stdlib.h>
+
+#include <security/pam_appl.h>
+#include <security/pam_client.h>
+
+#include "_pam_userpass.h"
+#include "pam_userpass.h"
+
+int pam_userpass_conv(int num_msg, const struct pam_message **msg,
+	struct pam_response **resp, void *appdata_ptr)
+{
+	pam_userpass_t *userpass = (pam_userpass_t *)appdata_ptr;
+	pamc_bp_t prompt;
+	char *data;
+	char flags;
+
+	if (num_msg != 1 || msg[0]->msg_style != PAM_BINARY_PROMPT)
+		return PAM_CONV_ERR;
+
+	prompt = (pamc_bp_t)msg[0]->msg;
+	data = PAM_BP_DATA(prompt);
+
+	if (PAM_BP_CONTROL(prompt) != PAM_BPC_SELECT ||
+	    strncmp(data, USERPASS_AGENT_ID "/", USERPASS_AGENT_ID_LENGTH + 1))
+		return PAM_CONV_ERR;
+
+	flags = data[USERPASS_AGENT_ID_LENGTH + 1];
+	data += USERPASS_AGENT_ID_LENGTH + 1 + 1;
+
+	if ((flags & USERPASS_USER_MASK) == USERPASS_USER_FIXED &&
+	    strcmp(data, userpass->user))
+		return PAM_CONV_AGAIN;
+
+	if (!(*resp = malloc(sizeof(struct pam_response))))
+		return PAM_CONV_ERR;
+
+	prompt = NULL;
+	PAM_BP_RENEW(&prompt, PAM_BPC_DONE,
+		strlen(userpass->user) + 1 + strlen(userpass->pass));
+	data = PAM_BP_DATA(prompt);
+
+	strcpy(data, userpass->user);
+	data += strlen(data) + 1;
+	memcpy(data, userpass->pass, strlen(userpass->pass));
+
+	(*resp)[0].resp_retcode = 0;
+	(*resp)[0].resp = (char *)prompt;
+
+	return PAM_SUCCESS;
+}
diff -urN openssh-2.3.0p1.orig/auth-pam.c openssh-2.3.0p1/auth-pam.c
--- openssh-2.3.0p1.orig/auth-pam.c	Sat Oct 14 19:08:49 2000
+++ openssh-2.3.0p1/auth-pam.c	Mon Nov 20 09:14:05 2000
@@ -29,6 +29,9 @@
 #include "xmalloc.h"
 #include "servconf.h"
 
+#include <security/pam_misc.h>
+#include "pam_userpass.h"
+
 RCSID("$Id: auth-pam.c,v 1.18 2000/10/14 15:08:49 stevesk Exp $");
 
 #define NEW_AUTHTOK_MSG \
@@ -41,12 +44,12 @@
 void pam_msg_cat(const char *msg);
 
 /* module-local variables */
+static pam_userpass_t userpass;
 static struct pam_conv conv = {
 	pamconv,
-	NULL
+	&userpass
 };
 static pam_handle_t *pamh = NULL;
-static const char *pampasswd = NULL;
 static char *pam_msg = NULL;
 
 /* states for pamconv() */
@@ -71,6 +74,11 @@
 static int pamconv(int num_msg, const struct pam_message **msg,
 	struct pam_response **resp, void *appdata_ptr)
 {
+	if (pamstate == INITIAL_LOGIN)
+		return pam_userpass_conv(num_msg, msg, resp, appdata_ptr);
+	return misc_conv(num_msg, msg, resp, appdata_ptr);
+
+#if 0
 	struct pam_response *reply;
 	int count;
 	char buf[1024];
@@ -128,6 +136,7 @@
 	*resp = reply;
 
 	return PAM_SUCCESS;
+#endif
 }
 
 /* Called at exit to cleanly shutdown PAM */
@@ -171,7 +180,8 @@
 	if (*password == '\0' && options.permit_empty_passwd == 0)
 		return 0;
 
-	pampasswd = password;
+	userpass.user = pw->pw_name;
+	userpass.pass = password;
 	
 	pamstate = INITIAL_LOGIN;
 	pam_retval = pam_authenticate(pamh, 0);
@@ -279,16 +289,11 @@
 
 	if (password_change_required) {
 		pamstate = OTHER;
-		/*
-		 * XXX: should we really loop forever?
-		 */
-		do {
-			pam_retval = pam_chauthtok(pamh, PAM_CHANGE_EXPIRED_AUTHTOK);
-			if (pam_retval != PAM_SUCCESS) {
-				log("PAM pam_chauthtok failed[%d]: %.200s", 
-					pam_retval, PAM_STRERROR(pamh, pam_retval));
-			}
-		} while (pam_retval != PAM_SUCCESS);
+		pam_retval = pam_chauthtok(pamh, PAM_CHANGE_EXPIRED_AUTHTOK);
+		if (pam_retval != PAM_SUCCESS) {
+			fatal("PAM pam_chauthtok failed[%d]: %.200s", 
+				pam_retval, PAM_STRERROR(pamh, pam_retval));
+		}
 	}
 }
 
diff -urN openssh-2.3.0p1.orig/pam_userpass.h openssh-2.3.0p1/pam_userpass.h
--- openssh-2.3.0p1.orig/pam_userpass.h	Thu Jan  1 03:00:00 1970
+++ openssh-2.3.0p1/pam_userpass.h	Mon Nov 20 09:12:44 2000
@@ -0,0 +1,14 @@
+#ifndef _PAM_USERPASS_H
+#define _PAM_USERPASS_H
+
+#include <security/pam_appl.h>
+
+typedef struct {
+	char *user;
+	char *pass;
+} pam_userpass_t;
+
+extern int pam_userpass_conv(int num_msg, const struct pam_message **msg,
+	struct pam_response **resp, void *appdata_ptr);
+
+#endif
