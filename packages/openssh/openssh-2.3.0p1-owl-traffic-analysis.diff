diff -ur openssh-2.3.0p1.orig/serverloop.c openssh-2.3.0p1/serverloop.c
--- openssh-2.3.0p1.orig/serverloop.c	Sat Oct 28 07:19:58 2000
+++ openssh-2.3.0p1/serverloop.c	Fri Jan 26 04:47:26 2001
@@ -332,6 +332,7 @@
 void
 process_output(fd_set * writeset)
 {
+	struct termios tio;
 	int len;
 
 	/* Write buffered data to program stdin. */
@@ -351,7 +352,16 @@
 #endif
 			fdin = -1;
 		} else {
-			/* Successful write.  Consume the data from the buffer. */
+			/* Successful write. */
+			if (tcgetattr(fdin, &tio) == 0 &&
+			    !(tio.c_lflag & ECHO)) {
+				/* Simulate echo to reduce the impact of traffic analysis. */
+				packet_start(SSH_MSG_IGNORE);
+				memset(buffer_ptr(&stdin_buffer), 0, len);
+				packet_put_string(buffer_ptr(&stdin_buffer), len);
+				packet_send();
+			}
+			/* Consume the data from the buffer. */
 			buffer_consume(&stdin_buffer, len);
 			/* Update the count of bytes written to the program. */
 			stdin_bytes += len;
diff -ur openssh-2.3.0p1.orig/sshconnect1.c openssh-2.3.0p1/sshconnect1.c
--- openssh-2.3.0p1.orig/sshconnect1.c	Sat Oct 14 09:23:12 2000
+++ openssh-2.3.0p1/sshconnect1.c	Fri Jan 26 04:28:01 2001
@@ -40,6 +40,20 @@
 extern Options options;
 extern char *__progname;
 
+void
+ssh1_put_password(char *password)
+{
+	int size;
+	char *padded;
+
+	size = (strlen(password) + (1 + (32 - 1))) & ~(32 - 1);
+	padded = xmalloc(size);
+	strlcpy(padded, password, size);
+	packet_put_string(padded, size);
+	memset(padded, 0, size);
+	xfree(padded);
+}
+
 /*
  * Checks if the user has an authentication agent, and if so, tries to
  * authenticate using the agent.
@@ -636,7 +650,7 @@
 			error("Permission denied, please try again.");
 		response = read_passphrase("Response: ", 0);
 		packet_start(SSH_CMSG_AUTH_TIS_RESPONSE);
-		packet_put_string(response, strlen(response));
+		ssh1_put_password(response);
 		memset(response, 0, strlen(response));
 		xfree(response);
 		packet_send();
@@ -669,7 +683,7 @@
 			error("Permission denied, please try again.");
 		password = read_passphrase(prompt, 0);
 		packet_start(SSH_CMSG_AUTH_PASSWORD);
-		packet_put_string(password, strlen(password));
+		ssh1_put_password(password);
 		memset(password, 0, strlen(password));
 		xfree(password);
 		packet_send();
